{
  "version": 3,
  "sources": ["../../../../../../node_modules/@angular/ssr/third_party/beasties/index.js", "../../../../../../node_modules/@angular/ssr/fesm2022/ssr.mjs"],
  "sourcesContent": ["function createNotImplementedError(name) {\n  throw new Error(`[unenv] ${name} is not implemented yet!`);\n}\nfunction notImplemented(name) {\n  const fn = () => {\n    throw createNotImplementedError(name);\n  };\n  return Object.assign(fn, { __unenv__: true });\n}\n\nconst access = notImplemented(\"fs.access\");\nconst copyFile = notImplemented(\"fs.copyFile\");\nconst cp = notImplemented(\"fs.cp\");\nconst open = notImplemented(\"fs.open\");\nconst opendir = notImplemented(\"fs.opendir\");\nconst rename = notImplemented(\"fs.rename\");\nconst truncate = notImplemented(\"fs.truncate\");\nconst rm = notImplemented(\"fs.rm\");\nconst rmdir = notImplemented(\"fs.rmdir\");\nconst mkdir = notImplemented(\"fs.mkdir\");\nconst readdir = notImplemented(\"fs.readdir\");\nconst readlink = notImplemented(\"fs.readlink\");\nconst symlink = notImplemented(\"fs.symlink\");\nconst lstat = notImplemented(\"fs.lstat\");\nconst stat = notImplemented(\"fs.stat\");\nconst link = notImplemented(\"fs.link\");\nconst unlink = notImplemented(\"fs.unlink\");\nconst chmod = notImplemented(\"fs.chmod\");\nconst lchmod = notImplemented(\"fs.lchmod\");\nconst lchown = notImplemented(\"fs.lchown\");\nconst chown = notImplemented(\"fs.chown\");\nconst utimes = notImplemented(\"fs.utimes\");\nconst lutimes = notImplemented(\"fs.lutimes\");\nconst realpath = notImplemented(\"fs.realpath\");\nconst mkdtemp = notImplemented(\"fs.mkdtemp\");\nconst writeFile$1 = notImplemented(\"fs.writeFile\");\nconst appendFile = notImplemented(\"fs.appendFile\");\nconst readFile$1 = notImplemented(\"fs.readFile\");\nnotImplemented(\"fs.watch\");\nconst statfs = notImplemented(\"fs.statfs\");\n\nfunction notImplementedAsync(name) {\n  const fn = notImplemented(name);\n  fn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n  fn.native = fn;\n  return fn;\n}\nfunction callbackify(fn) {\n  const fnc = function(...args) {\n    const cb = args.pop();\n    fn().catch((error) => cb(error)).then((val) => cb(void 0, val));\n  };\n  fnc.__promisify__ = fn;\n  fnc.native = fnc;\n  return fnc;\n}\ncallbackify(access);\ncallbackify(appendFile);\ncallbackify(chown);\ncallbackify(chmod);\ncallbackify(copyFile);\ncallbackify(cp);\ncallbackify(lchown);\ncallbackify(lchmod);\ncallbackify(link);\ncallbackify(lstat);\ncallbackify(lutimes);\ncallbackify(mkdir);\ncallbackify(mkdtemp);\ncallbackify(realpath);\ncallbackify(open);\ncallbackify(opendir);\ncallbackify(readdir);\nconst readFile = callbackify(readFile$1);\ncallbackify(readlink);\ncallbackify(rename);\ncallbackify(rm);\ncallbackify(rmdir);\ncallbackify(stat);\ncallbackify(symlink);\ncallbackify(truncate);\ncallbackify(unlink);\ncallbackify(utimes);\nconst writeFile = callbackify(writeFile$1);\ncallbackify(statfs);\nnotImplementedAsync(\"fs.close\");\nnotImplementedAsync(\n  \"fs.createReadStream\"\n);\nnotImplementedAsync(\"fs.createWriteStream\");\nnotImplementedAsync(\"fs.exists\");\nnotImplementedAsync(\"fs.fchown\");\nnotImplementedAsync(\"fs.fchmod\");\nnotImplementedAsync(\"fs.fdatasync\");\nnotImplementedAsync(\"fs.fstat\");\nnotImplementedAsync(\"fs.fsync\");\nnotImplementedAsync(\"fs.ftruncate\");\nnotImplementedAsync(\"fs.futimes\");\nnotImplementedAsync(\"fs.lstatSync\");\nnotImplementedAsync(\"fs.read\");\nnotImplementedAsync(\"fs.readv\");\nnotImplementedAsync(\"fs.realpathSync\");\nnotImplementedAsync(\"fs.statSync\");\nnotImplementedAsync(\"fs.unwatchFile\");\nnotImplementedAsync(\"fs.watch\");\nnotImplementedAsync(\"fs.watchFile\");\nnotImplementedAsync(\"fs.write\");\nnotImplementedAsync(\"fs.writev\");\nnotImplementedAsync(\"fs._toUnixTimestamp\");\nnotImplementedAsync(\"fs.openAsBlob\");\nnotImplemented(\"fs.appendFileSync\");\nnotImplemented(\"fs.accessSync\");\nnotImplemented(\"fs.chownSync\");\nnotImplemented(\"fs.chmodSync\");\nnotImplemented(\"fs.closeSync\");\nnotImplemented(\"fs.copyFileSync\");\nnotImplemented(\"fs.cpSync\");\nnotImplemented(\"fs.fchownSync\");\nnotImplemented(\"fs.fchmodSync\");\nnotImplemented(\"fs.fdatasyncSync\");\nnotImplemented(\"fs.fstatSync\");\nnotImplemented(\"fs.fsyncSync\");\nnotImplemented(\"fs.ftruncateSync\");\nnotImplemented(\"fs.futimesSync\");\nnotImplemented(\"fs.lchownSync\");\nnotImplemented(\"fs.lchmodSync\");\nnotImplemented(\"fs.linkSync\");\nnotImplemented(\"fs.lutimesSync\");\nnotImplemented(\"fs.mkdirSync\");\nnotImplemented(\"fs.mkdtempSync\");\nnotImplemented(\"fs.openSync\");\nnotImplemented(\"fs.opendirSync\");\nnotImplemented(\"fs.readdirSync\");\nnotImplemented(\"fs.readSync\");\nnotImplemented(\"fs.readvSync\");\nnotImplemented(\"fs.readFileSync\");\nnotImplemented(\"fs.readlinkSync\");\nnotImplemented(\"fs.renameSync\");\nnotImplemented(\"fs.rmSync\");\nnotImplemented(\"fs.rmdirSync\");\nnotImplemented(\"fs.symlinkSync\");\nnotImplemented(\"fs.truncateSync\");\nnotImplemented(\"fs.unlinkSync\");\nnotImplemented(\"fs.utimesSync\");\nnotImplemented(\"fs.writeFileSync\");\nnotImplemented(\"fs.writeSync\");\nnotImplemented(\"fs.writevSync\");\nnotImplemented(\"fs.statfsSync\");\n\nconst _DRIVE_LETTER_START_RE = /^[A-Za-z]:\\//;\nfunction normalizeWindowsPath(input = \"\") {\n  if (!input) {\n    return input;\n  }\n  return input.replace(/\\\\/g, \"/\").replace(_DRIVE_LETTER_START_RE, (r) => r.toUpperCase());\n}\n\nconst _UNC_REGEX = /^[/\\\\]{2}/;\nconst _IS_ABSOLUTE_RE = /^[/\\\\](?![/\\\\])|^[/\\\\]{2}(?!\\.)|^[A-Za-z]:[/\\\\]/;\nconst _DRIVE_LETTER_RE = /^[A-Za-z]:$/;\nconst _ROOT_FOLDER_RE = /^\\/([A-Za-z]:)?$/;\nconst sep = \"/\";\nconst delimiter = \":\";\nconst normalize = function(path) {\n  if (path.length === 0) {\n    return \".\";\n  }\n  path = normalizeWindowsPath(path);\n  const isUNCPath = path.match(_UNC_REGEX);\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSeparator = path[path.length - 1] === \"/\";\n  path = normalizeString(path, !isPathAbsolute);\n  if (path.length === 0) {\n    if (isPathAbsolute) {\n      return \"/\";\n    }\n    return trailingSeparator ? \"./\" : \".\";\n  }\n  if (trailingSeparator) {\n    path += \"/\";\n  }\n  if (_DRIVE_LETTER_RE.test(path)) {\n    path += \"/\";\n  }\n  if (isUNCPath) {\n    if (!isPathAbsolute) {\n      return `//./${path}`;\n    }\n    return `//${path}`;\n  }\n  return isPathAbsolute && !isAbsolute(path) ? `/${path}` : path;\n};\nconst join = function(...arguments_) {\n  if (arguments_.length === 0) {\n    return \".\";\n  }\n  let joined;\n  for (const argument of arguments_) {\n    if (argument && argument.length > 0) {\n      if (joined === void 0) {\n        joined = argument;\n      } else {\n        joined += `/${argument}`;\n      }\n    }\n  }\n  if (joined === void 0) {\n    return \".\";\n  }\n  return normalize(joined.replace(/\\/\\/+/g, \"/\"));\n};\nfunction cwd() {\n  if (typeof process !== \"undefined\" && typeof process.cwd === \"function\") {\n    return process.cwd().replace(/\\\\/g, \"/\");\n  }\n  return \"/\";\n}\nconst resolve = function(...arguments_) {\n  arguments_ = arguments_.map((argument) => normalizeWindowsPath(argument));\n  let resolvedPath = \"\";\n  let resolvedAbsolute = false;\n  for (let index = arguments_.length - 1; index >= -1 && !resolvedAbsolute; index--) {\n    const path = index >= 0 ? arguments_[index] : cwd();\n    if (!path || path.length === 0) {\n      continue;\n    }\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = isAbsolute(path);\n  }\n  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute);\n  if (resolvedAbsolute && !isAbsolute(resolvedPath)) {\n    return `/${resolvedPath}`;\n  }\n  return resolvedPath.length > 0 ? resolvedPath : \".\";\n};\nfunction normalizeString(path, allowAboveRoot) {\n  let res = \"\";\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let char = null;\n  for (let index = 0; index <= path.length; ++index) {\n    if (index < path.length) {\n      char = path[index];\n    } else if (char === \"/\") {\n      break;\n    } else {\n      char = \"/\";\n    }\n    if (char === \"/\") {\n      if (lastSlash === index - 1 || dots === 1) ; else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res[res.length - 1] !== \".\" || res[res.length - 2] !== \".\") {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(\"/\");\n            if (lastSlashIndex === -1) {\n              res = \"\";\n              lastSegmentLength = 0;\n            } else {\n              res = res.slice(0, lastSlashIndex);\n              lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n            }\n            lastSlash = index;\n            dots = 0;\n            continue;\n          } else if (res.length > 0) {\n            res = \"\";\n            lastSegmentLength = 0;\n            lastSlash = index;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? \"/..\" : \"..\";\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) {\n          res += `/${path.slice(lastSlash + 1, index)}`;\n        } else {\n          res = path.slice(lastSlash + 1, index);\n        }\n        lastSegmentLength = index - lastSlash - 1;\n      }\n      lastSlash = index;\n      dots = 0;\n    } else if (char === \".\" && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\nconst isAbsolute = function(p) {\n  return _IS_ABSOLUTE_RE.test(p);\n};\nconst toNamespacedPath = function(p) {\n  return normalizeWindowsPath(p);\n};\nconst _EXTNAME_RE = /.(\\.[^./]+)$/;\nconst extname = function(p) {\n  const match = _EXTNAME_RE.exec(normalizeWindowsPath(p));\n  return match && match[1] || \"\";\n};\nconst relative = function(from, to) {\n  const _from = resolve(from).replace(_ROOT_FOLDER_RE, \"$1\").split(\"/\");\n  const _to = resolve(to).replace(_ROOT_FOLDER_RE, \"$1\").split(\"/\");\n  if (_to[0][1] === \":\" && _from[0][1] === \":\" && _from[0] !== _to[0]) {\n    return _to.join(\"/\");\n  }\n  const _fromCopy = [..._from];\n  for (const segment of _fromCopy) {\n    if (_to[0] !== segment) {\n      break;\n    }\n    _from.shift();\n    _to.shift();\n  }\n  return [..._from.map(() => \"..\"), ..._to].join(\"/\");\n};\nconst dirname = function(p) {\n  const segments = normalizeWindowsPath(p).replace(/\\/$/, \"\").split(\"/\").slice(0, -1);\n  if (segments.length === 1 && _DRIVE_LETTER_RE.test(segments[0])) {\n    segments[0] += \"/\";\n  }\n  return segments.join(\"/\") || (isAbsolute(p) ? \"/\" : \".\");\n};\nconst format = function(p) {\n  const segments = [p.root, p.dir, p.base ?? p.name + p.ext].filter(Boolean);\n  return normalizeWindowsPath(\n    p.root ? resolve(...segments) : segments.join(\"/\")\n  );\n};\nconst basename = function(p, extension) {\n  const lastSegment = normalizeWindowsPath(p).split(\"/\").pop();\n  return extension && lastSegment.endsWith(extension) ? lastSegment.slice(0, -extension.length) : lastSegment;\n};\nconst parse$3 = function(p) {\n  const root = normalizeWindowsPath(p).split(\"/\").shift() || \"/\";\n  const base = basename(p);\n  const extension = extname(base);\n  return {\n    root,\n    dir: dirname(p),\n    base,\n    ext: extension,\n    name: base.slice(0, base.length - extension.length)\n  };\n};\n\nconst path = {\n  __proto__: null,\n  basename: basename,\n  delimiter: delimiter,\n  dirname: dirname,\n  extname: extname,\n  format: format,\n  isAbsolute: isAbsolute,\n  join: join,\n  normalize: normalize,\n  normalizeString: normalizeString,\n  parse: parse$3,\n  relative: relative,\n  resolve: resolve,\n  sep: sep,\n  toNamespacedPath: toNamespacedPath\n};\n\nvar _path = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  basename: basename,\n  default: path,\n  delimiter: delimiter,\n  dirname: dirname,\n  extname: extname,\n  format: format,\n  isAbsolute: isAbsolute,\n  join: join,\n  normalize: normalize,\n  normalizeString: normalizeString,\n  parse: parse$3,\n  relative: relative,\n  resolve: resolve,\n  sep: sep,\n  toNamespacedPath: toNamespacedPath\n});\n\nconst _pathModule = {\n  ..._path,\n  platform: \"posix\",\n  posix: void 0,\n  win32: void 0\n};\n_pathModule.posix = _pathModule;\n_pathModule.win32 = _pathModule;\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction getAugmentedNamespace(n) {\n  if (Object.prototype.hasOwnProperty.call(n, '__esModule')) return n;\n  var f = n.default;\n\tif (typeof f == \"function\") {\n\t\tvar a = function a () {\n\t\t\tvar isInstance = false;\n      try {\n        isInstance = this instanceof a;\n      } catch {}\n\t\t\tif (isInstance) {\n        return Reflect.construct(f, arguments, this.constructor);\n\t\t\t}\n\t\t\treturn f.apply(this, arguments);\n\t\t};\n\t\ta.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nvar picocolors_browser = {exports: {}};\n\nvar hasRequiredPicocolors_browser;\n\nfunction requirePicocolors_browser () {\n\tif (hasRequiredPicocolors_browser) return picocolors_browser.exports;\n\thasRequiredPicocolors_browser = 1;\n\tvar x=String;\n\tvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x,blackBright:x,redBright:x,greenBright:x,yellowBright:x,blueBright:x,magentaBright:x,cyanBright:x,whiteBright:x,bgBlackBright:x,bgRedBright:x,bgGreenBright:x,bgYellowBright:x,bgBlueBright:x,bgMagentaBright:x,bgCyanBright:x,bgWhiteBright:x}};\n\tpicocolors_browser.exports=create();\n\tpicocolors_browser.exports.createColors = create;\n\treturn picocolors_browser.exports;\n}\n\nvar _nodeResolve_empty = {};\n\nvar _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  default: _nodeResolve_empty\n});\n\nvar require$$2 = /*@__PURE__*/getAugmentedNamespace(_nodeResolve_empty$1);\n\nvar cssSyntaxError;\nvar hasRequiredCssSyntaxError;\n\nfunction requireCssSyntaxError () {\n\tif (hasRequiredCssSyntaxError) return cssSyntaxError;\n\thasRequiredCssSyntaxError = 1;\n\n\tlet pico = /*@__PURE__*/ requirePicocolors_browser();\n\n\tlet terminalHighlight = require$$2;\n\n\tclass CssSyntaxError extends Error {\n\t  constructor(message, line, column, source, file, plugin) {\n\t    super(message);\n\t    this.name = 'CssSyntaxError';\n\t    this.reason = message;\n\n\t    if (file) {\n\t      this.file = file;\n\t    }\n\t    if (source) {\n\t      this.source = source;\n\t    }\n\t    if (plugin) {\n\t      this.plugin = plugin;\n\t    }\n\t    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n\t      if (typeof line === 'number') {\n\t        this.line = line;\n\t        this.column = column;\n\t      } else {\n\t        this.line = line.line;\n\t        this.column = line.column;\n\t        this.endLine = column.line;\n\t        this.endColumn = column.column;\n\t      }\n\t    }\n\n\t    this.setMessage();\n\n\t    if (Error.captureStackTrace) {\n\t      Error.captureStackTrace(this, CssSyntaxError);\n\t    }\n\t  }\n\n\t  setMessage() {\n\t    this.message = this.plugin ? this.plugin + ': ' : '';\n\t    this.message += this.file ? this.file : '<css input>';\n\t    if (typeof this.line !== 'undefined') {\n\t      this.message += ':' + this.line + ':' + this.column;\n\t    }\n\t    this.message += ': ' + this.reason;\n\t  }\n\n\t  showSourceCode(color) {\n\t    if (!this.source) return ''\n\n\t    let css = this.source;\n\t    if (color == null) color = pico.isColorSupported;\n\n\t    let aside = text => text;\n\t    let mark = text => text;\n\t    let highlight = text => text;\n\t    if (color) {\n\t      let { bold, gray, red } = pico.createColors(true);\n\t      mark = text => bold(red(text));\n\t      aside = text => gray(text);\n\t      if (terminalHighlight) {\n\t        highlight = text => terminalHighlight(text);\n\t      }\n\t    }\n\n\t    let lines = css.split(/\\r?\\n/);\n\t    let start = Math.max(this.line - 3, 0);\n\t    let end = Math.min(this.line + 2, lines.length);\n\t    let maxWidth = String(end).length;\n\n\t    return lines\n\t      .slice(start, end)\n\t      .map((line, index) => {\n\t        let number = start + 1 + index;\n\t        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\n\t        if (number === this.line) {\n\t          if (line.length > 160) {\n\t            let padding = 20;\n\t            let subLineStart = Math.max(0, this.column - padding);\n\t            let subLineEnd = Math.max(\n\t              this.column + padding,\n\t              this.endColumn + padding\n\t            );\n\t            let subLine = line.slice(subLineStart, subLineEnd);\n\n\t            let spacing =\n\t              aside(gutter.replace(/\\d/g, ' ')) +\n\t              line\n\t                .slice(0, Math.min(this.column - 1, padding - 1))\n\t                .replace(/[^\\t]/g, ' ');\n\n\t            return (\n\t              mark('>') +\n\t              aside(gutter) +\n\t              highlight(subLine) +\n\t              '\\n ' +\n\t              spacing +\n\t              mark('^')\n\t            )\n\t          }\n\n\t          let spacing =\n\t            aside(gutter.replace(/\\d/g, ' ')) +\n\t            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ');\n\n\t          return (\n\t            mark('>') +\n\t            aside(gutter) +\n\t            highlight(line) +\n\t            '\\n ' +\n\t            spacing +\n\t            mark('^')\n\t          )\n\t        }\n\n\t        return ' ' + aside(gutter) + highlight(line)\n\t      })\n\t      .join('\\n')\n\t  }\n\n\t  toString() {\n\t    let code = this.showSourceCode();\n\t    if (code) {\n\t      code = '\\n\\n' + code + '\\n';\n\t    }\n\t    return this.name + ': ' + this.message + code\n\t  }\n\t}\n\n\tcssSyntaxError = CssSyntaxError;\n\tCssSyntaxError.default = CssSyntaxError;\n\treturn cssSyntaxError;\n}\n\nvar stringifier;\nvar hasRequiredStringifier;\n\nfunction requireStringifier () {\n\tif (hasRequiredStringifier) return stringifier;\n\thasRequiredStringifier = 1;\n\n\tconst DEFAULT_RAW = {\n\t  after: '\\n',\n\t  beforeClose: '\\n',\n\t  beforeComment: '\\n',\n\t  beforeDecl: '\\n',\n\t  beforeOpen: ' ',\n\t  beforeRule: '\\n',\n\t  colon: ': ',\n\t  commentLeft: ' ',\n\t  commentRight: ' ',\n\t  emptyBody: '',\n\t  indent: '    ',\n\t  semicolon: false\n\t};\n\n\tfunction capitalize(str) {\n\t  return str[0].toUpperCase() + str.slice(1)\n\t}\n\n\tclass Stringifier {\n\t  constructor(builder) {\n\t    this.builder = builder;\n\t  }\n\n\t  atrule(node, semicolon) {\n\t    let name = '@' + node.name;\n\t    let params = node.params ? this.rawValue(node, 'params') : '';\n\n\t    if (typeof node.raws.afterName !== 'undefined') {\n\t      name += node.raws.afterName;\n\t    } else if (params) {\n\t      name += ' ';\n\t    }\n\n\t    if (node.nodes) {\n\t      this.block(node, name + params);\n\t    } else {\n\t      let end = (node.raws.between || '') + (semicolon ? ';' : '');\n\t      this.builder(name + params + end, node);\n\t    }\n\t  }\n\n\t  beforeAfter(node, detect) {\n\t    let value;\n\t    if (node.type === 'decl') {\n\t      value = this.raw(node, null, 'beforeDecl');\n\t    } else if (node.type === 'comment') {\n\t      value = this.raw(node, null, 'beforeComment');\n\t    } else if (detect === 'before') {\n\t      value = this.raw(node, null, 'beforeRule');\n\t    } else {\n\t      value = this.raw(node, null, 'beforeClose');\n\t    }\n\n\t    let buf = node.parent;\n\t    let depth = 0;\n\t    while (buf && buf.type !== 'root') {\n\t      depth += 1;\n\t      buf = buf.parent;\n\t    }\n\n\t    if (value.includes('\\n')) {\n\t      let indent = this.raw(node, null, 'indent');\n\t      if (indent.length) {\n\t        for (let step = 0; step < depth; step++) value += indent;\n\t      }\n\t    }\n\n\t    return value\n\t  }\n\n\t  block(node, start) {\n\t    let between = this.raw(node, 'between', 'beforeOpen');\n\t    this.builder(start + between + '{', node, 'start');\n\n\t    let after;\n\t    if (node.nodes && node.nodes.length) {\n\t      this.body(node);\n\t      after = this.raw(node, 'after');\n\t    } else {\n\t      after = this.raw(node, 'after', 'emptyBody');\n\t    }\n\n\t    if (after) this.builder(after);\n\t    this.builder('}', node, 'end');\n\t  }\n\n\t  body(node) {\n\t    let last = node.nodes.length - 1;\n\t    while (last > 0) {\n\t      if (node.nodes[last].type !== 'comment') break\n\t      last -= 1;\n\t    }\n\n\t    let semicolon = this.raw(node, 'semicolon');\n\t    for (let i = 0; i < node.nodes.length; i++) {\n\t      let child = node.nodes[i];\n\t      let before = this.raw(child, 'before');\n\t      if (before) this.builder(before);\n\t      this.stringify(child, last !== i || semicolon);\n\t    }\n\t  }\n\n\t  comment(node) {\n\t    let left = this.raw(node, 'left', 'commentLeft');\n\t    let right = this.raw(node, 'right', 'commentRight');\n\t    this.builder('/*' + left + node.text + right + '*/', node);\n\t  }\n\n\t  decl(node, semicolon) {\n\t    let between = this.raw(node, 'between', 'colon');\n\t    let string = node.prop + between + this.rawValue(node, 'value');\n\n\t    if (node.important) {\n\t      string += node.raws.important || ' !important';\n\t    }\n\n\t    if (semicolon) string += ';';\n\t    this.builder(string, node);\n\t  }\n\n\t  document(node) {\n\t    this.body(node);\n\t  }\n\n\t  raw(node, own, detect) {\n\t    let value;\n\t    if (!detect) detect = own;\n\n\t    // Already had\n\t    if (own) {\n\t      value = node.raws[own];\n\t      if (typeof value !== 'undefined') return value\n\t    }\n\n\t    let parent = node.parent;\n\n\t    if (detect === 'before') {\n\t      // Hack for first rule in CSS\n\t      if (!parent || (parent.type === 'root' && parent.first === node)) {\n\t        return ''\n\t      }\n\n\t      // `root` nodes in `document` should use only their own raws\n\t      if (parent && parent.type === 'document') {\n\t        return ''\n\t      }\n\t    }\n\n\t    // Floating child without parent\n\t    if (!parent) return DEFAULT_RAW[detect]\n\n\t    // Detect style by other nodes\n\t    let root = node.root();\n\t    if (!root.rawCache) root.rawCache = {};\n\t    if (typeof root.rawCache[detect] !== 'undefined') {\n\t      return root.rawCache[detect]\n\t    }\n\n\t    if (detect === 'before' || detect === 'after') {\n\t      return this.beforeAfter(node, detect)\n\t    } else {\n\t      let method = 'raw' + capitalize(detect);\n\t      if (this[method]) {\n\t        value = this[method](root, node);\n\t      } else {\n\t        root.walk(i => {\n\t          value = i.raws[own];\n\t          if (typeof value !== 'undefined') return false\n\t        });\n\t      }\n\t    }\n\n\t    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\n\n\t    root.rawCache[detect] = value;\n\t    return value\n\t  }\n\n\t  rawBeforeClose(root) {\n\t    let value;\n\t    root.walk(i => {\n\t      if (i.nodes && i.nodes.length > 0) {\n\t        if (typeof i.raws.after !== 'undefined') {\n\t          value = i.raws.after;\n\t          if (value.includes('\\n')) {\n\t            value = value.replace(/[^\\n]+$/, '');\n\t          }\n\t          return false\n\t        }\n\t      }\n\t    });\n\t    if (value) value = value.replace(/\\S/g, '');\n\t    return value\n\t  }\n\n\t  rawBeforeComment(root, node) {\n\t    let value;\n\t    root.walkComments(i => {\n\t      if (typeof i.raws.before !== 'undefined') {\n\t        value = i.raws.before;\n\t        if (value.includes('\\n')) {\n\t          value = value.replace(/[^\\n]+$/, '');\n\t        }\n\t        return false\n\t      }\n\t    });\n\t    if (typeof value === 'undefined') {\n\t      value = this.raw(node, null, 'beforeDecl');\n\t    } else if (value) {\n\t      value = value.replace(/\\S/g, '');\n\t    }\n\t    return value\n\t  }\n\n\t  rawBeforeDecl(root, node) {\n\t    let value;\n\t    root.walkDecls(i => {\n\t      if (typeof i.raws.before !== 'undefined') {\n\t        value = i.raws.before;\n\t        if (value.includes('\\n')) {\n\t          value = value.replace(/[^\\n]+$/, '');\n\t        }\n\t        return false\n\t      }\n\t    });\n\t    if (typeof value === 'undefined') {\n\t      value = this.raw(node, null, 'beforeRule');\n\t    } else if (value) {\n\t      value = value.replace(/\\S/g, '');\n\t    }\n\t    return value\n\t  }\n\n\t  rawBeforeOpen(root) {\n\t    let value;\n\t    root.walk(i => {\n\t      if (i.type !== 'decl') {\n\t        value = i.raws.between;\n\t        if (typeof value !== 'undefined') return false\n\t      }\n\t    });\n\t    return value\n\t  }\n\n\t  rawBeforeRule(root) {\n\t    let value;\n\t    root.walk(i => {\n\t      if (i.nodes && (i.parent !== root || root.first !== i)) {\n\t        if (typeof i.raws.before !== 'undefined') {\n\t          value = i.raws.before;\n\t          if (value.includes('\\n')) {\n\t            value = value.replace(/[^\\n]+$/, '');\n\t          }\n\t          return false\n\t        }\n\t      }\n\t    });\n\t    if (value) value = value.replace(/\\S/g, '');\n\t    return value\n\t  }\n\n\t  rawColon(root) {\n\t    let value;\n\t    root.walkDecls(i => {\n\t      if (typeof i.raws.between !== 'undefined') {\n\t        value = i.raws.between.replace(/[^\\s:]/g, '');\n\t        return false\n\t      }\n\t    });\n\t    return value\n\t  }\n\n\t  rawEmptyBody(root) {\n\t    let value;\n\t    root.walk(i => {\n\t      if (i.nodes && i.nodes.length === 0) {\n\t        value = i.raws.after;\n\t        if (typeof value !== 'undefined') return false\n\t      }\n\t    });\n\t    return value\n\t  }\n\n\t  rawIndent(root) {\n\t    if (root.raws.indent) return root.raws.indent\n\t    let value;\n\t    root.walk(i => {\n\t      let p = i.parent;\n\t      if (p && p !== root && p.parent && p.parent === root) {\n\t        if (typeof i.raws.before !== 'undefined') {\n\t          let parts = i.raws.before.split('\\n');\n\t          value = parts[parts.length - 1];\n\t          value = value.replace(/\\S/g, '');\n\t          return false\n\t        }\n\t      }\n\t    });\n\t    return value\n\t  }\n\n\t  rawSemicolon(root) {\n\t    let value;\n\t    root.walk(i => {\n\t      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n\t        value = i.raws.semicolon;\n\t        if (typeof value !== 'undefined') return false\n\t      }\n\t    });\n\t    return value\n\t  }\n\n\t  rawValue(node, prop) {\n\t    let value = node[prop];\n\t    let raw = node.raws[prop];\n\t    if (raw && raw.value === value) {\n\t      return raw.raw\n\t    }\n\n\t    return value\n\t  }\n\n\t  root(node) {\n\t    this.body(node);\n\t    if (node.raws.after) this.builder(node.raws.after);\n\t  }\n\n\t  rule(node) {\n\t    this.block(node, this.rawValue(node, 'selector'));\n\t    if (node.raws.ownSemicolon) {\n\t      this.builder(node.raws.ownSemicolon, node, 'end');\n\t    }\n\t  }\n\n\t  stringify(node, semicolon) {\n\t    /* c8 ignore start */\n\t    if (!this[node.type]) {\n\t      throw new Error(\n\t        'Unknown AST node type ' +\n\t          node.type +\n\t          '. ' +\n\t          'Maybe you need to change PostCSS stringifier.'\n\t      )\n\t    }\n\t    /* c8 ignore stop */\n\t    this[node.type](node, semicolon);\n\t  }\n\t}\n\n\tstringifier = Stringifier;\n\tStringifier.default = Stringifier;\n\treturn stringifier;\n}\n\nvar stringify_1;\nvar hasRequiredStringify;\n\nfunction requireStringify () {\n\tif (hasRequiredStringify) return stringify_1;\n\thasRequiredStringify = 1;\n\n\tlet Stringifier = requireStringifier();\n\n\tfunction stringify(node, builder) {\n\t  let str = new Stringifier(builder);\n\t  str.stringify(node);\n\t}\n\n\tstringify_1 = stringify;\n\tstringify.default = stringify;\n\treturn stringify_1;\n}\n\nvar symbols = {};\n\nvar hasRequiredSymbols;\n\nfunction requireSymbols () {\n\tif (hasRequiredSymbols) return symbols;\n\thasRequiredSymbols = 1;\n\n\tsymbols.isClean = Symbol('isClean');\n\n\tsymbols.my = Symbol('my');\n\treturn symbols;\n}\n\nvar node;\nvar hasRequiredNode$1;\n\nfunction requireNode$1 () {\n\tif (hasRequiredNode$1) return node;\n\thasRequiredNode$1 = 1;\n\n\tlet CssSyntaxError = requireCssSyntaxError();\n\tlet Stringifier = requireStringifier();\n\tlet stringify = requireStringify();\n\tlet { isClean, my } = requireSymbols();\n\n\tfunction cloneNode(obj, parent) {\n\t  let cloned = new obj.constructor();\n\n\t  for (let i in obj) {\n\t    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n\t      /* c8 ignore next 2 */\n\t      continue\n\t    }\n\t    if (i === 'proxyCache') continue\n\t    let value = obj[i];\n\t    let type = typeof value;\n\n\t    if (i === 'parent' && type === 'object') {\n\t      if (parent) cloned[i] = parent;\n\t    } else if (i === 'source') {\n\t      cloned[i] = value;\n\t    } else if (Array.isArray(value)) {\n\t      cloned[i] = value.map(j => cloneNode(j, cloned));\n\t    } else {\n\t      if (type === 'object' && value !== null) value = cloneNode(value);\n\t      cloned[i] = value;\n\t    }\n\t  }\n\n\t  return cloned\n\t}\n\n\tfunction sourceOffset(inputCSS, position) {\n\t  // Not all custom syntaxes support `offset` in `source.start` and `source.end`\n\t  if (position && typeof position.offset !== 'undefined') {\n\t    return position.offset\n\t  }\n\n\t  let column = 1;\n\t  let line = 1;\n\t  let offset = 0;\n\n\t  for (let i = 0; i < inputCSS.length; i++) {\n\t    if (line === position.line && column === position.column) {\n\t      offset = i;\n\t      break\n\t    }\n\n\t    if (inputCSS[i] === '\\n') {\n\t      column = 1;\n\t      line += 1;\n\t    } else {\n\t      column += 1;\n\t    }\n\t  }\n\n\t  return offset\n\t}\n\n\tclass Node {\n\t  get proxyOf() {\n\t    return this\n\t  }\n\n\t  constructor(defaults = {}) {\n\t    this.raws = {};\n\t    this[isClean] = false;\n\t    this[my] = true;\n\n\t    for (let name in defaults) {\n\t      if (name === 'nodes') {\n\t        this.nodes = [];\n\t        for (let node of defaults[name]) {\n\t          if (typeof node.clone === 'function') {\n\t            this.append(node.clone());\n\t          } else {\n\t            this.append(node);\n\t          }\n\t        }\n\t      } else {\n\t        this[name] = defaults[name];\n\t      }\n\t    }\n\t  }\n\n\t  addToError(error) {\n\t    error.postcssNode = this;\n\t    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n\t      let s = this.source;\n\t      error.stack = error.stack.replace(\n\t        /\\n\\s{4}at /,\n\t        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n\t      );\n\t    }\n\t    return error\n\t  }\n\n\t  after(add) {\n\t    this.parent.insertAfter(this, add);\n\t    return this\n\t  }\n\n\t  assign(overrides = {}) {\n\t    for (let name in overrides) {\n\t      this[name] = overrides[name];\n\t    }\n\t    return this\n\t  }\n\n\t  before(add) {\n\t    this.parent.insertBefore(this, add);\n\t    return this\n\t  }\n\n\t  cleanRaws(keepBetween) {\n\t    delete this.raws.before;\n\t    delete this.raws.after;\n\t    if (!keepBetween) delete this.raws.between;\n\t  }\n\n\t  clone(overrides = {}) {\n\t    let cloned = cloneNode(this);\n\t    for (let name in overrides) {\n\t      cloned[name] = overrides[name];\n\t    }\n\t    return cloned\n\t  }\n\n\t  cloneAfter(overrides = {}) {\n\t    let cloned = this.clone(overrides);\n\t    this.parent.insertAfter(this, cloned);\n\t    return cloned\n\t  }\n\n\t  cloneBefore(overrides = {}) {\n\t    let cloned = this.clone(overrides);\n\t    this.parent.insertBefore(this, cloned);\n\t    return cloned\n\t  }\n\n\t  error(message, opts = {}) {\n\t    if (this.source) {\n\t      let { end, start } = this.rangeBy(opts);\n\t      return this.source.input.error(\n\t        message,\n\t        { column: start.column, line: start.line },\n\t        { column: end.column, line: end.line },\n\t        opts\n\t      )\n\t    }\n\t    return new CssSyntaxError(message)\n\t  }\n\n\t  getProxyProcessor() {\n\t    return {\n\t      get(node, prop) {\n\t        if (prop === 'proxyOf') {\n\t          return node\n\t        } else if (prop === 'root') {\n\t          return () => node.root().toProxy()\n\t        } else {\n\t          return node[prop]\n\t        }\n\t      },\n\n\t      set(node, prop, value) {\n\t        if (node[prop] === value) return true\n\t        node[prop] = value;\n\t        if (\n\t          prop === 'prop' ||\n\t          prop === 'value' ||\n\t          prop === 'name' ||\n\t          prop === 'params' ||\n\t          prop === 'important' ||\n\t          /* c8 ignore next */\n\t          prop === 'text'\n\t        ) {\n\t          node.markDirty();\n\t        }\n\t        return true\n\t      }\n\t    }\n\t  }\n\n\t  /* c8 ignore next 3 */\n\t  markClean() {\n\t    this[isClean] = true;\n\t  }\n\n\t  markDirty() {\n\t    if (this[isClean]) {\n\t      this[isClean] = false;\n\t      let next = this;\n\t      while ((next = next.parent)) {\n\t        next[isClean] = false;\n\t      }\n\t    }\n\t  }\n\n\t  next() {\n\t    if (!this.parent) return undefined\n\t    let index = this.parent.index(this);\n\t    return this.parent.nodes[index + 1]\n\t  }\n\n\t  positionBy(opts = {}) {\n\t    let pos = this.source.start;\n\t    if (opts.index) {\n\t      pos = this.positionInside(opts.index);\n\t    } else if (opts.word) {\n\t      let inputString =\n\t        'document' in this.source.input\n\t          ? this.source.input.document\n\t          : this.source.input.css;\n\t      let stringRepresentation = inputString.slice(\n\t        sourceOffset(inputString, this.source.start),\n\t        sourceOffset(inputString, this.source.end)\n\t      );\n\t      let index = stringRepresentation.indexOf(opts.word);\n\t      if (index !== -1) pos = this.positionInside(index);\n\t    }\n\t    return pos\n\t  }\n\n\t  positionInside(index) {\n\t    let column = this.source.start.column;\n\t    let line = this.source.start.line;\n\t    let inputString =\n\t      'document' in this.source.input\n\t        ? this.source.input.document\n\t        : this.source.input.css;\n\t    let offset = sourceOffset(inputString, this.source.start);\n\t    let end = offset + index;\n\n\t    for (let i = offset; i < end; i++) {\n\t      if (inputString[i] === '\\n') {\n\t        column = 1;\n\t        line += 1;\n\t      } else {\n\t        column += 1;\n\t      }\n\t    }\n\n\t    return { column, line, offset: end }\n\t  }\n\n\t  prev() {\n\t    if (!this.parent) return undefined\n\t    let index = this.parent.index(this);\n\t    return this.parent.nodes[index - 1]\n\t  }\n\n\t  rangeBy(opts = {}) {\n\t    let inputString =\n\t      'document' in this.source.input\n\t        ? this.source.input.document\n\t        : this.source.input.css;\n\t    let start = {\n\t      column: this.source.start.column,\n\t      line: this.source.start.line,\n\t      offset: sourceOffset(inputString, this.source.start)\n\t    };\n\t    let end = this.source.end\n\t      ? {\n\t          column: this.source.end.column + 1,\n\t          line: this.source.end.line,\n\t          offset:\n\t            typeof this.source.end.offset === 'number'\n\t              ? // `source.end.offset` is exclusive, so we don't need to add 1\n\t                this.source.end.offset\n\t              : // Since line/column in this.source.end is inclusive,\n\t                // the `sourceOffset(... , this.source.end)` returns an inclusive offset.\n\t                // So, we add 1 to convert it to exclusive.\n\t                sourceOffset(inputString, this.source.end) + 1\n\t        }\n\t      : {\n\t          column: start.column + 1,\n\t          line: start.line,\n\t          offset: start.offset + 1\n\t        };\n\n\t    if (opts.word) {\n\t      let stringRepresentation = inputString.slice(\n\t        sourceOffset(inputString, this.source.start),\n\t        sourceOffset(inputString, this.source.end)\n\t      );\n\t      let index = stringRepresentation.indexOf(opts.word);\n\t      if (index !== -1) {\n\t        start = this.positionInside(index);\n\t        end = this.positionInside(index + opts.word.length);\n\t      }\n\t    } else {\n\t      if (opts.start) {\n\t        start = {\n\t          column: opts.start.column,\n\t          line: opts.start.line,\n\t          offset: sourceOffset(inputString, opts.start)\n\t        };\n\t      } else if (opts.index) {\n\t        start = this.positionInside(opts.index);\n\t      }\n\n\t      if (opts.end) {\n\t        end = {\n\t          column: opts.end.column,\n\t          line: opts.end.line,\n\t          offset: sourceOffset(inputString, opts.end)\n\t        };\n\t      } else if (typeof opts.endIndex === 'number') {\n\t        end = this.positionInside(opts.endIndex);\n\t      } else if (opts.index) {\n\t        end = this.positionInside(opts.index + 1);\n\t      }\n\t    }\n\n\t    if (\n\t      end.line < start.line ||\n\t      (end.line === start.line && end.column <= start.column)\n\t    ) {\n\t      end = {\n\t        column: start.column + 1,\n\t        line: start.line,\n\t        offset: start.offset + 1\n\t      };\n\t    }\n\n\t    return { end, start }\n\t  }\n\n\t  raw(prop, defaultType) {\n\t    let str = new Stringifier();\n\t    return str.raw(this, prop, defaultType)\n\t  }\n\n\t  remove() {\n\t    if (this.parent) {\n\t      this.parent.removeChild(this);\n\t    }\n\t    this.parent = undefined;\n\t    return this\n\t  }\n\n\t  replaceWith(...nodes) {\n\t    if (this.parent) {\n\t      let bookmark = this;\n\t      let foundSelf = false;\n\t      for (let node of nodes) {\n\t        if (node === this) {\n\t          foundSelf = true;\n\t        } else if (foundSelf) {\n\t          this.parent.insertAfter(bookmark, node);\n\t          bookmark = node;\n\t        } else {\n\t          this.parent.insertBefore(bookmark, node);\n\t        }\n\t      }\n\n\t      if (!foundSelf) {\n\t        this.remove();\n\t      }\n\t    }\n\n\t    return this\n\t  }\n\n\t  root() {\n\t    let result = this;\n\t    while (result.parent && result.parent.type !== 'document') {\n\t      result = result.parent;\n\t    }\n\t    return result\n\t  }\n\n\t  toJSON(_, inputs) {\n\t    let fixed = {};\n\t    let emitInputs = inputs == null;\n\t    inputs = inputs || new Map();\n\t    let inputsNextIndex = 0;\n\n\t    for (let name in this) {\n\t      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n\t        /* c8 ignore next 2 */\n\t        continue\n\t      }\n\t      if (name === 'parent' || name === 'proxyCache') continue\n\t      let value = this[name];\n\n\t      if (Array.isArray(value)) {\n\t        fixed[name] = value.map(i => {\n\t          if (typeof i === 'object' && i.toJSON) {\n\t            return i.toJSON(null, inputs)\n\t          } else {\n\t            return i\n\t          }\n\t        });\n\t      } else if (typeof value === 'object' && value.toJSON) {\n\t        fixed[name] = value.toJSON(null, inputs);\n\t      } else if (name === 'source') {\n\t        if (value == null) continue\n\t        let inputId = inputs.get(value.input);\n\t        if (inputId == null) {\n\t          inputId = inputsNextIndex;\n\t          inputs.set(value.input, inputsNextIndex);\n\t          inputsNextIndex++;\n\t        }\n\t        fixed[name] = {\n\t          end: value.end,\n\t          inputId,\n\t          start: value.start\n\t        };\n\t      } else {\n\t        fixed[name] = value;\n\t      }\n\t    }\n\n\t    if (emitInputs) {\n\t      fixed.inputs = [...inputs.keys()].map(input => input.toJSON());\n\t    }\n\n\t    return fixed\n\t  }\n\n\t  toProxy() {\n\t    if (!this.proxyCache) {\n\t      this.proxyCache = new Proxy(this, this.getProxyProcessor());\n\t    }\n\t    return this.proxyCache\n\t  }\n\n\t  toString(stringifier = stringify) {\n\t    if (stringifier.stringify) stringifier = stringifier.stringify;\n\t    let result = '';\n\t    stringifier(this, i => {\n\t      result += i;\n\t    });\n\t    return result\n\t  }\n\n\t  warn(result, text, opts = {}) {\n\t    let data = { node: this };\n\t    for (let i in opts) data[i] = opts[i];\n\t    return result.warn(text, data)\n\t  }\n\t}\n\n\tnode = Node;\n\tNode.default = Node;\n\treturn node;\n}\n\nvar comment;\nvar hasRequiredComment;\n\nfunction requireComment () {\n\tif (hasRequiredComment) return comment;\n\thasRequiredComment = 1;\n\n\tlet Node = requireNode$1();\n\n\tclass Comment extends Node {\n\t  constructor(defaults) {\n\t    super(defaults);\n\t    this.type = 'comment';\n\t  }\n\t}\n\n\tcomment = Comment;\n\tComment.default = Comment;\n\treturn comment;\n}\n\nvar declaration;\nvar hasRequiredDeclaration;\n\nfunction requireDeclaration () {\n\tif (hasRequiredDeclaration) return declaration;\n\thasRequiredDeclaration = 1;\n\n\tlet Node = requireNode$1();\n\n\tclass Declaration extends Node {\n\t  get variable() {\n\t    return this.prop.startsWith('--') || this.prop[0] === '$'\n\t  }\n\n\t  constructor(defaults) {\n\t    if (\n\t      defaults &&\n\t      typeof defaults.value !== 'undefined' &&\n\t      typeof defaults.value !== 'string'\n\t    ) {\n\t      defaults = { ...defaults, value: String(defaults.value) };\n\t    }\n\t    super(defaults);\n\t    this.type = 'decl';\n\t  }\n\t}\n\n\tdeclaration = Declaration;\n\tDeclaration.default = Declaration;\n\treturn declaration;\n}\n\nvar container;\nvar hasRequiredContainer$1;\n\nfunction requireContainer$1 () {\n\tif (hasRequiredContainer$1) return container;\n\thasRequiredContainer$1 = 1;\n\n\tlet Comment = requireComment();\n\tlet Declaration = requireDeclaration();\n\tlet Node = requireNode$1();\n\tlet { isClean, my } = requireSymbols();\n\n\tlet AtRule, parse, Root, Rule;\n\n\tfunction cleanSource(nodes) {\n\t  return nodes.map(i => {\n\t    if (i.nodes) i.nodes = cleanSource(i.nodes);\n\t    delete i.source;\n\t    return i\n\t  })\n\t}\n\n\tfunction markTreeDirty(node) {\n\t  node[isClean] = false;\n\t  if (node.proxyOf.nodes) {\n\t    for (let i of node.proxyOf.nodes) {\n\t      markTreeDirty(i);\n\t    }\n\t  }\n\t}\n\n\tclass Container extends Node {\n\t  get first() {\n\t    if (!this.proxyOf.nodes) return undefined\n\t    return this.proxyOf.nodes[0]\n\t  }\n\n\t  get last() {\n\t    if (!this.proxyOf.nodes) return undefined\n\t    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n\t  }\n\n\t  append(...children) {\n\t    for (let child of children) {\n\t      let nodes = this.normalize(child, this.last);\n\t      for (let node of nodes) this.proxyOf.nodes.push(node);\n\t    }\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  cleanRaws(keepBetween) {\n\t    super.cleanRaws(keepBetween);\n\t    if (this.nodes) {\n\t      for (let node of this.nodes) node.cleanRaws(keepBetween);\n\t    }\n\t  }\n\n\t  each(callback) {\n\t    if (!this.proxyOf.nodes) return undefined\n\t    let iterator = this.getIterator();\n\n\t    let index, result;\n\t    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n\t      index = this.indexes[iterator];\n\t      result = callback(this.proxyOf.nodes[index], index);\n\t      if (result === false) break\n\n\t      this.indexes[iterator] += 1;\n\t    }\n\n\t    delete this.indexes[iterator];\n\t    return result\n\t  }\n\n\t  every(condition) {\n\t    return this.nodes.every(condition)\n\t  }\n\n\t  getIterator() {\n\t    if (!this.lastEach) this.lastEach = 0;\n\t    if (!this.indexes) this.indexes = {};\n\n\t    this.lastEach += 1;\n\t    let iterator = this.lastEach;\n\t    this.indexes[iterator] = 0;\n\n\t    return iterator\n\t  }\n\n\t  getProxyProcessor() {\n\t    return {\n\t      get(node, prop) {\n\t        if (prop === 'proxyOf') {\n\t          return node\n\t        } else if (!node[prop]) {\n\t          return node[prop]\n\t        } else if (\n\t          prop === 'each' ||\n\t          (typeof prop === 'string' && prop.startsWith('walk'))\n\t        ) {\n\t          return (...args) => {\n\t            return node[prop](\n\t              ...args.map(i => {\n\t                if (typeof i === 'function') {\n\t                  return (child, index) => i(child.toProxy(), index)\n\t                } else {\n\t                  return i\n\t                }\n\t              })\n\t            )\n\t          }\n\t        } else if (prop === 'every' || prop === 'some') {\n\t          return cb => {\n\t            return node[prop]((child, ...other) =>\n\t              cb(child.toProxy(), ...other)\n\t            )\n\t          }\n\t        } else if (prop === 'root') {\n\t          return () => node.root().toProxy()\n\t        } else if (prop === 'nodes') {\n\t          return node.nodes.map(i => i.toProxy())\n\t        } else if (prop === 'first' || prop === 'last') {\n\t          return node[prop].toProxy()\n\t        } else {\n\t          return node[prop]\n\t        }\n\t      },\n\n\t      set(node, prop, value) {\n\t        if (node[prop] === value) return true\n\t        node[prop] = value;\n\t        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n\t          node.markDirty();\n\t        }\n\t        return true\n\t      }\n\t    }\n\t  }\n\n\t  index(child) {\n\t    if (typeof child === 'number') return child\n\t    if (child.proxyOf) child = child.proxyOf;\n\t    return this.proxyOf.nodes.indexOf(child)\n\t  }\n\n\t  insertAfter(exist, add) {\n\t    let existIndex = this.index(exist);\n\t    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();\n\t    existIndex = this.index(exist);\n\t    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node);\n\n\t    let index;\n\t    for (let id in this.indexes) {\n\t      index = this.indexes[id];\n\t      if (existIndex < index) {\n\t        this.indexes[id] = index + nodes.length;\n\t      }\n\t    }\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  insertBefore(exist, add) {\n\t    let existIndex = this.index(exist);\n\t    let type = existIndex === 0 ? 'prepend' : false;\n\t    let nodes = this.normalize(\n\t      add,\n\t      this.proxyOf.nodes[existIndex],\n\t      type\n\t    ).reverse();\n\t    existIndex = this.index(exist);\n\t    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node);\n\n\t    let index;\n\t    for (let id in this.indexes) {\n\t      index = this.indexes[id];\n\t      if (existIndex <= index) {\n\t        this.indexes[id] = index + nodes.length;\n\t      }\n\t    }\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  normalize(nodes, sample) {\n\t    if (typeof nodes === 'string') {\n\t      nodes = cleanSource(parse(nodes).nodes);\n\t    } else if (typeof nodes === 'undefined') {\n\t      nodes = [];\n\t    } else if (Array.isArray(nodes)) {\n\t      nodes = nodes.slice(0);\n\t      for (let i of nodes) {\n\t        if (i.parent) i.parent.removeChild(i, 'ignore');\n\t      }\n\t    } else if (nodes.type === 'root' && this.type !== 'document') {\n\t      nodes = nodes.nodes.slice(0);\n\t      for (let i of nodes) {\n\t        if (i.parent) i.parent.removeChild(i, 'ignore');\n\t      }\n\t    } else if (nodes.type) {\n\t      nodes = [nodes];\n\t    } else if (nodes.prop) {\n\t      if (typeof nodes.value === 'undefined') {\n\t        throw new Error('Value field is missed in node creation')\n\t      } else if (typeof nodes.value !== 'string') {\n\t        nodes.value = String(nodes.value);\n\t      }\n\t      nodes = [new Declaration(nodes)];\n\t    } else if (nodes.selector || nodes.selectors) {\n\t      nodes = [new Rule(nodes)];\n\t    } else if (nodes.name) {\n\t      nodes = [new AtRule(nodes)];\n\t    } else if (nodes.text) {\n\t      nodes = [new Comment(nodes)];\n\t    } else {\n\t      throw new Error('Unknown node type in node creation')\n\t    }\n\n\t    let processed = nodes.map(i => {\n\t      /* c8 ignore next */\n\t      if (!i[my]) Container.rebuild(i);\n\t      i = i.proxyOf;\n\t      if (i.parent) i.parent.removeChild(i);\n\t      if (i[isClean]) markTreeDirty(i);\n\n\t      if (!i.raws) i.raws = {};\n\t      if (typeof i.raws.before === 'undefined') {\n\t        if (sample && typeof sample.raws.before !== 'undefined') {\n\t          i.raws.before = sample.raws.before.replace(/\\S/g, '');\n\t        }\n\t      }\n\t      i.parent = this.proxyOf;\n\t      return i\n\t    });\n\n\t    return processed\n\t  }\n\n\t  prepend(...children) {\n\t    children = children.reverse();\n\t    for (let child of children) {\n\t      let nodes = this.normalize(child, this.first, 'prepend').reverse();\n\t      for (let node of nodes) this.proxyOf.nodes.unshift(node);\n\t      for (let id in this.indexes) {\n\t        this.indexes[id] = this.indexes[id] + nodes.length;\n\t      }\n\t    }\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  push(child) {\n\t    child.parent = this;\n\t    this.proxyOf.nodes.push(child);\n\t    return this\n\t  }\n\n\t  removeAll() {\n\t    for (let node of this.proxyOf.nodes) node.parent = undefined;\n\t    this.proxyOf.nodes = [];\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  removeChild(child) {\n\t    child = this.index(child);\n\t    this.proxyOf.nodes[child].parent = undefined;\n\t    this.proxyOf.nodes.splice(child, 1);\n\n\t    let index;\n\t    for (let id in this.indexes) {\n\t      index = this.indexes[id];\n\t      if (index >= child) {\n\t        this.indexes[id] = index - 1;\n\t      }\n\t    }\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  replaceValues(pattern, opts, callback) {\n\t    if (!callback) {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\n\t    this.walkDecls(decl => {\n\t      if (opts.props && !opts.props.includes(decl.prop)) return\n\t      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n\t      decl.value = decl.value.replace(pattern, callback);\n\t    });\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  some(condition) {\n\t    return this.nodes.some(condition)\n\t  }\n\n\t  walk(callback) {\n\t    return this.each((child, i) => {\n\t      let result;\n\t      try {\n\t        result = callback(child, i);\n\t      } catch (e) {\n\t        throw child.addToError(e)\n\t      }\n\t      if (result !== false && child.walk) {\n\t        result = child.walk(callback);\n\t      }\n\n\t      return result\n\t    })\n\t  }\n\n\t  walkAtRules(name, callback) {\n\t    if (!callback) {\n\t      callback = name;\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'atrule') {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    if (name instanceof RegExp) {\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'atrule' && name.test(child.name)) {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    return this.walk((child, i) => {\n\t      if (child.type === 'atrule' && child.name === name) {\n\t        return callback(child, i)\n\t      }\n\t    })\n\t  }\n\n\t  walkComments(callback) {\n\t    return this.walk((child, i) => {\n\t      if (child.type === 'comment') {\n\t        return callback(child, i)\n\t      }\n\t    })\n\t  }\n\n\t  walkDecls(prop, callback) {\n\t    if (!callback) {\n\t      callback = prop;\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'decl') {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    if (prop instanceof RegExp) {\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'decl' && prop.test(child.prop)) {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    return this.walk((child, i) => {\n\t      if (child.type === 'decl' && child.prop === prop) {\n\t        return callback(child, i)\n\t      }\n\t    })\n\t  }\n\n\t  walkRules(selector, callback) {\n\t    if (!callback) {\n\t      callback = selector;\n\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'rule') {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    if (selector instanceof RegExp) {\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'rule' && selector.test(child.selector)) {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    return this.walk((child, i) => {\n\t      if (child.type === 'rule' && child.selector === selector) {\n\t        return callback(child, i)\n\t      }\n\t    })\n\t  }\n\t}\n\n\tContainer.registerParse = dependant => {\n\t  parse = dependant;\n\t};\n\n\tContainer.registerRule = dependant => {\n\t  Rule = dependant;\n\t};\n\n\tContainer.registerAtRule = dependant => {\n\t  AtRule = dependant;\n\t};\n\n\tContainer.registerRoot = dependant => {\n\t  Root = dependant;\n\t};\n\n\tcontainer = Container;\n\tContainer.default = Container;\n\n\t/* c8 ignore start */\n\tContainer.rebuild = node => {\n\t  if (node.type === 'atrule') {\n\t    Object.setPrototypeOf(node, AtRule.prototype);\n\t  } else if (node.type === 'rule') {\n\t    Object.setPrototypeOf(node, Rule.prototype);\n\t  } else if (node.type === 'decl') {\n\t    Object.setPrototypeOf(node, Declaration.prototype);\n\t  } else if (node.type === 'comment') {\n\t    Object.setPrototypeOf(node, Comment.prototype);\n\t  } else if (node.type === 'root') {\n\t    Object.setPrototypeOf(node, Root.prototype);\n\t  }\n\n\t  node[my] = true;\n\n\t  if (node.nodes) {\n\t    node.nodes.forEach(child => {\n\t      Container.rebuild(child);\n\t    });\n\t  }\n\t};\n\t/* c8 ignore stop */\n\treturn container;\n}\n\nvar atRule;\nvar hasRequiredAtRule;\n\nfunction requireAtRule () {\n\tif (hasRequiredAtRule) return atRule;\n\thasRequiredAtRule = 1;\n\n\tlet Container = requireContainer$1();\n\n\tclass AtRule extends Container {\n\t  constructor(defaults) {\n\t    super(defaults);\n\t    this.type = 'atrule';\n\t  }\n\n\t  append(...children) {\n\t    if (!this.proxyOf.nodes) this.nodes = [];\n\t    return super.append(...children)\n\t  }\n\n\t  prepend(...children) {\n\t    if (!this.proxyOf.nodes) this.nodes = [];\n\t    return super.prepend(...children)\n\t  }\n\t}\n\n\tatRule = AtRule;\n\tAtRule.default = AtRule;\n\n\tContainer.registerAtRule(AtRule);\n\treturn atRule;\n}\n\nvar document;\nvar hasRequiredDocument;\n\nfunction requireDocument () {\n\tif (hasRequiredDocument) return document;\n\thasRequiredDocument = 1;\n\n\tlet Container = requireContainer$1();\n\n\tlet LazyResult, Processor;\n\n\tclass Document extends Container {\n\t  constructor(defaults) {\n\t    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n\t    super({ type: 'document', ...defaults });\n\n\t    if (!this.nodes) {\n\t      this.nodes = [];\n\t    }\n\t  }\n\n\t  toResult(opts = {}) {\n\t    let lazy = new LazyResult(new Processor(), this, opts);\n\n\t    return lazy.stringify()\n\t  }\n\t}\n\n\tDocument.registerLazyResult = dependant => {\n\t  LazyResult = dependant;\n\t};\n\n\tDocument.registerProcessor = dependant => {\n\t  Processor = dependant;\n\t};\n\n\tdocument = Document;\n\tDocument.default = Document;\n\treturn document;\n}\n\nvar nonSecure;\nvar hasRequiredNonSecure;\n\nfunction requireNonSecure () {\n\tif (hasRequiredNonSecure) return nonSecure;\n\thasRequiredNonSecure = 1;\n\t// This alphabet uses `A-Za-z0-9_-` symbols.\n\t// The order of characters is optimized for better gzip and brotli compression.\n\t// References to the same file (works both for gzip and brotli):\n\t// `'use`, `andom`, and `rict'`\n\t// References to the brotli default dictionary:\n\t// `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\n\tlet urlAlphabet =\n\t  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\n\n\tlet customAlphabet = (alphabet, defaultSize = 21) => {\n\t  return (size = defaultSize) => {\n\t    let id = '';\n\t    // A compact alternative for `for (var i = 0; i < step; i++)`.\n\t    let i = size | 0;\n\t    while (i--) {\n\t      // `| 0` is more compact and faster than `Math.floor()`.\n\t      id += alphabet[(Math.random() * alphabet.length) | 0];\n\t    }\n\t    return id\n\t  }\n\t};\n\n\tlet nanoid = (size = 21) => {\n\t  let id = '';\n\t  // A compact alternative for `for (var i = 0; i < step; i++)`.\n\t  let i = size | 0;\n\t  while (i--) {\n\t    // `| 0` is more compact and faster than `Math.floor()`.\n\t    id += urlAlphabet[(Math.random() * 64) | 0];\n\t  }\n\t  return id\n\t};\n\n\tnonSecure = { nanoid, customAlphabet };\n\treturn nonSecure;\n}\n\nvar previousMap;\nvar hasRequiredPreviousMap;\n\nfunction requirePreviousMap () {\n\tif (hasRequiredPreviousMap) return previousMap;\n\thasRequiredPreviousMap = 1;\n\n\tlet { existsSync, readFileSync } = require$$2;\n\tlet { dirname, join } = require$$2;\n\tlet { SourceMapConsumer, SourceMapGenerator } = require$$2;\n\n\tfunction fromBase64(str) {\n\t  if (Buffer) {\n\t    return Buffer.from(str, 'base64').toString()\n\t  } else {\n\t    /* c8 ignore next 2 */\n\t    return window.atob(str)\n\t  }\n\t}\n\n\tclass PreviousMap {\n\t  constructor(css, opts) {\n\t    if (opts.map === false) return\n\t    this.loadAnnotation(css);\n\t    this.inline = this.startWith(this.annotation, 'data:');\n\n\t    let prev = opts.map ? opts.map.prev : undefined;\n\t    let text = this.loadMap(opts.from, prev);\n\t    if (!this.mapFile && opts.from) {\n\t      this.mapFile = opts.from;\n\t    }\n\t    if (this.mapFile) this.root = dirname(this.mapFile);\n\t    if (text) this.text = text;\n\t  }\n\n\t  consumer() {\n\t    if (!this.consumerCache) {\n\t      this.consumerCache = new SourceMapConsumer(this.text);\n\t    }\n\t    return this.consumerCache\n\t  }\n\n\t  decodeInline(text) {\n\t    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n\t    let baseUri = /^data:application\\/json;base64,/;\n\t    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\n\t    let uri = /^data:application\\/json,/;\n\n\t    let uriMatch = text.match(charsetUri) || text.match(uri);\n\t    if (uriMatch) {\n\t      return decodeURIComponent(text.substr(uriMatch[0].length))\n\t    }\n\n\t    let baseUriMatch = text.match(baseCharsetUri) || text.match(baseUri);\n\t    if (baseUriMatch) {\n\t      return fromBase64(text.substr(baseUriMatch[0].length))\n\t    }\n\n\t    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n\t    throw new Error('Unsupported source map encoding ' + encoding)\n\t  }\n\n\t  getAnnotationURL(sourceMapString) {\n\t    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n\t  }\n\n\t  isMap(map) {\n\t    if (typeof map !== 'object') return false\n\t    return (\n\t      typeof map.mappings === 'string' ||\n\t      typeof map._mappings === 'string' ||\n\t      Array.isArray(map.sections)\n\t    )\n\t  }\n\n\t  loadAnnotation(css) {\n\t    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/g);\n\t    if (!comments) return\n\n\t    // sourceMappingURLs from comments, strings, etc.\n\t    let start = css.lastIndexOf(comments.pop());\n\t    let end = css.indexOf('*/', start);\n\n\t    if (start > -1 && end > -1) {\n\t      // Locate the last sourceMappingURL to avoid pickin\n\t      this.annotation = this.getAnnotationURL(css.substring(start, end));\n\t    }\n\t  }\n\n\t  loadFile(path) {\n\t    this.root = dirname(path);\n\t    if (existsSync(path)) {\n\t      this.mapFile = path;\n\t      return readFileSync(path, 'utf-8').toString().trim()\n\t    }\n\t  }\n\n\t  loadMap(file, prev) {\n\t    if (prev === false) return false\n\n\t    if (prev) {\n\t      if (typeof prev === 'string') {\n\t        return prev\n\t      } else if (typeof prev === 'function') {\n\t        let prevPath = prev(file);\n\t        if (prevPath) {\n\t          let map = this.loadFile(prevPath);\n\t          if (!map) {\n\t            throw new Error(\n\t              'Unable to load previous source map: ' + prevPath.toString()\n\t            )\n\t          }\n\t          return map\n\t        }\n\t      } else if (prev instanceof SourceMapConsumer) {\n\t        return SourceMapGenerator.fromSourceMap(prev).toString()\n\t      } else if (prev instanceof SourceMapGenerator) {\n\t        return prev.toString()\n\t      } else if (this.isMap(prev)) {\n\t        return JSON.stringify(prev)\n\t      } else {\n\t        throw new Error(\n\t          'Unsupported previous source map format: ' + prev.toString()\n\t        )\n\t      }\n\t    } else if (this.inline) {\n\t      return this.decodeInline(this.annotation)\n\t    } else if (this.annotation) {\n\t      let map = this.annotation;\n\t      if (file) map = join(dirname(file), map);\n\t      return this.loadFile(map)\n\t    }\n\t  }\n\n\t  startWith(string, start) {\n\t    if (!string) return false\n\t    return string.substr(0, start.length) === start\n\t  }\n\n\t  withContent() {\n\t    return !!(\n\t      this.consumer().sourcesContent &&\n\t      this.consumer().sourcesContent.length > 0\n\t    )\n\t  }\n\t}\n\n\tpreviousMap = PreviousMap;\n\tPreviousMap.default = PreviousMap;\n\treturn previousMap;\n}\n\nvar input;\nvar hasRequiredInput;\n\nfunction requireInput () {\n\tif (hasRequiredInput) return input;\n\thasRequiredInput = 1;\n\n\tlet { nanoid } = /*@__PURE__*/ requireNonSecure();\n\tlet { isAbsolute, resolve } = require$$2;\n\tlet { SourceMapConsumer, SourceMapGenerator } = require$$2;\n\tlet { fileURLToPath, pathToFileURL } = require$$2;\n\n\tlet CssSyntaxError = requireCssSyntaxError();\n\tlet PreviousMap = requirePreviousMap();\n\tlet terminalHighlight = require$$2;\n\n\tlet lineToIndexCache = Symbol('lineToIndexCache');\n\n\tlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\n\tlet pathAvailable = Boolean(resolve && isAbsolute);\n\n\tfunction getLineToIndex(input) {\n\t  if (input[lineToIndexCache]) return input[lineToIndexCache]\n\t  let lines = input.css.split('\\n');\n\t  let lineToIndex = new Array(lines.length);\n\t  let prevIndex = 0;\n\n\t  for (let i = 0, l = lines.length; i < l; i++) {\n\t    lineToIndex[i] = prevIndex;\n\t    prevIndex += lines[i].length + 1;\n\t  }\n\n\t  input[lineToIndexCache] = lineToIndex;\n\t  return lineToIndex\n\t}\n\n\tclass Input {\n\t  get from() {\n\t    return this.file || this.id\n\t  }\n\n\t  constructor(css, opts = {}) {\n\t    if (\n\t      css === null ||\n\t      typeof css === 'undefined' ||\n\t      (typeof css === 'object' && !css.toString)\n\t    ) {\n\t      throw new Error(`PostCSS received ${css} instead of CSS string`)\n\t    }\n\n\t    this.css = css.toString();\n\n\t    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n\t      this.hasBOM = true;\n\t      this.css = this.css.slice(1);\n\t    } else {\n\t      this.hasBOM = false;\n\t    }\n\n\t    this.document = this.css;\n\t    if (opts.document) this.document = opts.document.toString();\n\n\t    if (opts.from) {\n\t      if (\n\t        !pathAvailable ||\n\t        /^\\w+:\\/\\//.test(opts.from) ||\n\t        isAbsolute(opts.from)\n\t      ) {\n\t        this.file = opts.from;\n\t      } else {\n\t        this.file = resolve(opts.from);\n\t      }\n\t    }\n\n\t    if (pathAvailable && sourceMapAvailable) {\n\t      let map = new PreviousMap(this.css, opts);\n\t      if (map.text) {\n\t        this.map = map;\n\t        let file = map.consumer().file;\n\t        if (!this.file && file) this.file = this.mapResolve(file);\n\t      }\n\t    }\n\n\t    if (!this.file) {\n\t      this.id = '<input css ' + nanoid(6) + '>';\n\t    }\n\t    if (this.map) this.map.file = this.from;\n\t  }\n\n\t  error(message, line, column, opts = {}) {\n\t    let endColumn, endLine, endOffset, offset, result;\n\n\t    if (line && typeof line === 'object') {\n\t      let start = line;\n\t      let end = column;\n\t      if (typeof start.offset === 'number') {\n\t        offset = start.offset;\n\t        let pos = this.fromOffset(offset);\n\t        line = pos.line;\n\t        column = pos.col;\n\t      } else {\n\t        line = start.line;\n\t        column = start.column;\n\t        offset = this.fromLineAndColumn(line, column);\n\t      }\n\t      if (typeof end.offset === 'number') {\n\t        endOffset = end.offset;\n\t        let pos = this.fromOffset(endOffset);\n\t        endLine = pos.line;\n\t        endColumn = pos.col;\n\t      } else {\n\t        endLine = end.line;\n\t        endColumn = end.column;\n\t        endOffset = this.fromLineAndColumn(end.line, end.column);\n\t      }\n\t    } else if (!column) {\n\t      offset = line;\n\t      let pos = this.fromOffset(offset);\n\t      line = pos.line;\n\t      column = pos.col;\n\t    } else {\n\t      offset = this.fromLineAndColumn(line, column);\n\t    }\n\n\t    let origin = this.origin(line, column, endLine, endColumn);\n\t    if (origin) {\n\t      result = new CssSyntaxError(\n\t        message,\n\t        origin.endLine === undefined\n\t          ? origin.line\n\t          : { column: origin.column, line: origin.line },\n\t        origin.endLine === undefined\n\t          ? origin.column\n\t          : { column: origin.endColumn, line: origin.endLine },\n\t        origin.source,\n\t        origin.file,\n\t        opts.plugin\n\t      );\n\t    } else {\n\t      result = new CssSyntaxError(\n\t        message,\n\t        endLine === undefined ? line : { column, line },\n\t        endLine === undefined ? column : { column: endColumn, line: endLine },\n\t        this.css,\n\t        this.file,\n\t        opts.plugin\n\t      );\n\t    }\n\n\t    result.input = { column, endColumn, endLine, endOffset, line, offset, source: this.css };\n\t    if (this.file) {\n\t      if (pathToFileURL) {\n\t        result.input.url = pathToFileURL(this.file).toString();\n\t      }\n\t      result.input.file = this.file;\n\t    }\n\n\t    return result\n\t  }\n\n\t  fromLineAndColumn(line, column) {\n\t    let lineToIndex = getLineToIndex(this);\n\t    let index = lineToIndex[line - 1];\n\t    return index + column - 1\n\t  }\n\n\t  fromOffset(offset) {\n\t    let lineToIndex = getLineToIndex(this);\n\t    let lastLine = lineToIndex[lineToIndex.length - 1];\n\n\t    let min = 0;\n\t    if (offset >= lastLine) {\n\t      min = lineToIndex.length - 1;\n\t    } else {\n\t      let max = lineToIndex.length - 2;\n\t      let mid;\n\t      while (min < max) {\n\t        mid = min + ((max - min) >> 1);\n\t        if (offset < lineToIndex[mid]) {\n\t          max = mid - 1;\n\t        } else if (offset >= lineToIndex[mid + 1]) {\n\t          min = mid + 1;\n\t        } else {\n\t          min = mid;\n\t          break\n\t        }\n\t      }\n\t    }\n\t    return {\n\t      col: offset - lineToIndex[min] + 1,\n\t      line: min + 1\n\t    }\n\t  }\n\n\t  mapResolve(file) {\n\t    if (/^\\w+:\\/\\//.test(file)) {\n\t      return file\n\t    }\n\t    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n\t  }\n\n\t  origin(line, column, endLine, endColumn) {\n\t    if (!this.map) return false\n\t    let consumer = this.map.consumer();\n\n\t    let from = consumer.originalPositionFor({ column, line });\n\t    if (!from.source) return false\n\n\t    let to;\n\t    if (typeof endLine === 'number') {\n\t      to = consumer.originalPositionFor({ column: endColumn, line: endLine });\n\t    }\n\n\t    let fromUrl;\n\n\t    if (isAbsolute(from.source)) {\n\t      fromUrl = pathToFileURL(from.source);\n\t    } else {\n\t      fromUrl = new URL(\n\t        from.source,\n\t        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n\t      );\n\t    }\n\n\t    let result = {\n\t      column: from.column,\n\t      endColumn: to && to.column,\n\t      endLine: to && to.line,\n\t      line: from.line,\n\t      url: fromUrl.toString()\n\t    };\n\n\t    if (fromUrl.protocol === 'file:') {\n\t      if (fileURLToPath) {\n\t        result.file = fileURLToPath(fromUrl);\n\t      } else {\n\t        /* c8 ignore next 2 */\n\t        throw new Error(`file: protocol is not available in this PostCSS build`)\n\t      }\n\t    }\n\n\t    let source = consumer.sourceContentFor(from.source);\n\t    if (source) result.source = source;\n\n\t    return result\n\t  }\n\n\t  toJSON() {\n\t    let json = {};\n\t    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n\t      if (this[name] != null) {\n\t        json[name] = this[name];\n\t      }\n\t    }\n\t    if (this.map) {\n\t      json.map = { ...this.map };\n\t      if (json.map.consumerCache) {\n\t        json.map.consumerCache = undefined;\n\t      }\n\t    }\n\t    return json\n\t  }\n\t}\n\n\tinput = Input;\n\tInput.default = Input;\n\n\tif (terminalHighlight && terminalHighlight.registerInput) {\n\t  terminalHighlight.registerInput(Input);\n\t}\n\treturn input;\n}\n\nvar root;\nvar hasRequiredRoot;\n\nfunction requireRoot () {\n\tif (hasRequiredRoot) return root;\n\thasRequiredRoot = 1;\n\n\tlet Container = requireContainer$1();\n\n\tlet LazyResult, Processor;\n\n\tclass Root extends Container {\n\t  constructor(defaults) {\n\t    super(defaults);\n\t    this.type = 'root';\n\t    if (!this.nodes) this.nodes = [];\n\t  }\n\n\t  normalize(child, sample, type) {\n\t    let nodes = super.normalize(child);\n\n\t    if (sample) {\n\t      if (type === 'prepend') {\n\t        if (this.nodes.length > 1) {\n\t          sample.raws.before = this.nodes[1].raws.before;\n\t        } else {\n\t          delete sample.raws.before;\n\t        }\n\t      } else if (this.first !== sample) {\n\t        for (let node of nodes) {\n\t          node.raws.before = sample.raws.before;\n\t        }\n\t      }\n\t    }\n\n\t    return nodes\n\t  }\n\n\t  removeChild(child, ignore) {\n\t    let index = this.index(child);\n\n\t    if (!ignore && index === 0 && this.nodes.length > 1) {\n\t      this.nodes[1].raws.before = this.nodes[index].raws.before;\n\t    }\n\n\t    return super.removeChild(child)\n\t  }\n\n\t  toResult(opts = {}) {\n\t    let lazy = new LazyResult(new Processor(), this, opts);\n\t    return lazy.stringify()\n\t  }\n\t}\n\n\tRoot.registerLazyResult = dependant => {\n\t  LazyResult = dependant;\n\t};\n\n\tRoot.registerProcessor = dependant => {\n\t  Processor = dependant;\n\t};\n\n\troot = Root;\n\tRoot.default = Root;\n\n\tContainer.registerRoot(Root);\n\treturn root;\n}\n\nvar list_1;\nvar hasRequiredList;\n\nfunction requireList () {\n\tif (hasRequiredList) return list_1;\n\thasRequiredList = 1;\n\n\tlet list = {\n\t  comma(string) {\n\t    return list.split(string, [','], true)\n\t  },\n\n\t  space(string) {\n\t    let spaces = [' ', '\\n', '\\t'];\n\t    return list.split(string, spaces)\n\t  },\n\n\t  split(string, separators, last) {\n\t    let array = [];\n\t    let current = '';\n\t    let split = false;\n\n\t    let func = 0;\n\t    let inQuote = false;\n\t    let prevQuote = '';\n\t    let escape = false;\n\n\t    for (let letter of string) {\n\t      if (escape) {\n\t        escape = false;\n\t      } else if (letter === '\\\\') {\n\t        escape = true;\n\t      } else if (inQuote) {\n\t        if (letter === prevQuote) {\n\t          inQuote = false;\n\t        }\n\t      } else if (letter === '\"' || letter === \"'\") {\n\t        inQuote = true;\n\t        prevQuote = letter;\n\t      } else if (letter === '(') {\n\t        func += 1;\n\t      } else if (letter === ')') {\n\t        if (func > 0) func -= 1;\n\t      } else if (func === 0) {\n\t        if (separators.includes(letter)) split = true;\n\t      }\n\n\t      if (split) {\n\t        if (current !== '') array.push(current.trim());\n\t        current = '';\n\t        split = false;\n\t      } else {\n\t        current += letter;\n\t      }\n\t    }\n\n\t    if (last || current !== '') array.push(current.trim());\n\t    return array\n\t  }\n\t};\n\n\tlist_1 = list;\n\tlist.default = list;\n\treturn list_1;\n}\n\nvar rule;\nvar hasRequiredRule;\n\nfunction requireRule () {\n\tif (hasRequiredRule) return rule;\n\thasRequiredRule = 1;\n\n\tlet Container = requireContainer$1();\n\tlet list = requireList();\n\n\tclass Rule extends Container {\n\t  get selectors() {\n\t    return list.comma(this.selector)\n\t  }\n\n\t  set selectors(values) {\n\t    let match = this.selector ? this.selector.match(/,\\s*/) : null;\n\t    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');\n\t    this.selector = values.join(sep);\n\t  }\n\n\t  constructor(defaults) {\n\t    super(defaults);\n\t    this.type = 'rule';\n\t    if (!this.nodes) this.nodes = [];\n\t  }\n\t}\n\n\trule = Rule;\n\tRule.default = Rule;\n\n\tContainer.registerRule(Rule);\n\treturn rule;\n}\n\nvar fromJSON_1;\nvar hasRequiredFromJSON;\n\nfunction requireFromJSON () {\n\tif (hasRequiredFromJSON) return fromJSON_1;\n\thasRequiredFromJSON = 1;\n\n\tlet AtRule = requireAtRule();\n\tlet Comment = requireComment();\n\tlet Declaration = requireDeclaration();\n\tlet Input = requireInput();\n\tlet PreviousMap = requirePreviousMap();\n\tlet Root = requireRoot();\n\tlet Rule = requireRule();\n\n\tfunction fromJSON(json, inputs) {\n\t  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n\t  let { inputs: ownInputs, ...defaults } = json;\n\t  if (ownInputs) {\n\t    inputs = [];\n\t    for (let input of ownInputs) {\n\t      let inputHydrated = { ...input, __proto__: Input.prototype };\n\t      if (inputHydrated.map) {\n\t        inputHydrated.map = {\n\t          ...inputHydrated.map,\n\t          __proto__: PreviousMap.prototype\n\t        };\n\t      }\n\t      inputs.push(inputHydrated);\n\t    }\n\t  }\n\t  if (defaults.nodes) {\n\t    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs));\n\t  }\n\t  if (defaults.source) {\n\t    let { inputId, ...source } = defaults.source;\n\t    defaults.source = source;\n\t    if (inputId != null) {\n\t      defaults.source.input = inputs[inputId];\n\t    }\n\t  }\n\t  if (defaults.type === 'root') {\n\t    return new Root(defaults)\n\t  } else if (defaults.type === 'decl') {\n\t    return new Declaration(defaults)\n\t  } else if (defaults.type === 'rule') {\n\t    return new Rule(defaults)\n\t  } else if (defaults.type === 'comment') {\n\t    return new Comment(defaults)\n\t  } else if (defaults.type === 'atrule') {\n\t    return new AtRule(defaults)\n\t  } else {\n\t    throw new Error('Unknown node type: ' + json.type)\n\t  }\n\t}\n\n\tfromJSON_1 = fromJSON;\n\tfromJSON.default = fromJSON;\n\treturn fromJSON_1;\n}\n\nvar mapGenerator;\nvar hasRequiredMapGenerator;\n\nfunction requireMapGenerator () {\n\tif (hasRequiredMapGenerator) return mapGenerator;\n\thasRequiredMapGenerator = 1;\n\n\tlet { dirname, relative, resolve, sep } = require$$2;\n\tlet { SourceMapConsumer, SourceMapGenerator } = require$$2;\n\tlet { pathToFileURL } = require$$2;\n\n\tlet Input = requireInput();\n\n\tlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\n\tlet pathAvailable = Boolean(dirname && resolve && relative && sep);\n\n\tclass MapGenerator {\n\t  constructor(stringify, root, opts, cssString) {\n\t    this.stringify = stringify;\n\t    this.mapOpts = opts.map || {};\n\t    this.root = root;\n\t    this.opts = opts;\n\t    this.css = cssString;\n\t    this.originalCSS = cssString;\n\t    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\n\n\t    this.memoizedFileURLs = new Map();\n\t    this.memoizedPaths = new Map();\n\t    this.memoizedURLs = new Map();\n\t  }\n\n\t  addAnnotation() {\n\t    let content;\n\n\t    if (this.isInline()) {\n\t      content =\n\t        'data:application/json;base64,' + this.toBase64(this.map.toString());\n\t    } else if (typeof this.mapOpts.annotation === 'string') {\n\t      content = this.mapOpts.annotation;\n\t    } else if (typeof this.mapOpts.annotation === 'function') {\n\t      content = this.mapOpts.annotation(this.opts.to, this.root);\n\t    } else {\n\t      content = this.outputFile() + '.map';\n\t    }\n\t    let eol = '\\n';\n\t    if (this.css.includes('\\r\\n')) eol = '\\r\\n';\n\n\t    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n\t  }\n\n\t  applyPrevMaps() {\n\t    for (let prev of this.previous()) {\n\t      let from = this.toUrl(this.path(prev.file));\n\t      let root = prev.root || dirname(prev.file);\n\t      let map;\n\n\t      if (this.mapOpts.sourcesContent === false) {\n\t        map = new SourceMapConsumer(prev.text);\n\t        if (map.sourcesContent) {\n\t          map.sourcesContent = null;\n\t        }\n\t      } else {\n\t        map = prev.consumer();\n\t      }\n\n\t      this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\n\t    }\n\t  }\n\n\t  clearAnnotation() {\n\t    if (this.mapOpts.annotation === false) return\n\n\t    if (this.root) {\n\t      let node;\n\t      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n\t        node = this.root.nodes[i];\n\t        if (node.type !== 'comment') continue\n\t        if (node.text.startsWith('# sourceMappingURL=')) {\n\t          this.root.removeChild(i);\n\t        }\n\t      }\n\t    } else if (this.css) {\n\t      this.css = this.css.replace(/\\n*\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\n\t    }\n\t  }\n\n\t  generate() {\n\t    this.clearAnnotation();\n\t    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n\t      return this.generateMap()\n\t    } else {\n\t      let result = '';\n\t      this.stringify(this.root, i => {\n\t        result += i;\n\t      });\n\t      return [result]\n\t    }\n\t  }\n\n\t  generateMap() {\n\t    if (this.root) {\n\t      this.generateString();\n\t    } else if (this.previous().length === 1) {\n\t      let prev = this.previous()[0].consumer();\n\t      prev.file = this.outputFile();\n\t      this.map = SourceMapGenerator.fromSourceMap(prev, {\n\t        ignoreInvalidMapping: true\n\t      });\n\t    } else {\n\t      this.map = new SourceMapGenerator({\n\t        file: this.outputFile(),\n\t        ignoreInvalidMapping: true\n\t      });\n\t      this.map.addMapping({\n\t        generated: { column: 0, line: 1 },\n\t        original: { column: 0, line: 1 },\n\t        source: this.opts.from\n\t          ? this.toUrl(this.path(this.opts.from))\n\t          : '<no source>'\n\t      });\n\t    }\n\n\t    if (this.isSourcesContent()) this.setSourcesContent();\n\t    if (this.root && this.previous().length > 0) this.applyPrevMaps();\n\t    if (this.isAnnotation()) this.addAnnotation();\n\n\t    if (this.isInline()) {\n\t      return [this.css]\n\t    } else {\n\t      return [this.css, this.map]\n\t    }\n\t  }\n\n\t  generateString() {\n\t    this.css = '';\n\t    this.map = new SourceMapGenerator({\n\t      file: this.outputFile(),\n\t      ignoreInvalidMapping: true\n\t    });\n\n\t    let line = 1;\n\t    let column = 1;\n\n\t    let noSource = '<no source>';\n\t    let mapping = {\n\t      generated: { column: 0, line: 0 },\n\t      original: { column: 0, line: 0 },\n\t      source: ''\n\t    };\n\n\t    let last, lines;\n\t    this.stringify(this.root, (str, node, type) => {\n\t      this.css += str;\n\n\t      if (node && type !== 'end') {\n\t        mapping.generated.line = line;\n\t        mapping.generated.column = column - 1;\n\t        if (node.source && node.source.start) {\n\t          mapping.source = this.sourcePath(node);\n\t          mapping.original.line = node.source.start.line;\n\t          mapping.original.column = node.source.start.column - 1;\n\t          this.map.addMapping(mapping);\n\t        } else {\n\t          mapping.source = noSource;\n\t          mapping.original.line = 1;\n\t          mapping.original.column = 0;\n\t          this.map.addMapping(mapping);\n\t        }\n\t      }\n\n\t      lines = str.match(/\\n/g);\n\t      if (lines) {\n\t        line += lines.length;\n\t        last = str.lastIndexOf('\\n');\n\t        column = str.length - last;\n\t      } else {\n\t        column += str.length;\n\t      }\n\n\t      if (node && type !== 'start') {\n\t        let p = node.parent || { raws: {} };\n\t        let childless =\n\t          node.type === 'decl' || (node.type === 'atrule' && !node.nodes);\n\t        if (!childless || node !== p.last || p.raws.semicolon) {\n\t          if (node.source && node.source.end) {\n\t            mapping.source = this.sourcePath(node);\n\t            mapping.original.line = node.source.end.line;\n\t            mapping.original.column = node.source.end.column - 1;\n\t            mapping.generated.line = line;\n\t            mapping.generated.column = column - 2;\n\t            this.map.addMapping(mapping);\n\t          } else {\n\t            mapping.source = noSource;\n\t            mapping.original.line = 1;\n\t            mapping.original.column = 0;\n\t            mapping.generated.line = line;\n\t            mapping.generated.column = column - 1;\n\t            this.map.addMapping(mapping);\n\t          }\n\t        }\n\t      }\n\t    });\n\t  }\n\n\t  isAnnotation() {\n\t    if (this.isInline()) {\n\t      return true\n\t    }\n\t    if (typeof this.mapOpts.annotation !== 'undefined') {\n\t      return this.mapOpts.annotation\n\t    }\n\t    if (this.previous().length) {\n\t      return this.previous().some(i => i.annotation)\n\t    }\n\t    return true\n\t  }\n\n\t  isInline() {\n\t    if (typeof this.mapOpts.inline !== 'undefined') {\n\t      return this.mapOpts.inline\n\t    }\n\n\t    let annotation = this.mapOpts.annotation;\n\t    if (typeof annotation !== 'undefined' && annotation !== true) {\n\t      return false\n\t    }\n\n\t    if (this.previous().length) {\n\t      return this.previous().some(i => i.inline)\n\t    }\n\t    return true\n\t  }\n\n\t  isMap() {\n\t    if (typeof this.opts.map !== 'undefined') {\n\t      return !!this.opts.map\n\t    }\n\t    return this.previous().length > 0\n\t  }\n\n\t  isSourcesContent() {\n\t    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n\t      return this.mapOpts.sourcesContent\n\t    }\n\t    if (this.previous().length) {\n\t      return this.previous().some(i => i.withContent())\n\t    }\n\t    return true\n\t  }\n\n\t  outputFile() {\n\t    if (this.opts.to) {\n\t      return this.path(this.opts.to)\n\t    } else if (this.opts.from) {\n\t      return this.path(this.opts.from)\n\t    } else {\n\t      return 'to.css'\n\t    }\n\t  }\n\n\t  path(file) {\n\t    if (this.mapOpts.absolute) return file\n\t    if (file.charCodeAt(0) === 60 /* `<` */) return file\n\t    if (/^\\w+:\\/\\//.test(file)) return file\n\t    let cached = this.memoizedPaths.get(file);\n\t    if (cached) return cached\n\n\t    let from = this.opts.to ? dirname(this.opts.to) : '.';\n\n\t    if (typeof this.mapOpts.annotation === 'string') {\n\t      from = dirname(resolve(from, this.mapOpts.annotation));\n\t    }\n\n\t    let path = relative(from, file);\n\t    this.memoizedPaths.set(file, path);\n\n\t    return path\n\t  }\n\n\t  previous() {\n\t    if (!this.previousMaps) {\n\t      this.previousMaps = [];\n\t      if (this.root) {\n\t        this.root.walk(node => {\n\t          if (node.source && node.source.input.map) {\n\t            let map = node.source.input.map;\n\t            if (!this.previousMaps.includes(map)) {\n\t              this.previousMaps.push(map);\n\t            }\n\t          }\n\t        });\n\t      } else {\n\t        let input = new Input(this.originalCSS, this.opts);\n\t        if (input.map) this.previousMaps.push(input.map);\n\t      }\n\t    }\n\n\t    return this.previousMaps\n\t  }\n\n\t  setSourcesContent() {\n\t    let already = {};\n\t    if (this.root) {\n\t      this.root.walk(node => {\n\t        if (node.source) {\n\t          let from = node.source.input.from;\n\t          if (from && !already[from]) {\n\t            already[from] = true;\n\t            let fromUrl = this.usesFileUrls\n\t              ? this.toFileUrl(from)\n\t              : this.toUrl(this.path(from));\n\t            this.map.setSourceContent(fromUrl, node.source.input.css);\n\t          }\n\t        }\n\t      });\n\t    } else if (this.css) {\n\t      let from = this.opts.from\n\t        ? this.toUrl(this.path(this.opts.from))\n\t        : '<no source>';\n\t      this.map.setSourceContent(from, this.css);\n\t    }\n\t  }\n\n\t  sourcePath(node) {\n\t    if (this.mapOpts.from) {\n\t      return this.toUrl(this.mapOpts.from)\n\t    } else if (this.usesFileUrls) {\n\t      return this.toFileUrl(node.source.input.from)\n\t    } else {\n\t      return this.toUrl(this.path(node.source.input.from))\n\t    }\n\t  }\n\n\t  toBase64(str) {\n\t    if (Buffer) {\n\t      return Buffer.from(str).toString('base64')\n\t    } else {\n\t      return window.btoa(unescape(encodeURIComponent(str)))\n\t    }\n\t  }\n\n\t  toFileUrl(path) {\n\t    let cached = this.memoizedFileURLs.get(path);\n\t    if (cached) return cached\n\n\t    if (pathToFileURL) {\n\t      let fileURL = pathToFileURL(path).toString();\n\t      this.memoizedFileURLs.set(path, fileURL);\n\n\t      return fileURL\n\t    } else {\n\t      throw new Error(\n\t        '`map.absolute` option is not available in this PostCSS build'\n\t      )\n\t    }\n\t  }\n\n\t  toUrl(path) {\n\t    let cached = this.memoizedURLs.get(path);\n\t    if (cached) return cached\n\n\t    if (sep === '\\\\') {\n\t      path = path.replace(/\\\\/g, '/');\n\t    }\n\n\t    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n\t    this.memoizedURLs.set(path, url);\n\n\t    return url\n\t  }\n\t}\n\n\tmapGenerator = MapGenerator;\n\treturn mapGenerator;\n}\n\nvar tokenize;\nvar hasRequiredTokenize;\n\nfunction requireTokenize () {\n\tif (hasRequiredTokenize) return tokenize;\n\thasRequiredTokenize = 1;\n\n\tconst SINGLE_QUOTE = \"'\".charCodeAt(0);\n\tconst DOUBLE_QUOTE = '\"'.charCodeAt(0);\n\tconst BACKSLASH = '\\\\'.charCodeAt(0);\n\tconst SLASH = '/'.charCodeAt(0);\n\tconst NEWLINE = '\\n'.charCodeAt(0);\n\tconst SPACE = ' '.charCodeAt(0);\n\tconst FEED = '\\f'.charCodeAt(0);\n\tconst TAB = '\\t'.charCodeAt(0);\n\tconst CR = '\\r'.charCodeAt(0);\n\tconst OPEN_SQUARE = '['.charCodeAt(0);\n\tconst CLOSE_SQUARE = ']'.charCodeAt(0);\n\tconst OPEN_PARENTHESES = '('.charCodeAt(0);\n\tconst CLOSE_PARENTHESES = ')'.charCodeAt(0);\n\tconst OPEN_CURLY = '{'.charCodeAt(0);\n\tconst CLOSE_CURLY = '}'.charCodeAt(0);\n\tconst SEMICOLON = ';'.charCodeAt(0);\n\tconst ASTERISK = '*'.charCodeAt(0);\n\tconst COLON = ':'.charCodeAt(0);\n\tconst AT = '@'.charCodeAt(0);\n\n\tconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g;\n\tconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g;\n\tconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/;\n\tconst RE_HEX_ESCAPE = /[\\da-f]/i;\n\n\ttokenize = function tokenizer(input, options = {}) {\n\t  let css = input.css.valueOf();\n\t  let ignore = options.ignoreErrors;\n\n\t  let code, content, escape, next, quote;\n\t  let currentToken, escaped, escapePos, n, prev;\n\n\t  let length = css.length;\n\t  let pos = 0;\n\t  let buffer = [];\n\t  let returned = [];\n\n\t  function position() {\n\t    return pos\n\t  }\n\n\t  function unclosed(what) {\n\t    throw input.error('Unclosed ' + what, pos)\n\t  }\n\n\t  function endOfFile() {\n\t    return returned.length === 0 && pos >= length\n\t  }\n\n\t  function nextToken(opts) {\n\t    if (returned.length) return returned.pop()\n\t    if (pos >= length) return\n\n\t    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n\n\t    code = css.charCodeAt(pos);\n\n\t    switch (code) {\n\t      case NEWLINE:\n\t      case SPACE:\n\t      case TAB:\n\t      case CR:\n\t      case FEED: {\n\t        next = pos;\n\t        do {\n\t          next += 1;\n\t          code = css.charCodeAt(next);\n\t        } while (\n\t          code === SPACE ||\n\t          code === NEWLINE ||\n\t          code === TAB ||\n\t          code === CR ||\n\t          code === FEED\n\t        )\n\n\t        currentToken = ['space', css.slice(pos, next)];\n\t        pos = next - 1;\n\t        break\n\t      }\n\n\t      case OPEN_SQUARE:\n\t      case CLOSE_SQUARE:\n\t      case OPEN_CURLY:\n\t      case CLOSE_CURLY:\n\t      case COLON:\n\t      case SEMICOLON:\n\t      case CLOSE_PARENTHESES: {\n\t        let controlChar = String.fromCharCode(code);\n\t        currentToken = [controlChar, controlChar, pos];\n\t        break\n\t      }\n\n\t      case OPEN_PARENTHESES: {\n\t        prev = buffer.length ? buffer.pop()[1] : '';\n\t        n = css.charCodeAt(pos + 1);\n\t        if (\n\t          prev === 'url' &&\n\t          n !== SINGLE_QUOTE &&\n\t          n !== DOUBLE_QUOTE &&\n\t          n !== SPACE &&\n\t          n !== NEWLINE &&\n\t          n !== TAB &&\n\t          n !== FEED &&\n\t          n !== CR\n\t        ) {\n\t          next = pos;\n\t          do {\n\t            escaped = false;\n\t            next = css.indexOf(')', next + 1);\n\t            if (next === -1) {\n\t              if (ignore || ignoreUnclosed) {\n\t                next = pos;\n\t                break\n\t              } else {\n\t                unclosed('bracket');\n\t              }\n\t            }\n\t            escapePos = next;\n\t            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n\t              escapePos -= 1;\n\t              escaped = !escaped;\n\t            }\n\t          } while (escaped)\n\n\t          currentToken = ['brackets', css.slice(pos, next + 1), pos, next];\n\n\t          pos = next;\n\t        } else {\n\t          next = css.indexOf(')', pos + 1);\n\t          content = css.slice(pos, next + 1);\n\n\t          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n\t            currentToken = ['(', '(', pos];\n\t          } else {\n\t            currentToken = ['brackets', content, pos, next];\n\t            pos = next;\n\t          }\n\t        }\n\n\t        break\n\t      }\n\n\t      case SINGLE_QUOTE:\n\t      case DOUBLE_QUOTE: {\n\t        quote = code === SINGLE_QUOTE ? \"'\" : '\"';\n\t        next = pos;\n\t        do {\n\t          escaped = false;\n\t          next = css.indexOf(quote, next + 1);\n\t          if (next === -1) {\n\t            if (ignore || ignoreUnclosed) {\n\t              next = pos + 1;\n\t              break\n\t            } else {\n\t              unclosed('string');\n\t            }\n\t          }\n\t          escapePos = next;\n\t          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n\t            escapePos -= 1;\n\t            escaped = !escaped;\n\t          }\n\t        } while (escaped)\n\n\t        currentToken = ['string', css.slice(pos, next + 1), pos, next];\n\t        pos = next;\n\t        break\n\t      }\n\n\t      case AT: {\n\t        RE_AT_END.lastIndex = pos + 1;\n\t        RE_AT_END.test(css);\n\t        if (RE_AT_END.lastIndex === 0) {\n\t          next = css.length - 1;\n\t        } else {\n\t          next = RE_AT_END.lastIndex - 2;\n\t        }\n\n\t        currentToken = ['at-word', css.slice(pos, next + 1), pos, next];\n\n\t        pos = next;\n\t        break\n\t      }\n\n\t      case BACKSLASH: {\n\t        next = pos;\n\t        escape = true;\n\t        while (css.charCodeAt(next + 1) === BACKSLASH) {\n\t          next += 1;\n\t          escape = !escape;\n\t        }\n\t        code = css.charCodeAt(next + 1);\n\t        if (\n\t          escape &&\n\t          code !== SLASH &&\n\t          code !== SPACE &&\n\t          code !== NEWLINE &&\n\t          code !== TAB &&\n\t          code !== CR &&\n\t          code !== FEED\n\t        ) {\n\t          next += 1;\n\t          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n\t            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n\t              next += 1;\n\t            }\n\t            if (css.charCodeAt(next + 1) === SPACE) {\n\t              next += 1;\n\t            }\n\t          }\n\t        }\n\n\t        currentToken = ['word', css.slice(pos, next + 1), pos, next];\n\n\t        pos = next;\n\t        break\n\t      }\n\n\t      default: {\n\t        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n\t          next = css.indexOf('*/', pos + 2) + 1;\n\t          if (next === 0) {\n\t            if (ignore || ignoreUnclosed) {\n\t              next = css.length;\n\t            } else {\n\t              unclosed('comment');\n\t            }\n\t          }\n\n\t          currentToken = ['comment', css.slice(pos, next + 1), pos, next];\n\t          pos = next;\n\t        } else {\n\t          RE_WORD_END.lastIndex = pos + 1;\n\t          RE_WORD_END.test(css);\n\t          if (RE_WORD_END.lastIndex === 0) {\n\t            next = css.length - 1;\n\t          } else {\n\t            next = RE_WORD_END.lastIndex - 2;\n\t          }\n\n\t          currentToken = ['word', css.slice(pos, next + 1), pos, next];\n\t          buffer.push(currentToken);\n\t          pos = next;\n\t        }\n\n\t        break\n\t      }\n\t    }\n\n\t    pos++;\n\t    return currentToken\n\t  }\n\n\t  function back(token) {\n\t    returned.push(token);\n\t  }\n\n\t  return {\n\t    back,\n\t    endOfFile,\n\t    nextToken,\n\t    position\n\t  }\n\t};\n\treturn tokenize;\n}\n\nvar parser;\nvar hasRequiredParser;\n\nfunction requireParser () {\n\tif (hasRequiredParser) return parser;\n\thasRequiredParser = 1;\n\n\tlet AtRule = requireAtRule();\n\tlet Comment = requireComment();\n\tlet Declaration = requireDeclaration();\n\tlet Root = requireRoot();\n\tlet Rule = requireRule();\n\tlet tokenizer = requireTokenize();\n\n\tconst SAFE_COMMENT_NEIGHBOR = {\n\t  empty: true,\n\t  space: true\n\t};\n\n\tfunction findLastWithPosition(tokens) {\n\t  for (let i = tokens.length - 1; i >= 0; i--) {\n\t    let token = tokens[i];\n\t    let pos = token[3] || token[2];\n\t    if (pos) return pos\n\t  }\n\t}\n\n\tclass Parser {\n\t  constructor(input) {\n\t    this.input = input;\n\n\t    this.root = new Root();\n\t    this.current = this.root;\n\t    this.spaces = '';\n\t    this.semicolon = false;\n\n\t    this.createTokenizer();\n\t    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } };\n\t  }\n\n\t  atrule(token) {\n\t    let node = new AtRule();\n\t    node.name = token[1].slice(1);\n\t    if (node.name === '') {\n\t      this.unnamedAtrule(node, token);\n\t    }\n\t    this.init(node, token[2]);\n\n\t    let type;\n\t    let prev;\n\t    let shift;\n\t    let last = false;\n\t    let open = false;\n\t    let params = [];\n\t    let brackets = [];\n\n\t    while (!this.tokenizer.endOfFile()) {\n\t      token = this.tokenizer.nextToken();\n\t      type = token[0];\n\n\t      if (type === '(' || type === '[') {\n\t        brackets.push(type === '(' ? ')' : ']');\n\t      } else if (type === '{' && brackets.length > 0) {\n\t        brackets.push('}');\n\t      } else if (type === brackets[brackets.length - 1]) {\n\t        brackets.pop();\n\t      }\n\n\t      if (brackets.length === 0) {\n\t        if (type === ';') {\n\t          node.source.end = this.getPosition(token[2]);\n\t          node.source.end.offset++;\n\t          this.semicolon = true;\n\t          break\n\t        } else if (type === '{') {\n\t          open = true;\n\t          break\n\t        } else if (type === '}') {\n\t          if (params.length > 0) {\n\t            shift = params.length - 1;\n\t            prev = params[shift];\n\t            while (prev && prev[0] === 'space') {\n\t              prev = params[--shift];\n\t            }\n\t            if (prev) {\n\t              node.source.end = this.getPosition(prev[3] || prev[2]);\n\t              node.source.end.offset++;\n\t            }\n\t          }\n\t          this.end(token);\n\t          break\n\t        } else {\n\t          params.push(token);\n\t        }\n\t      } else {\n\t        params.push(token);\n\t      }\n\n\t      if (this.tokenizer.endOfFile()) {\n\t        last = true;\n\t        break\n\t      }\n\t    }\n\n\t    node.raws.between = this.spacesAndCommentsFromEnd(params);\n\t    if (params.length) {\n\t      node.raws.afterName = this.spacesAndCommentsFromStart(params);\n\t      this.raw(node, 'params', params);\n\t      if (last) {\n\t        token = params[params.length - 1];\n\t        node.source.end = this.getPosition(token[3] || token[2]);\n\t        node.source.end.offset++;\n\t        this.spaces = node.raws.between;\n\t        node.raws.between = '';\n\t      }\n\t    } else {\n\t      node.raws.afterName = '';\n\t      node.params = '';\n\t    }\n\n\t    if (open) {\n\t      node.nodes = [];\n\t      this.current = node;\n\t    }\n\t  }\n\n\t  checkMissedSemicolon(tokens) {\n\t    let colon = this.colon(tokens);\n\t    if (colon === false) return\n\n\t    let founded = 0;\n\t    let token;\n\t    for (let j = colon - 1; j >= 0; j--) {\n\t      token = tokens[j];\n\t      if (token[0] !== 'space') {\n\t        founded += 1;\n\t        if (founded === 2) break\n\t      }\n\t    }\n\t    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n\t    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n\t    // And because we need it after that one we do +1 to get the next one.\n\t    throw this.input.error(\n\t      'Missed semicolon',\n\t      token[0] === 'word' ? token[3] + 1 : token[2]\n\t    )\n\t  }\n\n\t  colon(tokens) {\n\t    let brackets = 0;\n\t    let prev, token, type;\n\t    for (let [i, element] of tokens.entries()) {\n\t      token = element;\n\t      type = token[0];\n\n\t      if (type === '(') {\n\t        brackets += 1;\n\t      }\n\t      if (type === ')') {\n\t        brackets -= 1;\n\t      }\n\t      if (brackets === 0 && type === ':') {\n\t        if (!prev) {\n\t          this.doubleColon(token);\n\t        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n\t          continue\n\t        } else {\n\t          return i\n\t        }\n\t      }\n\n\t      prev = token;\n\t    }\n\t    return false\n\t  }\n\n\t  comment(token) {\n\t    let node = new Comment();\n\t    this.init(node, token[2]);\n\t    node.source.end = this.getPosition(token[3] || token[2]);\n\t    node.source.end.offset++;\n\n\t    let text = token[1].slice(2, -2);\n\t    if (/^\\s*$/.test(text)) {\n\t      node.text = '';\n\t      node.raws.left = text;\n\t      node.raws.right = '';\n\t    } else {\n\t      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/);\n\t      node.text = match[2];\n\t      node.raws.left = match[1];\n\t      node.raws.right = match[3];\n\t    }\n\t  }\n\n\t  createTokenizer() {\n\t    this.tokenizer = tokenizer(this.input);\n\t  }\n\n\t  decl(tokens, customProperty) {\n\t    let node = new Declaration();\n\t    this.init(node, tokens[0][2]);\n\n\t    let last = tokens[tokens.length - 1];\n\t    if (last[0] === ';') {\n\t      this.semicolon = true;\n\t      tokens.pop();\n\t    }\n\n\t    node.source.end = this.getPosition(\n\t      last[3] || last[2] || findLastWithPosition(tokens)\n\t    );\n\t    node.source.end.offset++;\n\n\t    while (tokens[0][0] !== 'word') {\n\t      if (tokens.length === 1) this.unknownWord(tokens);\n\t      node.raws.before += tokens.shift()[1];\n\t    }\n\t    node.source.start = this.getPosition(tokens[0][2]);\n\n\t    node.prop = '';\n\t    while (tokens.length) {\n\t      let type = tokens[0][0];\n\t      if (type === ':' || type === 'space' || type === 'comment') {\n\t        break\n\t      }\n\t      node.prop += tokens.shift()[1];\n\t    }\n\n\t    node.raws.between = '';\n\n\t    let token;\n\t    while (tokens.length) {\n\t      token = tokens.shift();\n\n\t      if (token[0] === ':') {\n\t        node.raws.between += token[1];\n\t        break\n\t      } else {\n\t        if (token[0] === 'word' && /\\w/.test(token[1])) {\n\t          this.unknownWord([token]);\n\t        }\n\t        node.raws.between += token[1];\n\t      }\n\t    }\n\n\t    if (node.prop[0] === '_' || node.prop[0] === '*') {\n\t      node.raws.before += node.prop[0];\n\t      node.prop = node.prop.slice(1);\n\t    }\n\n\t    let firstSpaces = [];\n\t    let next;\n\t    while (tokens.length) {\n\t      next = tokens[0][0];\n\t      if (next !== 'space' && next !== 'comment') break\n\t      firstSpaces.push(tokens.shift());\n\t    }\n\n\t    this.precheckMissedSemicolon(tokens);\n\n\t    for (let i = tokens.length - 1; i >= 0; i--) {\n\t      token = tokens[i];\n\t      if (token[1].toLowerCase() === '!important') {\n\t        node.important = true;\n\t        let string = this.stringFrom(tokens, i);\n\t        string = this.spacesFromEnd(tokens) + string;\n\t        if (string !== ' !important') node.raws.important = string;\n\t        break\n\t      } else if (token[1].toLowerCase() === 'important') {\n\t        let cache = tokens.slice(0);\n\t        let str = '';\n\t        for (let j = i; j > 0; j--) {\n\t          let type = cache[j][0];\n\t          if (str.trim().startsWith('!') && type !== 'space') {\n\t            break\n\t          }\n\t          str = cache.pop()[1] + str;\n\t        }\n\t        if (str.trim().startsWith('!')) {\n\t          node.important = true;\n\t          node.raws.important = str;\n\t          tokens = cache;\n\t        }\n\t      }\n\n\t      if (token[0] !== 'space' && token[0] !== 'comment') {\n\t        break\n\t      }\n\t    }\n\n\t    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment');\n\n\t    if (hasWord) {\n\t      node.raws.between += firstSpaces.map(i => i[1]).join('');\n\t      firstSpaces = [];\n\t    }\n\t    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty);\n\n\t    if (node.value.includes(':') && !customProperty) {\n\t      this.checkMissedSemicolon(tokens);\n\t    }\n\t  }\n\n\t  doubleColon(token) {\n\t    throw this.input.error(\n\t      'Double colon',\n\t      { offset: token[2] },\n\t      { offset: token[2] + token[1].length }\n\t    )\n\t  }\n\n\t  emptyRule(token) {\n\t    let node = new Rule();\n\t    this.init(node, token[2]);\n\t    node.selector = '';\n\t    node.raws.between = '';\n\t    this.current = node;\n\t  }\n\n\t  end(token) {\n\t    if (this.current.nodes && this.current.nodes.length) {\n\t      this.current.raws.semicolon = this.semicolon;\n\t    }\n\t    this.semicolon = false;\n\n\t    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n\t    this.spaces = '';\n\n\t    if (this.current.parent) {\n\t      this.current.source.end = this.getPosition(token[2]);\n\t      this.current.source.end.offset++;\n\t      this.current = this.current.parent;\n\t    } else {\n\t      this.unexpectedClose(token);\n\t    }\n\t  }\n\n\t  endFile() {\n\t    if (this.current.parent) this.unclosedBlock();\n\t    if (this.current.nodes && this.current.nodes.length) {\n\t      this.current.raws.semicolon = this.semicolon;\n\t    }\n\t    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n\t    this.root.source.end = this.getPosition(this.tokenizer.position());\n\t  }\n\n\t  freeSemicolon(token) {\n\t    this.spaces += token[1];\n\t    if (this.current.nodes) {\n\t      let prev = this.current.nodes[this.current.nodes.length - 1];\n\t      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n\t        prev.raws.ownSemicolon = this.spaces;\n\t        this.spaces = '';\n\t        prev.source.end = this.getPosition(token[2]);\n\t        prev.source.end.offset += prev.raws.ownSemicolon.length;\n\t      }\n\t    }\n\t  }\n\n\t  // Helpers\n\n\t  getPosition(offset) {\n\t    let pos = this.input.fromOffset(offset);\n\t    return {\n\t      column: pos.col,\n\t      line: pos.line,\n\t      offset\n\t    }\n\t  }\n\n\t  init(node, offset) {\n\t    this.current.push(node);\n\t    node.source = {\n\t      input: this.input,\n\t      start: this.getPosition(offset)\n\t    };\n\t    node.raws.before = this.spaces;\n\t    this.spaces = '';\n\t    if (node.type !== 'comment') this.semicolon = false;\n\t  }\n\n\t  other(start) {\n\t    let end = false;\n\t    let type = null;\n\t    let colon = false;\n\t    let bracket = null;\n\t    let brackets = [];\n\t    let customProperty = start[1].startsWith('--');\n\n\t    let tokens = [];\n\t    let token = start;\n\t    while (token) {\n\t      type = token[0];\n\t      tokens.push(token);\n\n\t      if (type === '(' || type === '[') {\n\t        if (!bracket) bracket = token;\n\t        brackets.push(type === '(' ? ')' : ']');\n\t      } else if (customProperty && colon && type === '{') {\n\t        if (!bracket) bracket = token;\n\t        brackets.push('}');\n\t      } else if (brackets.length === 0) {\n\t        if (type === ';') {\n\t          if (colon) {\n\t            this.decl(tokens, customProperty);\n\t            return\n\t          } else {\n\t            break\n\t          }\n\t        } else if (type === '{') {\n\t          this.rule(tokens);\n\t          return\n\t        } else if (type === '}') {\n\t          this.tokenizer.back(tokens.pop());\n\t          end = true;\n\t          break\n\t        } else if (type === ':') {\n\t          colon = true;\n\t        }\n\t      } else if (type === brackets[brackets.length - 1]) {\n\t        brackets.pop();\n\t        if (brackets.length === 0) bracket = null;\n\t      }\n\n\t      token = this.tokenizer.nextToken();\n\t    }\n\n\t    if (this.tokenizer.endOfFile()) end = true;\n\t    if (brackets.length > 0) this.unclosedBracket(bracket);\n\n\t    if (end && colon) {\n\t      if (!customProperty) {\n\t        while (tokens.length) {\n\t          token = tokens[tokens.length - 1][0];\n\t          if (token !== 'space' && token !== 'comment') break\n\t          this.tokenizer.back(tokens.pop());\n\t        }\n\t      }\n\t      this.decl(tokens, customProperty);\n\t    } else {\n\t      this.unknownWord(tokens);\n\t    }\n\t  }\n\n\t  parse() {\n\t    let token;\n\t    while (!this.tokenizer.endOfFile()) {\n\t      token = this.tokenizer.nextToken();\n\n\t      switch (token[0]) {\n\t        case 'space':\n\t          this.spaces += token[1];\n\t          break\n\n\t        case ';':\n\t          this.freeSemicolon(token);\n\t          break\n\n\t        case '}':\n\t          this.end(token);\n\t          break\n\n\t        case 'comment':\n\t          this.comment(token);\n\t          break\n\n\t        case 'at-word':\n\t          this.atrule(token);\n\t          break\n\n\t        case '{':\n\t          this.emptyRule(token);\n\t          break\n\n\t        default:\n\t          this.other(token);\n\t          break\n\t      }\n\t    }\n\t    this.endFile();\n\t  }\n\n\t  precheckMissedSemicolon(/* tokens */) {\n\t    // Hook for Safe Parser\n\t  }\n\n\t  raw(node, prop, tokens, customProperty) {\n\t    let token, type;\n\t    let length = tokens.length;\n\t    let value = '';\n\t    let clean = true;\n\t    let next, prev;\n\n\t    for (let i = 0; i < length; i += 1) {\n\t      token = tokens[i];\n\t      type = token[0];\n\t      if (type === 'space' && i === length - 1 && !customProperty) {\n\t        clean = false;\n\t      } else if (type === 'comment') {\n\t        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty';\n\t        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty';\n\t        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n\t          if (value.slice(-1) === ',') {\n\t            clean = false;\n\t          } else {\n\t            value += token[1];\n\t          }\n\t        } else {\n\t          clean = false;\n\t        }\n\t      } else {\n\t        value += token[1];\n\t      }\n\t    }\n\t    if (!clean) {\n\t      let raw = tokens.reduce((all, i) => all + i[1], '');\n\t      node.raws[prop] = { raw, value };\n\t    }\n\t    node[prop] = value;\n\t  }\n\n\t  rule(tokens) {\n\t    tokens.pop();\n\n\t    let node = new Rule();\n\t    this.init(node, tokens[0][2]);\n\n\t    node.raws.between = this.spacesAndCommentsFromEnd(tokens);\n\t    this.raw(node, 'selector', tokens);\n\t    this.current = node;\n\t  }\n\n\t  spacesAndCommentsFromEnd(tokens) {\n\t    let lastTokenType;\n\t    let spaces = '';\n\t    while (tokens.length) {\n\t      lastTokenType = tokens[tokens.length - 1][0];\n\t      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n\t      spaces = tokens.pop()[1] + spaces;\n\t    }\n\t    return spaces\n\t  }\n\n\t  // Errors\n\n\t  spacesAndCommentsFromStart(tokens) {\n\t    let next;\n\t    let spaces = '';\n\t    while (tokens.length) {\n\t      next = tokens[0][0];\n\t      if (next !== 'space' && next !== 'comment') break\n\t      spaces += tokens.shift()[1];\n\t    }\n\t    return spaces\n\t  }\n\n\t  spacesFromEnd(tokens) {\n\t    let lastTokenType;\n\t    let spaces = '';\n\t    while (tokens.length) {\n\t      lastTokenType = tokens[tokens.length - 1][0];\n\t      if (lastTokenType !== 'space') break\n\t      spaces = tokens.pop()[1] + spaces;\n\t    }\n\t    return spaces\n\t  }\n\n\t  stringFrom(tokens, from) {\n\t    let result = '';\n\t    for (let i = from; i < tokens.length; i++) {\n\t      result += tokens[i][1];\n\t    }\n\t    tokens.splice(from, tokens.length - from);\n\t    return result\n\t  }\n\n\t  unclosedBlock() {\n\t    let pos = this.current.source.start;\n\t    throw this.input.error('Unclosed block', pos.line, pos.column)\n\t  }\n\n\t  unclosedBracket(bracket) {\n\t    throw this.input.error(\n\t      'Unclosed bracket',\n\t      { offset: bracket[2] },\n\t      { offset: bracket[2] + 1 }\n\t    )\n\t  }\n\n\t  unexpectedClose(token) {\n\t    throw this.input.error(\n\t      'Unexpected }',\n\t      { offset: token[2] },\n\t      { offset: token[2] + 1 }\n\t    )\n\t  }\n\n\t  unknownWord(tokens) {\n\t    throw this.input.error(\n\t      'Unknown word ' + tokens[0][1],\n\t      { offset: tokens[0][2] },\n\t      { offset: tokens[0][2] + tokens[0][1].length }\n\t    )\n\t  }\n\n\t  unnamedAtrule(node, token) {\n\t    throw this.input.error(\n\t      'At-rule without name',\n\t      { offset: token[2] },\n\t      { offset: token[2] + token[1].length }\n\t    )\n\t  }\n\t}\n\n\tparser = Parser;\n\treturn parser;\n}\n\nvar parse_1;\nvar hasRequiredParse;\n\nfunction requireParse () {\n\tif (hasRequiredParse) return parse_1;\n\thasRequiredParse = 1;\n\n\tlet Container = requireContainer$1();\n\tlet Input = requireInput();\n\tlet Parser = requireParser();\n\n\tfunction parse(css, opts) {\n\t  let input = new Input(css, opts);\n\t  let parser = new Parser(input);\n\t  try {\n\t    parser.parse();\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n\t        if (/\\.scss$/i.test(opts.from)) {\n\t          e.message +=\n\t            '\\nYou tried to parse SCSS with ' +\n\t            'the standard CSS parser; ' +\n\t            'try again with the postcss-scss parser';\n\t        } else if (/\\.sass/i.test(opts.from)) {\n\t          e.message +=\n\t            '\\nYou tried to parse Sass with ' +\n\t            'the standard CSS parser; ' +\n\t            'try again with the postcss-sass parser';\n\t        } else if (/\\.less$/i.test(opts.from)) {\n\t          e.message +=\n\t            '\\nYou tried to parse Less with ' +\n\t            'the standard CSS parser; ' +\n\t            'try again with the postcss-less parser';\n\t        }\n\t      }\n\t    }\n\t    throw e\n\t  }\n\n\t  return parser.root\n\t}\n\n\tparse_1 = parse;\n\tparse.default = parse;\n\n\tContainer.registerParse(parse);\n\treturn parse_1;\n}\n\nvar warning;\nvar hasRequiredWarning;\n\nfunction requireWarning () {\n\tif (hasRequiredWarning) return warning;\n\thasRequiredWarning = 1;\n\n\tclass Warning {\n\t  constructor(text, opts = {}) {\n\t    this.type = 'warning';\n\t    this.text = text;\n\n\t    if (opts.node && opts.node.source) {\n\t      let range = opts.node.rangeBy(opts);\n\t      this.line = range.start.line;\n\t      this.column = range.start.column;\n\t      this.endLine = range.end.line;\n\t      this.endColumn = range.end.column;\n\t    }\n\n\t    for (let opt in opts) this[opt] = opts[opt];\n\t  }\n\n\t  toString() {\n\t    if (this.node) {\n\t      return this.node.error(this.text, {\n\t        index: this.index,\n\t        plugin: this.plugin,\n\t        word: this.word\n\t      }).message\n\t    }\n\n\t    if (this.plugin) {\n\t      return this.plugin + ': ' + this.text\n\t    }\n\n\t    return this.text\n\t  }\n\t}\n\n\twarning = Warning;\n\tWarning.default = Warning;\n\treturn warning;\n}\n\nvar result;\nvar hasRequiredResult;\n\nfunction requireResult () {\n\tif (hasRequiredResult) return result;\n\thasRequiredResult = 1;\n\n\tlet Warning = requireWarning();\n\n\tclass Result {\n\t  get content() {\n\t    return this.css\n\t  }\n\n\t  constructor(processor, root, opts) {\n\t    this.processor = processor;\n\t    this.messages = [];\n\t    this.root = root;\n\t    this.opts = opts;\n\t    this.css = '';\n\t    this.map = undefined;\n\t  }\n\n\t  toString() {\n\t    return this.css\n\t  }\n\n\t  warn(text, opts = {}) {\n\t    if (!opts.plugin) {\n\t      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n\t        opts.plugin = this.lastPlugin.postcssPlugin;\n\t      }\n\t    }\n\n\t    let warning = new Warning(text, opts);\n\t    this.messages.push(warning);\n\n\t    return warning\n\t  }\n\n\t  warnings() {\n\t    return this.messages.filter(i => i.type === 'warning')\n\t  }\n\t}\n\n\tresult = Result;\n\tResult.default = Result;\n\treturn result;\n}\n\n/* eslint-disable no-console */\n\nvar warnOnce;\nvar hasRequiredWarnOnce;\n\nfunction requireWarnOnce () {\n\tif (hasRequiredWarnOnce) return warnOnce;\n\thasRequiredWarnOnce = 1;\n\n\tlet printed = {};\n\n\twarnOnce = function warnOnce(message) {\n\t  if (printed[message]) return\n\t  printed[message] = true;\n\n\t  if (typeof console !== 'undefined' && console.warn) {\n\t    console.warn(message);\n\t  }\n\t};\n\treturn warnOnce;\n}\n\nvar lazyResult;\nvar hasRequiredLazyResult;\n\nfunction requireLazyResult () {\n\tif (hasRequiredLazyResult) return lazyResult;\n\thasRequiredLazyResult = 1;\n\n\tlet Container = requireContainer$1();\n\tlet Document = requireDocument();\n\tlet MapGenerator = requireMapGenerator();\n\tlet parse = requireParse();\n\tlet Result = requireResult();\n\tlet Root = requireRoot();\n\tlet stringify = requireStringify();\n\tlet { isClean, my } = requireSymbols();\n\tlet warnOnce = requireWarnOnce();\n\n\tconst TYPE_TO_CLASS_NAME = {\n\t  atrule: 'AtRule',\n\t  comment: 'Comment',\n\t  decl: 'Declaration',\n\t  document: 'Document',\n\t  root: 'Root',\n\t  rule: 'Rule'\n\t};\n\n\tconst PLUGIN_PROPS = {\n\t  AtRule: true,\n\t  AtRuleExit: true,\n\t  Comment: true,\n\t  CommentExit: true,\n\t  Declaration: true,\n\t  DeclarationExit: true,\n\t  Document: true,\n\t  DocumentExit: true,\n\t  Once: true,\n\t  OnceExit: true,\n\t  postcssPlugin: true,\n\t  prepare: true,\n\t  Root: true,\n\t  RootExit: true,\n\t  Rule: true,\n\t  RuleExit: true\n\t};\n\n\tconst NOT_VISITORS = {\n\t  Once: true,\n\t  postcssPlugin: true,\n\t  prepare: true\n\t};\n\n\tconst CHILDREN = 0;\n\n\tfunction isPromise(obj) {\n\t  return typeof obj === 'object' && typeof obj.then === 'function'\n\t}\n\n\tfunction getEvents(node) {\n\t  let key = false;\n\t  let type = TYPE_TO_CLASS_NAME[node.type];\n\t  if (node.type === 'decl') {\n\t    key = node.prop.toLowerCase();\n\t  } else if (node.type === 'atrule') {\n\t    key = node.name.toLowerCase();\n\t  }\n\n\t  if (key && node.append) {\n\t    return [\n\t      type,\n\t      type + '-' + key,\n\t      CHILDREN,\n\t      type + 'Exit',\n\t      type + 'Exit-' + key\n\t    ]\n\t  } else if (key) {\n\t    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n\t  } else if (node.append) {\n\t    return [type, CHILDREN, type + 'Exit']\n\t  } else {\n\t    return [type, type + 'Exit']\n\t  }\n\t}\n\n\tfunction toStack(node) {\n\t  let events;\n\t  if (node.type === 'document') {\n\t    events = ['Document', CHILDREN, 'DocumentExit'];\n\t  } else if (node.type === 'root') {\n\t    events = ['Root', CHILDREN, 'RootExit'];\n\t  } else {\n\t    events = getEvents(node);\n\t  }\n\n\t  return {\n\t    eventIndex: 0,\n\t    events,\n\t    iterator: 0,\n\t    node,\n\t    visitorIndex: 0,\n\t    visitors: []\n\t  }\n\t}\n\n\tfunction cleanMarks(node) {\n\t  node[isClean] = false;\n\t  if (node.nodes) node.nodes.forEach(i => cleanMarks(i));\n\t  return node\n\t}\n\n\tlet postcss = {};\n\n\tclass LazyResult {\n\t  get content() {\n\t    return this.stringify().content\n\t  }\n\n\t  get css() {\n\t    return this.stringify().css\n\t  }\n\n\t  get map() {\n\t    return this.stringify().map\n\t  }\n\n\t  get messages() {\n\t    return this.sync().messages\n\t  }\n\n\t  get opts() {\n\t    return this.result.opts\n\t  }\n\n\t  get processor() {\n\t    return this.result.processor\n\t  }\n\n\t  get root() {\n\t    return this.sync().root\n\t  }\n\n\t  get [Symbol.toStringTag]() {\n\t    return 'LazyResult'\n\t  }\n\n\t  constructor(processor, css, opts) {\n\t    this.stringified = false;\n\t    this.processed = false;\n\n\t    let root;\n\t    if (\n\t      typeof css === 'object' &&\n\t      css !== null &&\n\t      (css.type === 'root' || css.type === 'document')\n\t    ) {\n\t      root = cleanMarks(css);\n\t    } else if (css instanceof LazyResult || css instanceof Result) {\n\t      root = cleanMarks(css.root);\n\t      if (css.map) {\n\t        if (typeof opts.map === 'undefined') opts.map = {};\n\t        if (!opts.map.inline) opts.map.inline = false;\n\t        opts.map.prev = css.map;\n\t      }\n\t    } else {\n\t      let parser = parse;\n\t      if (opts.syntax) parser = opts.syntax.parse;\n\t      if (opts.parser) parser = opts.parser;\n\t      if (parser.parse) parser = parser.parse;\n\n\t      try {\n\t        root = parser(css, opts);\n\t      } catch (error) {\n\t        this.processed = true;\n\t        this.error = error;\n\t      }\n\n\t      if (root && !root[my]) {\n\t        /* c8 ignore next 2 */\n\t        Container.rebuild(root);\n\t      }\n\t    }\n\n\t    this.result = new Result(processor, root, opts);\n\t    this.helpers = { ...postcss, postcss, result: this.result };\n\t    this.plugins = this.processor.plugins.map(plugin => {\n\t      if (typeof plugin === 'object' && plugin.prepare) {\n\t        return { ...plugin, ...plugin.prepare(this.result) }\n\t      } else {\n\t        return plugin\n\t      }\n\t    });\n\t  }\n\n\t  async() {\n\t    if (this.error) return Promise.reject(this.error)\n\t    if (this.processed) return Promise.resolve(this.result)\n\t    if (!this.processing) {\n\t      this.processing = this.runAsync();\n\t    }\n\t    return this.processing\n\t  }\n\n\t  catch(onRejected) {\n\t    return this.async().catch(onRejected)\n\t  }\n\n\t  finally(onFinally) {\n\t    return this.async().then(onFinally, onFinally)\n\t  }\n\n\t  getAsyncError() {\n\t    throw new Error('Use process(css).then(cb) to work with async plugins')\n\t  }\n\n\t  handleError(error, node) {\n\t    let plugin = this.result.lastPlugin;\n\t    try {\n\t      if (node) node.addToError(error);\n\t      this.error = error;\n\t      if (error.name === 'CssSyntaxError' && !error.plugin) {\n\t        error.plugin = plugin.postcssPlugin;\n\t        error.setMessage();\n\t      } else if (plugin.postcssVersion) {\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          let pluginName = plugin.postcssPlugin;\n\t          let pluginVer = plugin.postcssVersion;\n\t          let runtimeVer = this.result.processor.version;\n\t          let a = pluginVer.split('.');\n\t          let b = runtimeVer.split('.');\n\n\t          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n\t            // eslint-disable-next-line no-console\n\t            console.error(\n\t              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n\t                'version is ' +\n\t                runtimeVer +\n\t                ', but ' +\n\t                pluginName +\n\t                ' uses ' +\n\t                pluginVer +\n\t                '. Perhaps this is the source of the error below.'\n\t            );\n\t          }\n\t        }\n\t      }\n\t    } catch (err) {\n\t      /* c8 ignore next 3 */\n\t      // eslint-disable-next-line no-console\n\t      if (console && console.error) console.error(err);\n\t    }\n\t    return error\n\t  }\n\n\t  prepareVisitors() {\n\t    this.listeners = {};\n\t    let add = (plugin, type, cb) => {\n\t      if (!this.listeners[type]) this.listeners[type] = [];\n\t      this.listeners[type].push([plugin, cb]);\n\t    };\n\t    for (let plugin of this.plugins) {\n\t      if (typeof plugin === 'object') {\n\t        for (let event in plugin) {\n\t          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n\t            throw new Error(\n\t              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n\t                `Try to update PostCSS (${this.processor.version} now).`\n\t            )\n\t          }\n\t          if (!NOT_VISITORS[event]) {\n\t            if (typeof plugin[event] === 'object') {\n\t              for (let filter in plugin[event]) {\n\t                if (filter === '*') {\n\t                  add(plugin, event, plugin[event][filter]);\n\t                } else {\n\t                  add(\n\t                    plugin,\n\t                    event + '-' + filter.toLowerCase(),\n\t                    plugin[event][filter]\n\t                  );\n\t                }\n\t              }\n\t            } else if (typeof plugin[event] === 'function') {\n\t              add(plugin, event, plugin[event]);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t    this.hasListener = Object.keys(this.listeners).length > 0;\n\t  }\n\n\t  async runAsync() {\n\t    this.plugin = 0;\n\t    for (let i = 0; i < this.plugins.length; i++) {\n\t      let plugin = this.plugins[i];\n\t      let promise = this.runOnRoot(plugin);\n\t      if (isPromise(promise)) {\n\t        try {\n\t          await promise;\n\t        } catch (error) {\n\t          throw this.handleError(error)\n\t        }\n\t      }\n\t    }\n\n\t    this.prepareVisitors();\n\t    if (this.hasListener) {\n\t      let root = this.result.root;\n\t      while (!root[isClean]) {\n\t        root[isClean] = true;\n\t        let stack = [toStack(root)];\n\t        while (stack.length > 0) {\n\t          let promise = this.visitTick(stack);\n\t          if (isPromise(promise)) {\n\t            try {\n\t              await promise;\n\t            } catch (e) {\n\t              let node = stack[stack.length - 1].node;\n\t              throw this.handleError(e, node)\n\t            }\n\t          }\n\t        }\n\t      }\n\n\t      if (this.listeners.OnceExit) {\n\t        for (let [plugin, visitor] of this.listeners.OnceExit) {\n\t          this.result.lastPlugin = plugin;\n\t          try {\n\t            if (root.type === 'document') {\n\t              let roots = root.nodes.map(subRoot =>\n\t                visitor(subRoot, this.helpers)\n\t              );\n\n\t              await Promise.all(roots);\n\t            } else {\n\t              await visitor(root, this.helpers);\n\t            }\n\t          } catch (e) {\n\t            throw this.handleError(e)\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    this.processed = true;\n\t    return this.stringify()\n\t  }\n\n\t  runOnRoot(plugin) {\n\t    this.result.lastPlugin = plugin;\n\t    try {\n\t      if (typeof plugin === 'object' && plugin.Once) {\n\t        if (this.result.root.type === 'document') {\n\t          let roots = this.result.root.nodes.map(root =>\n\t            plugin.Once(root, this.helpers)\n\t          );\n\n\t          if (isPromise(roots[0])) {\n\t            return Promise.all(roots)\n\t          }\n\n\t          return roots\n\t        }\n\n\t        return plugin.Once(this.result.root, this.helpers)\n\t      } else if (typeof plugin === 'function') {\n\t        return plugin(this.result.root, this.result)\n\t      }\n\t    } catch (error) {\n\t      throw this.handleError(error)\n\t    }\n\t  }\n\n\t  stringify() {\n\t    if (this.error) throw this.error\n\t    if (this.stringified) return this.result\n\t    this.stringified = true;\n\n\t    this.sync();\n\n\t    let opts = this.result.opts;\n\t    let str = stringify;\n\t    if (opts.syntax) str = opts.syntax.stringify;\n\t    if (opts.stringifier) str = opts.stringifier;\n\t    if (str.stringify) str = str.stringify;\n\n\t    let map = new MapGenerator(str, this.result.root, this.result.opts);\n\t    let data = map.generate();\n\t    this.result.css = data[0];\n\t    this.result.map = data[1];\n\n\t    return this.result\n\t  }\n\n\t  sync() {\n\t    if (this.error) throw this.error\n\t    if (this.processed) return this.result\n\t    this.processed = true;\n\n\t    if (this.processing) {\n\t      throw this.getAsyncError()\n\t    }\n\n\t    for (let plugin of this.plugins) {\n\t      let promise = this.runOnRoot(plugin);\n\t      if (isPromise(promise)) {\n\t        throw this.getAsyncError()\n\t      }\n\t    }\n\n\t    this.prepareVisitors();\n\t    if (this.hasListener) {\n\t      let root = this.result.root;\n\t      while (!root[isClean]) {\n\t        root[isClean] = true;\n\t        this.walkSync(root);\n\t      }\n\t      if (this.listeners.OnceExit) {\n\t        if (root.type === 'document') {\n\t          for (let subRoot of root.nodes) {\n\t            this.visitSync(this.listeners.OnceExit, subRoot);\n\t          }\n\t        } else {\n\t          this.visitSync(this.listeners.OnceExit, root);\n\t        }\n\t      }\n\t    }\n\n\t    return this.result\n\t  }\n\n\t  then(onFulfilled, onRejected) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (!('from' in this.opts)) {\n\t        warnOnce(\n\t          'Without `from` option PostCSS could generate wrong source map ' +\n\t            'and will not find Browserslist config. Set it to CSS file path ' +\n\t            'or to `undefined` to prevent this warning.'\n\t        );\n\t      }\n\t    }\n\t    return this.async().then(onFulfilled, onRejected)\n\t  }\n\n\t  toString() {\n\t    return this.css\n\t  }\n\n\t  visitSync(visitors, node) {\n\t    for (let [plugin, visitor] of visitors) {\n\t      this.result.lastPlugin = plugin;\n\t      let promise;\n\t      try {\n\t        promise = visitor(node, this.helpers);\n\t      } catch (e) {\n\t        throw this.handleError(e, node.proxyOf)\n\t      }\n\t      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n\t        return true\n\t      }\n\t      if (isPromise(promise)) {\n\t        throw this.getAsyncError()\n\t      }\n\t    }\n\t  }\n\n\t  visitTick(stack) {\n\t    let visit = stack[stack.length - 1];\n\t    let { node, visitors } = visit;\n\n\t    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n\t      stack.pop();\n\t      return\n\t    }\n\n\t    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n\t      let [plugin, visitor] = visitors[visit.visitorIndex];\n\t      visit.visitorIndex += 1;\n\t      if (visit.visitorIndex === visitors.length) {\n\t        visit.visitors = [];\n\t        visit.visitorIndex = 0;\n\t      }\n\t      this.result.lastPlugin = plugin;\n\t      try {\n\t        return visitor(node.toProxy(), this.helpers)\n\t      } catch (e) {\n\t        throw this.handleError(e, node)\n\t      }\n\t    }\n\n\t    if (visit.iterator !== 0) {\n\t      let iterator = visit.iterator;\n\t      let child;\n\t      while ((child = node.nodes[node.indexes[iterator]])) {\n\t        node.indexes[iterator] += 1;\n\t        if (!child[isClean]) {\n\t          child[isClean] = true;\n\t          stack.push(toStack(child));\n\t          return\n\t        }\n\t      }\n\t      visit.iterator = 0;\n\t      delete node.indexes[iterator];\n\t    }\n\n\t    let events = visit.events;\n\t    while (visit.eventIndex < events.length) {\n\t      let event = events[visit.eventIndex];\n\t      visit.eventIndex += 1;\n\t      if (event === CHILDREN) {\n\t        if (node.nodes && node.nodes.length) {\n\t          node[isClean] = true;\n\t          visit.iterator = node.getIterator();\n\t        }\n\t        return\n\t      } else if (this.listeners[event]) {\n\t        visit.visitors = this.listeners[event];\n\t        return\n\t      }\n\t    }\n\t    stack.pop();\n\t  }\n\n\t  walkSync(node) {\n\t    node[isClean] = true;\n\t    let events = getEvents(node);\n\t    for (let event of events) {\n\t      if (event === CHILDREN) {\n\t        if (node.nodes) {\n\t          node.each(child => {\n\t            if (!child[isClean]) this.walkSync(child);\n\t          });\n\t        }\n\t      } else {\n\t        let visitors = this.listeners[event];\n\t        if (visitors) {\n\t          if (this.visitSync(visitors, node.toProxy())) return\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  warnings() {\n\t    return this.sync().warnings()\n\t  }\n\t}\n\n\tLazyResult.registerPostcss = dependant => {\n\t  postcss = dependant;\n\t};\n\n\tlazyResult = LazyResult;\n\tLazyResult.default = LazyResult;\n\n\tRoot.registerLazyResult(LazyResult);\n\tDocument.registerLazyResult(LazyResult);\n\treturn lazyResult;\n}\n\nvar noWorkResult;\nvar hasRequiredNoWorkResult;\n\nfunction requireNoWorkResult () {\n\tif (hasRequiredNoWorkResult) return noWorkResult;\n\thasRequiredNoWorkResult = 1;\n\n\tlet MapGenerator = requireMapGenerator();\n\tlet parse = requireParse();\n\tconst Result = requireResult();\n\tlet stringify = requireStringify();\n\tlet warnOnce = requireWarnOnce();\n\n\tclass NoWorkResult {\n\t  get content() {\n\t    return this.result.css\n\t  }\n\n\t  get css() {\n\t    return this.result.css\n\t  }\n\n\t  get map() {\n\t    return this.result.map\n\t  }\n\n\t  get messages() {\n\t    return []\n\t  }\n\n\t  get opts() {\n\t    return this.result.opts\n\t  }\n\n\t  get processor() {\n\t    return this.result.processor\n\t  }\n\n\t  get root() {\n\t    if (this._root) {\n\t      return this._root\n\t    }\n\n\t    let root;\n\t    let parser = parse;\n\n\t    try {\n\t      root = parser(this._css, this._opts);\n\t    } catch (error) {\n\t      this.error = error;\n\t    }\n\n\t    if (this.error) {\n\t      throw this.error\n\t    } else {\n\t      this._root = root;\n\t      return root\n\t    }\n\t  }\n\n\t  get [Symbol.toStringTag]() {\n\t    return 'NoWorkResult'\n\t  }\n\n\t  constructor(processor, css, opts) {\n\t    css = css.toString();\n\t    this.stringified = false;\n\n\t    this._processor = processor;\n\t    this._css = css;\n\t    this._opts = opts;\n\t    this._map = undefined;\n\t    let root;\n\n\t    let str = stringify;\n\t    this.result = new Result(this._processor, root, this._opts);\n\t    this.result.css = css;\n\n\t    let self = this;\n\t    Object.defineProperty(this.result, 'root', {\n\t      get() {\n\t        return self.root\n\t      }\n\t    });\n\n\t    let map = new MapGenerator(str, root, this._opts, css);\n\t    if (map.isMap()) {\n\t      let [generatedCSS, generatedMap] = map.generate();\n\t      if (generatedCSS) {\n\t        this.result.css = generatedCSS;\n\t      }\n\t      if (generatedMap) {\n\t        this.result.map = generatedMap;\n\t      }\n\t    } else {\n\t      map.clearAnnotation();\n\t      this.result.css = map.css;\n\t    }\n\t  }\n\n\t  async() {\n\t    if (this.error) return Promise.reject(this.error)\n\t    return Promise.resolve(this.result)\n\t  }\n\n\t  catch(onRejected) {\n\t    return this.async().catch(onRejected)\n\t  }\n\n\t  finally(onFinally) {\n\t    return this.async().then(onFinally, onFinally)\n\t  }\n\n\t  sync() {\n\t    if (this.error) throw this.error\n\t    return this.result\n\t  }\n\n\t  then(onFulfilled, onRejected) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (!('from' in this._opts)) {\n\t        warnOnce(\n\t          'Without `from` option PostCSS could generate wrong source map ' +\n\t            'and will not find Browserslist config. Set it to CSS file path ' +\n\t            'or to `undefined` to prevent this warning.'\n\t        );\n\t      }\n\t    }\n\n\t    return this.async().then(onFulfilled, onRejected)\n\t  }\n\n\t  toString() {\n\t    return this._css\n\t  }\n\n\t  warnings() {\n\t    return []\n\t  }\n\t}\n\n\tnoWorkResult = NoWorkResult;\n\tNoWorkResult.default = NoWorkResult;\n\treturn noWorkResult;\n}\n\nvar processor;\nvar hasRequiredProcessor;\n\nfunction requireProcessor () {\n\tif (hasRequiredProcessor) return processor;\n\thasRequiredProcessor = 1;\n\n\tlet Document = requireDocument();\n\tlet LazyResult = requireLazyResult();\n\tlet NoWorkResult = requireNoWorkResult();\n\tlet Root = requireRoot();\n\n\tclass Processor {\n\t  constructor(plugins = []) {\n\t    this.version = '8.5.6';\n\t    this.plugins = this.normalize(plugins);\n\t  }\n\n\t  normalize(plugins) {\n\t    let normalized = [];\n\t    for (let i of plugins) {\n\t      if (i.postcss === true) {\n\t        i = i();\n\t      } else if (i.postcss) {\n\t        i = i.postcss;\n\t      }\n\n\t      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n\t        normalized = normalized.concat(i.plugins);\n\t      } else if (typeof i === 'object' && i.postcssPlugin) {\n\t        normalized.push(i);\n\t      } else if (typeof i === 'function') {\n\t        normalized.push(i);\n\t      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          throw new Error(\n\t            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n\t              'one of the syntax/parser/stringifier options as outlined ' +\n\t              'in your PostCSS runner documentation.'\n\t          )\n\t        }\n\t      } else {\n\t        throw new Error(i + ' is not a PostCSS plugin')\n\t      }\n\t    }\n\t    return normalized\n\t  }\n\n\t  process(css, opts = {}) {\n\t    if (\n\t      !this.plugins.length &&\n\t      !opts.parser &&\n\t      !opts.stringifier &&\n\t      !opts.syntax\n\t    ) {\n\t      return new NoWorkResult(this, css, opts)\n\t    } else {\n\t      return new LazyResult(this, css, opts)\n\t    }\n\t  }\n\n\t  use(plugin) {\n\t    this.plugins = this.plugins.concat(this.normalize([plugin]));\n\t    return this\n\t  }\n\t}\n\n\tprocessor = Processor;\n\tProcessor.default = Processor;\n\n\tRoot.registerProcessor(Processor);\n\tDocument.registerProcessor(Processor);\n\treturn processor;\n}\n\nvar postcss_1;\nvar hasRequiredPostcss;\n\nfunction requirePostcss () {\n\tif (hasRequiredPostcss) return postcss_1;\n\thasRequiredPostcss = 1;\n\n\tlet AtRule = requireAtRule();\n\tlet Comment = requireComment();\n\tlet Container = requireContainer$1();\n\tlet CssSyntaxError = requireCssSyntaxError();\n\tlet Declaration = requireDeclaration();\n\tlet Document = requireDocument();\n\tlet fromJSON = requireFromJSON();\n\tlet Input = requireInput();\n\tlet LazyResult = requireLazyResult();\n\tlet list = requireList();\n\tlet Node = requireNode$1();\n\tlet parse = requireParse();\n\tlet Processor = requireProcessor();\n\tlet Result = requireResult();\n\tlet Root = requireRoot();\n\tlet Rule = requireRule();\n\tlet stringify = requireStringify();\n\tlet Warning = requireWarning();\n\n\tfunction postcss(...plugins) {\n\t  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n\t    plugins = plugins[0];\n\t  }\n\t  return new Processor(plugins)\n\t}\n\n\tpostcss.plugin = function plugin(name, initializer) {\n\t  let warningPrinted = false;\n\t  function creator(...args) {\n\t    // eslint-disable-next-line no-console\n\t    if (console && console.warn && !warningPrinted) {\n\t      warningPrinted = true;\n\t      // eslint-disable-next-line no-console\n\t      console.warn(\n\t        name +\n\t          ': postcss.plugin was deprecated. Migration guide:\\n' +\n\t          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n\t      );\n\t      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n\t        /* c8 ignore next 7 */\n\t        // eslint-disable-next-line no-console\n\t        console.warn(\n\t          name +\n\t            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n\t            'https://www.w3ctech.com/topic/2226'\n\t        );\n\t      }\n\t    }\n\t    let transformer = initializer(...args);\n\t    transformer.postcssPlugin = name;\n\t    transformer.postcssVersion = new Processor().version;\n\t    return transformer\n\t  }\n\n\t  let cache;\n\t  Object.defineProperty(creator, 'postcss', {\n\t    get() {\n\t      if (!cache) cache = creator();\n\t      return cache\n\t    }\n\t  });\n\n\t  creator.process = function (css, processOpts, pluginOpts) {\n\t    return postcss([creator(pluginOpts)]).process(css, processOpts)\n\t  };\n\n\t  return creator\n\t};\n\n\tpostcss.stringify = stringify;\n\tpostcss.parse = parse;\n\tpostcss.fromJSON = fromJSON;\n\tpostcss.list = list;\n\n\tpostcss.comment = defaults => new Comment(defaults);\n\tpostcss.atRule = defaults => new AtRule(defaults);\n\tpostcss.decl = defaults => new Declaration(defaults);\n\tpostcss.rule = defaults => new Rule(defaults);\n\tpostcss.root = defaults => new Root(defaults);\n\tpostcss.document = defaults => new Document(defaults);\n\n\tpostcss.CssSyntaxError = CssSyntaxError;\n\tpostcss.Declaration = Declaration;\n\tpostcss.Container = Container;\n\tpostcss.Processor = Processor;\n\tpostcss.Document = Document;\n\tpostcss.Comment = Comment;\n\tpostcss.Warning = Warning;\n\tpostcss.AtRule = AtRule;\n\tpostcss.Result = Result;\n\tpostcss.Input = Input;\n\tpostcss.Rule = Rule;\n\tpostcss.Root = Root;\n\tpostcss.Node = Node;\n\n\tLazyResult.registerPostcss(postcss);\n\n\tpostcss_1 = postcss;\n\tpostcss.default = postcss;\n\treturn postcss_1;\n}\n\nvar postcssExports = requirePostcss();\nvar postcss = /*@__PURE__*/getDefaultExportFromCjs(postcssExports);\n\nconst stringify = postcss.stringify;\npostcss.fromJSON;\npostcss.plugin;\nconst parse$2 = postcss.parse;\npostcss.list;\n\npostcss.document;\npostcss.comment;\npostcss.atRule;\npostcss.rule;\npostcss.decl;\npostcss.root;\n\npostcss.CssSyntaxError;\npostcss.Declaration;\npostcss.Container;\npostcss.Processor;\npostcss.Document;\npostcss.Comment;\npostcss.Warning;\npostcss.AtRule;\npostcss.Result;\npostcss.Input;\npostcss.Rule;\npostcss.Root;\npostcss.Node;\n\nvar dist = {};\n\nvar Container = {};\n\nvar Node$1 = {};\n\nvar hasRequiredNode;\n\nfunction requireNode () {\n\tif (hasRequiredNode) return Node$1;\n\thasRequiredNode = 1;\n\n\tObject.defineProperty(Node$1, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\r\n\t * A very generic node. Pretty much any element of a media query\r\n\t */\n\n\tfunction Node(opts) {\n\t  this.after = opts.after;\n\t  this.before = opts.before;\n\t  this.type = opts.type;\n\t  this.value = opts.value;\n\t  this.sourceIndex = opts.sourceIndex;\n\t}\n\n\tNode$1.default = Node;\n\treturn Node$1;\n}\n\nvar hasRequiredContainer;\n\nfunction requireContainer () {\n\tif (hasRequiredContainer) return Container;\n\thasRequiredContainer = 1;\n\n\tObject.defineProperty(Container, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _Node = requireNode();\n\n\tvar _Node2 = _interopRequireDefault(_Node);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction Container$1(opts) {\n\t  var _this = this;\n\n\t  this.constructor(opts);\n\n\t  this.nodes = opts.nodes;\n\n\t  if (this.after === undefined) {\n\t    this.after = this.nodes.length > 0 ? this.nodes[this.nodes.length - 1].after : '';\n\t  }\n\n\t  if (this.before === undefined) {\n\t    this.before = this.nodes.length > 0 ? this.nodes[0].before : '';\n\t  }\n\n\t  if (this.sourceIndex === undefined) {\n\t    this.sourceIndex = this.before.length;\n\t  }\n\n\t  this.nodes.forEach(function (node) {\n\t    node.parent = _this; // eslint-disable-line no-param-reassign\n\t  });\n\t} /**\r\n\t   * A node that contains other nodes and support traversing over them\r\n\t   */\n\n\tContainer$1.prototype = Object.create(_Node2.default.prototype);\n\tContainer$1.constructor = _Node2.default;\n\n\t/**\r\n\t * Iterate over descendant nodes of the node\r\n\t *\r\n\t * @param {RegExp|string} filter - Optional. Only nodes with node.type that\r\n\t *    satisfies the filter will be traversed over\r\n\t * @param {function} cb - callback to call on each node. Takes theese params:\r\n\t *    node - the node being processed, i - it's index, nodes - the array\r\n\t *    of all nodes\r\n\t *    If false is returned, the iteration breaks\r\n\t *\r\n\t * @return (boolean) false, if the iteration was broken\r\n\t */\n\tContainer$1.prototype.walk = function walk(filter, cb) {\n\t  var hasFilter = typeof filter === 'string' || filter instanceof RegExp;\n\t  var callback = hasFilter ? cb : filter;\n\t  var filterReg = typeof filter === 'string' ? new RegExp(filter) : filter;\n\n\t  for (var i = 0; i < this.nodes.length; i++) {\n\t    var node = this.nodes[i];\n\t    var filtered = hasFilter ? filterReg.test(node.type) : true;\n\t    if (filtered && callback && callback(node, i, this.nodes) === false) {\n\t      return false;\n\t    }\n\t    if (node.nodes && node.walk(filter, cb) === false) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\n\t/**\r\n\t * Iterate over immediate children of the node\r\n\t *\r\n\t * @param {function} cb - callback to call on each node. Takes theese params:\r\n\t *    node - the node being processed, i - it's index, nodes - the array\r\n\t *    of all nodes\r\n\t *    If false is returned, the iteration breaks\r\n\t *\r\n\t * @return (boolean) false, if the iteration was broken\r\n\t */\n\tContainer$1.prototype.each = function each() {\n\t  var cb = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\n\t  for (var i = 0; i < this.nodes.length; i++) {\n\t    var node = this.nodes[i];\n\t    if (cb(node, i, this.nodes) === false) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\n\tContainer.default = Container$1;\n\treturn Container;\n}\n\nvar parsers = {};\n\nvar hasRequiredParsers;\n\nfunction requireParsers () {\n\tif (hasRequiredParsers) return parsers;\n\thasRequiredParsers = 1;\n\n\tObject.defineProperty(parsers, \"__esModule\", {\n\t  value: true\n\t});\n\tparsers.parseMediaFeature = parseMediaFeature;\n\tparsers.parseMediaQuery = parseMediaQuery;\n\tparsers.parseMediaList = parseMediaList;\n\n\tvar _Node = requireNode();\n\n\tvar _Node2 = _interopRequireDefault(_Node);\n\n\tvar _Container = requireContainer();\n\n\tvar _Container2 = _interopRequireDefault(_Container);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t/**\r\n\t * Parses a media feature expression, e.g. `max-width: 10px`, `(color)`\r\n\t *\r\n\t * @param {string} string - the source expression string, can be inside parens\r\n\t * @param {Number} index - the index of `string` in the overall input\r\n\t *\r\n\t * @return {Array} an array of Nodes, the first element being a media feature,\r\n\t *    the secont - its value (may be missing)\r\n\t */\n\n\tfunction parseMediaFeature(string) {\n\t  var index = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n\t  var modesEntered = [{\n\t    mode: 'normal',\n\t    character: null\n\t  }];\n\t  var result = [];\n\t  var lastModeIndex = 0;\n\t  var mediaFeature = '';\n\t  var colon = null;\n\t  var mediaFeatureValue = null;\n\t  var indexLocal = index;\n\n\t  var stringNormalized = string;\n\t  // Strip trailing parens (if any), and correct the starting index\n\t  if (string[0] === '(' && string[string.length - 1] === ')') {\n\t    stringNormalized = string.substring(1, string.length - 1);\n\t    indexLocal++;\n\t  }\n\n\t  for (var i = 0; i < stringNormalized.length; i++) {\n\t    var character = stringNormalized[i];\n\n\t    // If entering/exiting a string\n\t    if (character === '\\'' || character === '\"') {\n\t      if (modesEntered[lastModeIndex].isCalculationEnabled === true) {\n\t        modesEntered.push({\n\t          mode: 'string',\n\t          isCalculationEnabled: false,\n\t          character: character\n\t        });\n\t        lastModeIndex++;\n\t      } else if (modesEntered[lastModeIndex].mode === 'string' && modesEntered[lastModeIndex].character === character && stringNormalized[i - 1] !== '\\\\') {\n\t        modesEntered.pop();\n\t        lastModeIndex--;\n\t      }\n\t    }\n\n\t    // If entering/exiting interpolation\n\t    if (character === '{') {\n\t      modesEntered.push({\n\t        mode: 'interpolation',\n\t        isCalculationEnabled: true\n\t      });\n\t      lastModeIndex++;\n\t    } else if (character === '}') {\n\t      modesEntered.pop();\n\t      lastModeIndex--;\n\t    }\n\n\t    // If a : is met outside of a string, function call or interpolation, than\n\t    // this : separates a media feature and a value\n\t    if (modesEntered[lastModeIndex].mode === 'normal' && character === ':') {\n\t      var mediaFeatureValueStr = stringNormalized.substring(i + 1);\n\t      mediaFeatureValue = {\n\t        type: 'value',\n\t        before: /^(\\s*)/.exec(mediaFeatureValueStr)[1],\n\t        after: /(\\s*)$/.exec(mediaFeatureValueStr)[1],\n\t        value: mediaFeatureValueStr.trim()\n\t      };\n\t      // +1 for the colon\n\t      mediaFeatureValue.sourceIndex = mediaFeatureValue.before.length + i + 1 + indexLocal;\n\t      colon = {\n\t        type: 'colon',\n\t        sourceIndex: i + indexLocal,\n\t        after: mediaFeatureValue.before,\n\t        value: ':' };\n\t      break;\n\t    }\n\n\t    mediaFeature += character;\n\t  }\n\n\t  // Forming a media feature node\n\t  mediaFeature = {\n\t    type: 'media-feature',\n\t    before: /^(\\s*)/.exec(mediaFeature)[1],\n\t    after: /(\\s*)$/.exec(mediaFeature)[1],\n\t    value: mediaFeature.trim()\n\t  };\n\t  mediaFeature.sourceIndex = mediaFeature.before.length + indexLocal;\n\t  result.push(mediaFeature);\n\n\t  if (colon !== null) {\n\t    colon.before = mediaFeature.after;\n\t    result.push(colon);\n\t  }\n\n\t  if (mediaFeatureValue !== null) {\n\t    result.push(mediaFeatureValue);\n\t  }\n\n\t  return result;\n\t}\n\n\t/**\r\n\t * Parses a media query, e.g. `screen and (color)`, `only tv`\r\n\t *\r\n\t * @param {string} string - the source media query string\r\n\t * @param {Number} index - the index of `string` in the overall input\r\n\t *\r\n\t * @return {Array} an array of Nodes and Containers\r\n\t */\n\n\tfunction parseMediaQuery(string) {\n\t  var index = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n\t  var result = [];\n\n\t  // How many timies the parser entered parens/curly braces\n\t  var localLevel = 0;\n\t  // Has any keyword, media type, media feature expression or interpolation\n\t  // ('element' hereafter) started\n\t  var insideSomeValue = false;\n\t  var node = void 0;\n\n\t  function resetNode() {\n\t    return {\n\t      before: '',\n\t      after: '',\n\t      value: ''\n\t    };\n\t  }\n\n\t  node = resetNode();\n\n\t  for (var i = 0; i < string.length; i++) {\n\t    var character = string[i];\n\t    // If not yet entered any element\n\t    if (!insideSomeValue) {\n\t      if (character.search(/\\s/) !== -1) {\n\t        // A whitespace\n\t        // Don't form 'after' yet; will do it later\n\t        node.before += character;\n\t      } else {\n\t        // Not a whitespace - entering an element\n\t        // Expression start\n\t        if (character === '(') {\n\t          node.type = 'media-feature-expression';\n\t          localLevel++;\n\t        }\n\t        node.value = character;\n\t        node.sourceIndex = index + i;\n\t        insideSomeValue = true;\n\t      }\n\t    } else {\n\t      // Already in the middle of some alement\n\t      node.value += character;\n\n\t      // Here parens just increase localLevel and don't trigger a start of\n\t      // a media feature expression (since they can't be nested)\n\t      // Interpolation start\n\t      if (character === '{' || character === '(') {\n\t        localLevel++;\n\t      }\n\t      // Interpolation/function call/media feature expression end\n\t      if (character === ')' || character === '}') {\n\t        localLevel--;\n\t      }\n\t    }\n\n\t    // If exited all parens/curlies and the next symbol\n\t    if (insideSomeValue && localLevel === 0 && (character === ')' || i === string.length - 1 || string[i + 1].search(/\\s/) !== -1)) {\n\t      if (['not', 'only', 'and'].indexOf(node.value) !== -1) {\n\t        node.type = 'keyword';\n\t      }\n\t      // if it's an expression, parse its contents\n\t      if (node.type === 'media-feature-expression') {\n\t        node.nodes = parseMediaFeature(node.value, node.sourceIndex);\n\t      }\n\t      result.push(Array.isArray(node.nodes) ? new _Container2.default(node) : new _Node2.default(node));\n\t      node = resetNode();\n\t      insideSomeValue = false;\n\t    }\n\t  }\n\n\t  // Now process the result array - to specify undefined types of the nodes\n\t  // and specify the `after` prop\n\t  for (var _i = 0; _i < result.length; _i++) {\n\t    node = result[_i];\n\t    if (_i > 0) {\n\t      result[_i - 1].after = node.before;\n\t    }\n\n\t    // Node types. Might not be set because contains interpolation/function\n\t    // calls or fully consists of them\n\t    if (node.type === undefined) {\n\t      if (_i > 0) {\n\t        // only `and` can follow an expression\n\t        if (result[_i - 1].type === 'media-feature-expression') {\n\t          node.type = 'keyword';\n\t          continue;\n\t        }\n\t        // Anything after 'only|not' is a media type\n\t        if (result[_i - 1].value === 'not' || result[_i - 1].value === 'only') {\n\t          node.type = 'media-type';\n\t          continue;\n\t        }\n\t        // Anything after 'and' is an expression\n\t        if (result[_i - 1].value === 'and') {\n\t          node.type = 'media-feature-expression';\n\t          continue;\n\t        }\n\n\t        if (result[_i - 1].type === 'media-type') {\n\t          // if it is the last element - it might be an expression\n\t          // or 'and' depending on what is after it\n\t          if (!result[_i + 1]) {\n\t            node.type = 'media-feature-expression';\n\t          } else {\n\t            node.type = result[_i + 1].type === 'media-feature-expression' ? 'keyword' : 'media-feature-expression';\n\t          }\n\t        }\n\t      }\n\n\t      if (_i === 0) {\n\t        // `screen`, `fn( ... )`, `#{ ... }`. Not an expression, since then\n\t        // its type would have been set by now\n\t        if (!result[_i + 1]) {\n\t          node.type = 'media-type';\n\t          continue;\n\t        }\n\n\t        // `screen and` or `#{...} (max-width: 10px)`\n\t        if (result[_i + 1] && (result[_i + 1].type === 'media-feature-expression' || result[_i + 1].type === 'keyword')) {\n\t          node.type = 'media-type';\n\t          continue;\n\t        }\n\t        if (result[_i + 2]) {\n\t          // `screen and (color) ...`\n\t          if (result[_i + 2].type === 'media-feature-expression') {\n\t            node.type = 'media-type';\n\t            result[_i + 1].type = 'keyword';\n\t            continue;\n\t          }\n\t          // `only screen and ...`\n\t          if (result[_i + 2].type === 'keyword') {\n\t            node.type = 'keyword';\n\t            result[_i + 1].type = 'media-type';\n\t            continue;\n\t          }\n\t        }\n\t        if (result[_i + 3]) {\n\t          // `screen and (color) ...`\n\t          if (result[_i + 3].type === 'media-feature-expression') {\n\t            node.type = 'keyword';\n\t            result[_i + 1].type = 'media-type';\n\t            result[_i + 2].type = 'keyword';\n\t            continue;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return result;\n\t}\n\n\t/**\r\n\t * Parses a media query list. Takes a possible `url()` at the start into\r\n\t * account, and divides the list into media queries that are parsed separately\r\n\t *\r\n\t * @param {string} string - the source media query list string\r\n\t *\r\n\t * @return {Array} an array of Nodes/Containers\r\n\t */\n\n\tfunction parseMediaList(string) {\n\t  var result = [];\n\t  var interimIndex = 0;\n\t  var levelLocal = 0;\n\n\t  // Check for a `url(...)` part (if it is contents of an @import rule)\n\t  var doesHaveUrl = /^(\\s*)url\\s*\\(/.exec(string);\n\t  if (doesHaveUrl !== null) {\n\t    var i = doesHaveUrl[0].length;\n\t    var parenthesesLv = 1;\n\t    while (parenthesesLv > 0) {\n\t      var character = string[i];\n\t      if (character === '(') {\n\t        parenthesesLv++;\n\t      }\n\t      if (character === ')') {\n\t        parenthesesLv--;\n\t      }\n\t      i++;\n\t    }\n\t    result.unshift(new _Node2.default({\n\t      type: 'url',\n\t      value: string.substring(0, i).trim(),\n\t      sourceIndex: doesHaveUrl[1].length,\n\t      before: doesHaveUrl[1],\n\t      after: /^(\\s*)/.exec(string.substring(i))[1]\n\t    }));\n\t    interimIndex = i;\n\t  }\n\n\t  // Start processing the media query list\n\t  for (var _i2 = interimIndex; _i2 < string.length; _i2++) {\n\t    var _character = string[_i2];\n\n\t    // Dividing the media query list into comma-separated media queries\n\t    // Only count commas that are outside of any parens\n\t    // (i.e., not part of function call params list, etc.)\n\t    if (_character === '(') {\n\t      levelLocal++;\n\t    }\n\t    if (_character === ')') {\n\t      levelLocal--;\n\t    }\n\t    if (levelLocal === 0 && _character === ',') {\n\t      var _mediaQueryString = string.substring(interimIndex, _i2);\n\t      var _spaceBefore = /^(\\s*)/.exec(_mediaQueryString)[1];\n\t      result.push(new _Container2.default({\n\t        type: 'media-query',\n\t        value: _mediaQueryString.trim(),\n\t        sourceIndex: interimIndex + _spaceBefore.length,\n\t        nodes: parseMediaQuery(_mediaQueryString, interimIndex),\n\t        before: _spaceBefore,\n\t        after: /(\\s*)$/.exec(_mediaQueryString)[1]\n\t      }));\n\t      interimIndex = _i2 + 1;\n\t    }\n\t  }\n\n\t  var mediaQueryString = string.substring(interimIndex);\n\t  var spaceBefore = /^(\\s*)/.exec(mediaQueryString)[1];\n\t  result.push(new _Container2.default({\n\t    type: 'media-query',\n\t    value: mediaQueryString.trim(),\n\t    sourceIndex: interimIndex + spaceBefore.length,\n\t    nodes: parseMediaQuery(mediaQueryString, interimIndex),\n\t    before: spaceBefore,\n\t    after: /(\\s*)$/.exec(mediaQueryString)[1]\n\t  }));\n\n\t  return result;\n\t}\n\treturn parsers;\n}\n\nvar hasRequiredDist;\n\nfunction requireDist () {\n\tif (hasRequiredDist) return dist;\n\thasRequiredDist = 1;\n\n\tObject.defineProperty(dist, \"__esModule\", {\n\t  value: true\n\t});\n\tdist.default = parseMedia;\n\n\tvar _Container = requireContainer();\n\n\tvar _Container2 = _interopRequireDefault(_Container);\n\n\tvar _parsers = requireParsers();\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t/**\r\n\t * Parses a media query list into an array of nodes. A typical node signature:\r\n\t *  {string} node.type -- one of: 'media-query', 'media-type', 'keyword',\r\n\t *    'media-feature-expression', 'media-feature', 'colon', 'value'\r\n\t *  {string} node.value -- the contents of a particular element, trimmed\r\n\t *    e.g.: `screen`, `max-width`, `1024px`\r\n\t *  {string} node.after -- whitespaces that follow the element\r\n\t *  {string} node.before -- whitespaces that precede the element\r\n\t *  {string} node.sourceIndex -- the index of the element in a source media\r\n\t *    query list, 0-based\r\n\t *  {object} node.parent -- a link to the parent node (a container)\r\n\t *\r\n\t * Some nodes (media queries, media feature expressions) contain other nodes.\r\n\t * They additionally have:\r\n\t *  {array} node.nodes -- an array of nodes of the type described here\r\n\t *  {funciton} node.each -- traverses direct children of the node, calling\r\n\t *    a callback for each one\r\n\t *  {funciton} node.walk -- traverses ALL descendants of the node, calling\r\n\t *    a callback for each one\r\n\t */\n\n\tfunction parseMedia(value) {\n\t  return new _Container2.default({\n\t    nodes: (0, _parsers.parseMediaList)(value),\n\t    type: 'media-query-list',\n\t    value: value.trim()\n\t  });\n\t}\n\treturn dist;\n}\n\nvar distExports = requireDist();\nvar mediaParser = /*@__PURE__*/getDefaultExportFromCjs(distExports);\n\nvar boolbase$1;\nvar hasRequiredBoolbase;\n\nfunction requireBoolbase () {\n\tif (hasRequiredBoolbase) return boolbase$1;\n\thasRequiredBoolbase = 1;\n\tboolbase$1 = {\n\t\ttrueFunc: function trueFunc(){\n\t\t\treturn true;\n\t\t},\n\t\tfalseFunc: function falseFunc(){\n\t\t\treturn false;\n\t\t}\n\t};\n\treturn boolbase$1;\n}\n\nvar boolbaseExports = requireBoolbase();\nvar boolbase = /*@__PURE__*/getDefaultExportFromCjs(boolbaseExports);\n\nvar SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\nvar AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n\nconst reName = /^[^#\\\\]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\u00B0-\\uFFFF-])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nvar CharCode;\n(function (CharCode) {\n    CharCode[CharCode[\"LeftParenthesis\"] = 40] = \"LeftParenthesis\";\n    CharCode[CharCode[\"RightParenthesis\"] = 41] = \"RightParenthesis\";\n    CharCode[CharCode[\"LeftSquareBracket\"] = 91] = \"LeftSquareBracket\";\n    CharCode[CharCode[\"RightSquareBracket\"] = 93] = \"RightSquareBracket\";\n    CharCode[CharCode[\"Comma\"] = 44] = \"Comma\";\n    CharCode[CharCode[\"Period\"] = 46] = \"Period\";\n    CharCode[CharCode[\"Colon\"] = 58] = \"Colon\";\n    CharCode[CharCode[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCode[CharCode[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCode[CharCode[\"Plus\"] = 43] = \"Plus\";\n    CharCode[CharCode[\"Tilde\"] = 126] = \"Tilde\";\n    CharCode[CharCode[\"QuestionMark\"] = 63] = \"QuestionMark\";\n    CharCode[CharCode[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCode[CharCode[\"Slash\"] = 47] = \"Slash\";\n    CharCode[CharCode[\"Equal\"] = 61] = \"Equal\";\n    CharCode[CharCode[\"Dollar\"] = 36] = \"Dollar\";\n    CharCode[CharCode[\"Pipe\"] = 124] = \"Pipe\";\n    CharCode[CharCode[\"Circumflex\"] = 94] = \"Circumflex\";\n    CharCode[CharCode[\"Asterisk\"] = 42] = \"Asterisk\";\n    CharCode[CharCode[\"GreaterThan\"] = 62] = \"GreaterThan\";\n    CharCode[CharCode[\"LessThan\"] = 60] = \"LessThan\";\n    CharCode[CharCode[\"Hash\"] = 35] = \"Hash\";\n    CharCode[CharCode[\"LowerI\"] = 105] = \"LowerI\";\n    CharCode[CharCode[\"LowerS\"] = 115] = \"LowerS\";\n    CharCode[CharCode[\"BackSlash\"] = 92] = \"BackSlash\";\n    // Whitespace\n    CharCode[CharCode[\"Space\"] = 32] = \"Space\";\n    CharCode[CharCode[\"Tab\"] = 9] = \"Tab\";\n    CharCode[CharCode[\"NewLine\"] = 10] = \"NewLine\";\n    CharCode[CharCode[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCode[CharCode[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n})(CharCode || (CharCode = {}));\nconst actionTypes = new Map([\n    [CharCode.Tilde, AttributeAction.Element],\n    [CharCode.Circumflex, AttributeAction.Start],\n    [CharCode.Dollar, AttributeAction.End],\n    [CharCode.Asterisk, AttributeAction.Any],\n    [CharCode.ExclamationMark, AttributeAction.Not],\n    [CharCode.Pipe, AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Pseudo elements defined in CSS Level 1 and CSS Level 2 can be written with\n * a single colon; eg. :before will turn into ::before.\n *\n * @see {@link https://www.w3.org/TR/2018/WD-selectors-4-20181121/#pseudo-element-syntax}\n */\nconst pseudosToPseudoElements = new Set([\n    \"before\",\n    \"after\",\n    \"first-line\",\n    \"first-letter\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nfunction isTraversal$1(selector) {\n    switch (selector.type) {\n        case SelectorType.Adjacent:\n        case SelectorType.Child:\n        case SelectorType.Descendant:\n        case SelectorType.Parent:\n        case SelectorType.Sibling:\n        case SelectorType.ColumnCombinator: {\n            return true;\n        }\n        default: {\n            return false;\n        }\n    }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    const high = Number.parseInt(escaped, 16) - 65536;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 65536)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 55296, (high & 1023) | 56320);\n}\nfunction unescapeCSS(cssString) {\n    return cssString.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === CharCode.SingleQuote || c === CharCode.DoubleQuote;\n}\nfunction isWhitespace$1(c) {\n    return (c === CharCode.Space ||\n        c === CharCode.Tab ||\n        c === CharCode.NewLine ||\n        c === CharCode.FormFeed ||\n        c === CharCode.CarriageReturn);\n}\n/**\n * Parses `selector`.\n *\n * @param selector Selector to parse.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nfunction parse$1(selector) {\n    const subselects = [];\n    const endIndex = parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) {\n        throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        }\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace$1(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        for (let counter = 1; selectorIndex < selector.length; selectorIndex++) {\n            switch (selector.charCodeAt(selectorIndex)) {\n                case CharCode.BackSlash: {\n                    // Skip next character\n                    selectorIndex += 1;\n                    break;\n                }\n                case CharCode.LeftParenthesis: {\n                    counter += 1;\n                    break;\n                }\n                case CharCode.RightParenthesis: {\n                    counter -= 1;\n                    if (counter === 0) {\n                        return unescapeCSS(selector.slice(start, selectorIndex++));\n                    }\n                    break;\n                }\n            }\n        }\n        throw new Error(\"Parenthesis not matched\");\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal$1(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case CharCode.Space:\n            case CharCode.Tab:\n            case CharCode.NewLine:\n            case CharCode.FormFeed:\n            case CharCode.CarriageReturn: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case CharCode.GreaterThan: {\n                addTraversal(SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case CharCode.LessThan: {\n                addTraversal(SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case CharCode.Tilde: {\n                addTraversal(SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case CharCode.Plus: {\n                addTraversal(SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case CharCode.Period: {\n                addSpecialAttribute(\"class\", AttributeAction.Element);\n                break;\n            }\n            case CharCode.Hash: {\n                addSpecialAttribute(\"id\", AttributeAction.Equals);\n                break;\n            }\n            case CharCode.LeftSquareBracket: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                let name;\n                let namespace = null;\n                if (selector.charCodeAt(selectorIndex) === CharCode.Pipe) {\n                    // Equivalent to no namespace\n                    name = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name = getName(2);\n                }\n                else {\n                    name = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === CharCode.Pipe &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            CharCode.Equal) {\n                        namespace = name;\n                        name = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                let action = AttributeAction.Exists;\n                const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        CharCode.Equal) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === CharCode.Equal) {\n                    action = AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                let value = \"\";\n                let ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        const quote = selector.charCodeAt(selectorIndex);\n                        selectorIndex += 1;\n                        const sectionStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            selector.charCodeAt(selectorIndex) !== quote) {\n                            selectorIndex +=\n                                // Skip next character if it is escaped\n                                selector.charCodeAt(selectorIndex) ===\n                                    CharCode.BackSlash\n                                    ? 2\n                                    : 1;\n                        }\n                        if (selector.charCodeAt(selectorIndex) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(sectionStart, selectorIndex));\n                        selectorIndex += 1;\n                    }\n                    else {\n                        const valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            !isWhitespace$1(selector.charCodeAt(selectorIndex)) &&\n                            selector.charCodeAt(selectorIndex) !==\n                                CharCode.RightSquareBracket) {\n                            selectorIndex +=\n                                // Skip next character if it is escaped\n                                selector.charCodeAt(selectorIndex) ===\n                                    CharCode.BackSlash\n                                    ? 2\n                                    : 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    switch (selector.charCodeAt(selectorIndex) | 0x20) {\n                        // If the forceIgnore flag is set (either `i` or `s`), use that value\n                        case CharCode.LowerI: {\n                            ignoreCase = true;\n                            stripWhitespace(1);\n                            break;\n                        }\n                        case CharCode.LowerS: {\n                            ignoreCase = false;\n                            stripWhitespace(1);\n                            break;\n                        }\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    CharCode.RightSquareBracket) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                const attributeSelector = {\n                    type: SelectorType.Attribute,\n                    name,\n                    action,\n                    value,\n                    namespace,\n                    ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case CharCode.Colon: {\n                if (selector.charCodeAt(selectorIndex + 1) === CharCode.Colon) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            CharCode.LeftParenthesis\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    break;\n                }\n                const name = getName(1).toLowerCase();\n                if (pseudosToPseudoElements.has(name)) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name,\n                        data: null,\n                    });\n                    break;\n                }\n                let data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    CharCode.LeftParenthesis) {\n                    if (unpackPseudos.has(name)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            CharCode.RightParenthesis) {\n                            throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name)) {\n                            const quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: SelectorType.Pseudo, name, data });\n                break;\n            }\n            case CharCode.Comma: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                let namespace = null;\n                let name;\n                if (firstChar === CharCode.Asterisk) {\n                    selectorIndex += 1;\n                    name = \"*\";\n                }\n                else if (firstChar === CharCode.Pipe) {\n                    name = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === CharCode.Pipe) {\n                        addTraversal(SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === CharCode.Pipe &&\n                    selector.charCodeAt(selectorIndex + 1) !== CharCode.Pipe) {\n                    namespace = name;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        CharCode.Asterisk) {\n                        name = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name = getName(1);\n                    }\n                }\n                tokens.push(name === \"*\"\n                    ? { type: SelectorType.Universal, namespace }\n                    : { type: SelectorType.Tag, name, namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n\n/** Types of elements found in htmlparser2's DOM */\nvar ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nfunction isTag$1(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nconst Root = ElementType.Root;\n/** Type for Text */\nconst Text$1 = ElementType.Text;\n/** Type for <? ... ?> */\nconst Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nconst Comment$1 = ElementType.Comment;\n/** Type for <script> tags */\nconst Script = ElementType.Script;\n/** Type for <style> tags */\nconst Style = ElementType.Style;\n/** Type for Any tag */\nconst Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nconst CDATA$1 = ElementType.CDATA;\n/** Type for <!doctype ...> */\nconst Doctype = ElementType.Doctype;\n\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nclass Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nclass DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nclass Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nclass Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nclass ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nclass NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nclass CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nclass Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nclass Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nfunction isTag(node) {\n    return isTag$1(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nfunction isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nfunction isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nfunction isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nfunction hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nfunction cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nclass DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\n\nconst xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nconst getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nfunction encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nconst escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nconst escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n\nconst elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nconst attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n\n/*\n * Module dependencies\n */\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nfunction render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case Doctype:\n        case Directive:\n            return renderDirective(node);\n        case Comment$1:\n            return renderComment(node);\n        case CDATA$1:\n            return renderCdata(node);\n        case Script:\n        case Style:\n        case Tag:\n            return renderTag(node, options);\n        case Text$1:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n    return render(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n    return hasChildren(node)\n        ? node.children.map((node) => getOuterHTML(node, options)).join(\"\")\n        : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if (isTag(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if (isCDATA(node))\n        return getText(node.children);\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if (hasChildren(node) && !isComment(node)) {\n        return textContent(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n        return innerText(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nfunction getChildren(elem) {\n    return hasChildren(elem) ? elem.children : [];\n}\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nfunction getParent(elem) {\n    return elem.parent || null;\n}\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nfunction getSiblings(elem) {\n    const parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    const siblings = [elem];\n    let { prev, next } = elem;\n    while (prev != null) {\n        siblings.unshift(prev);\n        ({ prev } = prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        ({ next } = next);\n    }\n    return siblings;\n}\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nfunction getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nfunction hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nfunction getName(elem) {\n    return elem.name;\n}\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nfunction nextElementSibling(elem) {\n    let { next } = elem;\n    while (next !== null && !isTag(next))\n        ({ next } = next);\n    return next;\n}\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nfunction prevElementSibling(elem) {\n    let { prev } = elem;\n    while (prev !== null && !isTag(prev))\n        ({ prev } = prev);\n    return prev;\n}\n\n/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */\nfunction removeElement(elem) {\n    if (elem.prev)\n        elem.prev.next = elem.next;\n    if (elem.next)\n        elem.next.prev = elem.prev;\n    if (elem.parent) {\n        const childs = elem.parent.children;\n        const childsIndex = childs.lastIndexOf(elem);\n        if (childsIndex >= 0) {\n            childs.splice(childsIndex, 1);\n        }\n    }\n    elem.next = null;\n    elem.prev = null;\n    elem.parent = null;\n}\n/**\n * Replace an element in the dom\n *\n * @category Manipulation\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nfunction replaceElement(elem, replacement) {\n    const prev = (replacement.prev = elem.prev);\n    if (prev) {\n        prev.next = replacement;\n    }\n    const next = (replacement.next = elem.next);\n    if (next) {\n        next.prev = replacement;\n    }\n    const parent = (replacement.parent = elem.parent);\n    if (parent) {\n        const childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n        elem.parent = null;\n    }\n}\n/**\n * Append a child to an element.\n *\n * @category Manipulation\n * @param parent The element to append to.\n * @param child The element to be added as a child.\n */\nfunction appendChild(parent, child) {\n    removeElement(child);\n    child.next = null;\n    child.parent = parent;\n    if (parent.children.push(child) > 1) {\n        const sibling = parent.children[parent.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n    }\n    else {\n        child.prev = null;\n    }\n}\n/**\n * Append an element after another.\n *\n * @category Manipulation\n * @param elem The element to append after.\n * @param next The element be added.\n */\nfunction append(elem, next) {\n    removeElement(next);\n    const { parent } = elem;\n    const currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            const childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    }\n    else if (parent) {\n        parent.children.push(next);\n    }\n}\n/**\n * Prepend a child to an element.\n *\n * @category Manipulation\n * @param parent The element to prepend before.\n * @param child The element to be added as a child.\n */\nfunction prependChild(parent, child) {\n    removeElement(child);\n    child.parent = parent;\n    child.prev = null;\n    if (parent.children.unshift(child) !== 1) {\n        const sibling = parent.children[1];\n        sibling.prev = child;\n        child.next = sibling;\n    }\n    else {\n        child.next = null;\n    }\n}\n/**\n * Prepend an element before another.\n *\n * @category Manipulation\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nfunction prepend(elem, prev) {\n    removeElement(prev);\n    const { parent } = elem;\n    if (parent) {\n        const childs = parent.children;\n        childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n        elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\n\n/**\n * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nfunction filter(test, node, recurse = true, limit = Infinity) {\n    return find(test, Array.isArray(node) ? node : [node], recurse, limit);\n}\n/**\n * Search an array of nodes and their children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nfunction find(test, nodes, recurse, limit) {\n    const result = [];\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [Array.isArray(nodes) ? nodes : [nodes]];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (indexStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (test(elem)) {\n            result.push(elem);\n            if (--limit <= 0)\n                return result;\n        }\n        if (recurse && hasChildren(elem) && elem.children.length > 0) {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n/**\n * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nfunction findOneChild(test, nodes) {\n    return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Node or array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first node that passes `test`.\n */\nfunction findOne$1(test, nodes, recurse = true) {\n    const searchedNodes = Array.isArray(nodes) ? nodes : [nodes];\n    for (let i = 0; i < searchedNodes.length; i++) {\n        const node = searchedNodes[i];\n        if (isTag(node) && test(node)) {\n            return node;\n        }\n        if (recurse && hasChildren(node) && node.children.length > 0) {\n            const found = findOne$1(test, node.children, true);\n            if (found)\n                return found;\n        }\n    }\n    return null;\n}\n/**\n * Checks if a tree of nodes contains at least one node passing a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nfunction existsOne(test, nodes) {\n    return (Array.isArray(nodes) ? nodes : [nodes]).some((node) => (isTag(node) && test(node)) ||\n        (hasChildren(node) && existsOne(test, node.children)));\n}\n/**\n * Search an array of nodes and their children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nfunction findAll$1(test, nodes) {\n    const result = [];\n    const nodeStack = [Array.isArray(nodes) ? nodes : [nodes]];\n    const indexStack = [0];\n    for (;;) {\n        if (indexStack[0] >= nodeStack[0].length) {\n            if (nodeStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (isTag(elem) && test(elem))\n            result.push(elem);\n        if (hasChildren(elem) && elem.children.length > 0) {\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n\n/**\n * A map of functions to check nodes against.\n */\nconst Checks = {\n    tag_name(name) {\n        if (typeof name === \"function\") {\n            return (elem) => isTag(elem) && name(elem.name);\n        }\n        else if (name === \"*\") {\n            return isTag;\n        }\n        return (elem) => isTag(elem) && elem.name === name;\n    },\n    tag_type(type) {\n        if (typeof type === \"function\") {\n            return (elem) => type(elem.type);\n        }\n        return (elem) => elem.type === type;\n    },\n    tag_contains(data) {\n        if (typeof data === \"function\") {\n            return (elem) => isText(elem) && data(elem.data);\n        }\n        return (elem) => isText(elem) && elem.data === data;\n    },\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return (elem) => isTag(elem) && value(elem.attribs[attrib]);\n    }\n    return (elem) => isTag(elem) && elem.attribs[attrib] === value;\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return (elem) => a(elem) || b(elem);\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */\nfunction compileTest(options) {\n    const funcs = Object.keys(options).map((key) => {\n        const value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * Checks whether a node matches the description in `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nfunction testElement(options, node) {\n    const test = compileTest(options);\n    return test ? test(node) : true;\n}\n/**\n * Returns all nodes that match `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nfunction getElements(options, nodes, recurse, limit = Infinity) {\n    const test = compileTest(options);\n    return test ? filter(test, nodes, recurse, limit) : [];\n}\n/**\n * Returns the node with the supplied ID.\n *\n * @category Legacy Query Functions\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nfunction getElementById(id, nodes, recurse = true) {\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return findOne$1(getAttribCheck(\"id\", id), nodes, recurse);\n}\n/**\n * Returns all nodes with the supplied `tagName`.\n *\n * @category Legacy Query Functions\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nfunction getElementsByTagName(tagName, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `className`.\n *\n * @category Legacy Query Functions\n * @param className Class name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `className`.\n */\nfunction getElementsByClassName(className, nodes, recurse = true, limit = Infinity) {\n    return filter(getAttribCheck(\"class\", className), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `type`.\n *\n * @category Legacy Query Functions\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nfunction getElementsByTagType(type, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\n\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nfunction removeSubsets(nodes) {\n    let idx = nodes.length;\n    /*\n     * Check if each node (or one of its ancestors) is already contained in the\n     * array.\n     */\n    while (--idx >= 0) {\n        const node = nodes[idx];\n        /*\n         * Remove the node if it is not unique.\n         * We are going through the array from the end, so we only\n         * have to check nodes that preceed the node under consideration in the array.\n         */\n        if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n            nodes.splice(idx, 1);\n            continue;\n        }\n        for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n            if (nodes.includes(ancestor)) {\n                nodes.splice(idx, 1);\n                break;\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nvar DocumentPosition;\n(function (DocumentPosition) {\n    DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n    DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n    DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n    DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n    DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nfunction compareDocumentPosition(nodeA, nodeB) {\n    const aParents = [];\n    const bParents = [];\n    if (nodeA === nodeB) {\n        return 0;\n    }\n    let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n    while (current) {\n        aParents.unshift(current);\n        current = current.parent;\n    }\n    current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n    while (current) {\n        bParents.unshift(current);\n        current = current.parent;\n    }\n    const maxIdx = Math.min(aParents.length, bParents.length);\n    let idx = 0;\n    while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n        idx++;\n    }\n    if (idx === 0) {\n        return DocumentPosition.DISCONNECTED;\n    }\n    const sharedParent = aParents[idx - 1];\n    const siblings = sharedParent.children;\n    const aSibling = aParents[idx];\n    const bSibling = bParents[idx];\n    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) {\n            return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n        }\n        return DocumentPosition.FOLLOWING;\n    }\n    if (sharedParent === nodeA) {\n        return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n    }\n    return DocumentPosition.PRECEDING;\n}\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nfunction uniqueSort(nodes) {\n    nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n    nodes.sort((a, b) => {\n        const relative = compareDocumentPosition(a, b);\n        if (relative & DocumentPosition.PRECEDING) {\n            return -1;\n        }\n        else if (relative & DocumentPosition.FOLLOWING) {\n            return 1;\n        }\n        return 0;\n    });\n    return nodes;\n}\n\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nfunction getFeed(doc) {\n    const feedRoot = getOneElement(isValidFeed, doc);\n    return !feedRoot\n        ? null\n        : feedRoot.name === \"feed\"\n            ? getAtomFeed(feedRoot)\n            : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n    var _a;\n    const childs = feedRoot.children;\n    const feed = {\n        type: \"atom\",\n        items: getElementsByTagName(\"entry\", childs).map((item) => {\n            var _a;\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"id\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n            if (href) {\n                entry.link = href;\n            }\n            const description = fetch(\"summary\", children) || fetch(\"content\", children);\n            if (description) {\n                entry.description = description;\n            }\n            const pubDate = fetch(\"updated\", children);\n            if (pubDate) {\n                entry.pubDate = new Date(pubDate);\n            }\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"id\", \"id\", childs);\n    addConditionally(feed, \"title\", \"title\", childs);\n    const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n    if (href) {\n        feed.link = href;\n    }\n    addConditionally(feed, \"description\", \"subtitle\", childs);\n    const updated = fetch(\"updated\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"email\", childs, true);\n    return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n    var _a, _b;\n    const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n    const feed = {\n        type: feedRoot.name.substr(0, 3),\n        id: \"\",\n        items: getElementsByTagName(\"item\", feedRoot.children).map((item) => {\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"guid\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            addConditionally(entry, \"link\", \"link\", children);\n            addConditionally(entry, \"description\", \"description\", children);\n            const pubDate = fetch(\"pubDate\", children) || fetch(\"dc:date\", children);\n            if (pubDate)\n                entry.pubDate = new Date(pubDate);\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"title\", \"title\", childs);\n    addConditionally(feed, \"link\", \"link\", childs);\n    addConditionally(feed, \"description\", \"description\", childs);\n    const updated = fetch(\"lastBuildDate\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n    return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\n    \"fileSize\",\n    \"bitrate\",\n    \"framerate\",\n    \"samplingrate\",\n    \"channels\",\n    \"duration\",\n    \"height\",\n    \"width\",\n];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n    return getElementsByTagName(\"media:content\", where).map((elem) => {\n        const { attribs } = elem;\n        const media = {\n            medium: attribs[\"medium\"],\n            isDefault: !!attribs[\"isDefault\"],\n        };\n        for (const attrib of MEDIA_KEYS_STRING) {\n            if (attribs[attrib]) {\n                media[attrib] = attribs[attrib];\n            }\n        }\n        for (const attrib of MEDIA_KEYS_INT) {\n            if (attribs[attrib]) {\n                media[attrib] = parseInt(attribs[attrib], 10);\n            }\n        }\n        if (attribs[\"expression\"]) {\n            media.expression = attribs[\"expression\"];\n        }\n        return media;\n    });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n    return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse = false) {\n    return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse = false) {\n    const val = fetch(tagName, where, recurse);\n    if (val)\n        obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n\nvar DomUtils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get DocumentPosition () { return DocumentPosition; },\n  append: append,\n  appendChild: appendChild,\n  compareDocumentPosition: compareDocumentPosition,\n  existsOne: existsOne,\n  filter: filter,\n  find: find,\n  findAll: findAll$1,\n  findOne: findOne$1,\n  findOneChild: findOneChild,\n  getAttributeValue: getAttributeValue,\n  getChildren: getChildren,\n  getElementById: getElementById,\n  getElements: getElements,\n  getElementsByClassName: getElementsByClassName,\n  getElementsByTagName: getElementsByTagName,\n  getElementsByTagType: getElementsByTagType,\n  getFeed: getFeed,\n  getInnerHTML: getInnerHTML,\n  getName: getName,\n  getOuterHTML: getOuterHTML,\n  getParent: getParent,\n  getSiblings: getSiblings,\n  getText: getText,\n  hasAttrib: hasAttrib,\n  hasChildren: hasChildren,\n  innerText: innerText,\n  isCDATA: isCDATA,\n  isComment: isComment,\n  isDocument: isDocument,\n  isTag: isTag,\n  isText: isText,\n  nextElementSibling: nextElementSibling,\n  prepend: prepend,\n  prependChild: prependChild,\n  prevElementSibling: prevElementSibling,\n  removeElement: removeElement,\n  removeSubsets: removeSubsets,\n  replaceElement: replaceElement,\n  testElement: testElement,\n  textContent: textContent,\n  uniqueSort: uniqueSort\n});\n\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n    return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\nconst caseInsensitiveAttributes = new Set([\n    \"accept\",\n    \"accept-charset\",\n    \"align\",\n    \"alink\",\n    \"axis\",\n    \"bgcolor\",\n    \"charset\",\n    \"checked\",\n    \"clear\",\n    \"codetype\",\n    \"color\",\n    \"compact\",\n    \"declare\",\n    \"defer\",\n    \"dir\",\n    \"direction\",\n    \"disabled\",\n    \"enctype\",\n    \"face\",\n    \"frame\",\n    \"hreflang\",\n    \"http-equiv\",\n    \"lang\",\n    \"language\",\n    \"link\",\n    \"media\",\n    \"method\",\n    \"multiple\",\n    \"nohref\",\n    \"noresize\",\n    \"noshade\",\n    \"nowrap\",\n    \"readonly\",\n    \"rel\",\n    \"rev\",\n    \"rules\",\n    \"scope\",\n    \"scrolling\",\n    \"selected\",\n    \"shape\",\n    \"target\",\n    \"text\",\n    \"type\",\n    \"valign\",\n    \"valuetype\",\n    \"vlink\",\n]);\nfunction shouldIgnoreCase(selector, options) {\n    return typeof selector.ignoreCase === \"boolean\"\n        ? selector.ignoreCase\n        : selector.ignoreCase === \"quirks\"\n            ? !!options.quirksMode\n            : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\nconst attributeRules = {\n    equals(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length === value.length &&\n                    attr.toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) === value && next(elem);\n    },\n    hyphen(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function hyphenIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    (attr.length === len || attr.charAt(len) === \"-\") &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return function hyphen(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                (attr.length === len || attr.charAt(len) === \"-\") &&\n                attr.substr(0, len) === value &&\n                next(elem));\n        };\n    },\n    element(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (/\\s/.test(value)) {\n            return boolbaseExports.falseFunc;\n        }\n        const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n        return function element(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                attr.length >= value.length &&\n                regex.test(attr) &&\n                next(elem));\n        };\n    },\n    exists(next, { name }, { adapter }) {\n        return (elem) => adapter.hasAttrib(elem, name) && next(elem);\n    },\n    start(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (len === 0) {\n            return boolbaseExports.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= len &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => !!adapter.getAttributeValue(elem, name)?.startsWith(value) &&\n            next(elem);\n    },\n    end(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = -value.length;\n        if (len === 0) {\n            return boolbaseExports.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => adapter\n                .getAttributeValue(elem, name)\n                ?.substr(len)\n                .toLowerCase() === value && next(elem);\n        }\n        return (elem) => !!adapter.getAttributeValue(elem, name)?.endsWith(value) &&\n            next(elem);\n    },\n    any(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (value === \"\") {\n            return boolbaseExports.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            const regex = new RegExp(escapeRegex(value), \"i\");\n            return function anyIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= value.length &&\n                    regex.test(attr) &&\n                    next(elem));\n            };\n        }\n        return (elem) => !!adapter.getAttributeValue(elem, name)?.includes(value) &&\n            next(elem);\n    },\n    not(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (value === \"\") {\n            return (elem) => !!adapter.getAttributeValue(elem, name) && next(elem);\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return ((attr == null ||\n                    attr.length !== value.length ||\n                    attr.toLowerCase() !== value) &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) !== value && next(elem);\n    },\n};\n\n/**\n * Find all elements matching the query. If not in XML mode, the query will ignore\n * the contents of `<template>` elements.\n *\n * @param query - Function that returns true if the element matches the query.\n * @param elems - Nodes to query. If a node is an element, its children will be queried.\n * @param options - Options for querying the document.\n * @returns All matching elements.\n */\nfunction findAll(query, elems, options) {\n    const { adapter, xmlMode = false } = options;\n    const result = [];\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [elems];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (nodeStack.length === 1) {\n                return result;\n            }\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (!adapter.isTag(elem)) {\n            continue;\n        }\n        if (query(elem)) {\n            result.push(elem);\n        }\n        if (xmlMode || adapter.getName(elem) !== \"template\") {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            const children = adapter.getChildren(elem);\n            if (children.length > 0) {\n                nodeStack.unshift(children);\n                indexStack.unshift(0);\n            }\n        }\n    }\n}\n/**\n * Find the first element matching the query. If not in XML mode, the query will ignore\n * the contents of `<template>` elements.\n *\n * @param query - Function that returns true if the element matches the query.\n * @param elems - Nodes to query. If a node is an element, its children will be queried.\n * @param options - Options for querying the document.\n * @returns The first matching element, or null if there was no match.\n */\nfunction findOne(query, elems, options) {\n    const { adapter, xmlMode = false } = options;\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [elems];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (nodeStack.length === 1) {\n                return null;\n            }\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (!adapter.isTag(elem)) {\n            continue;\n        }\n        if (query(elem)) {\n            return elem;\n        }\n        if (xmlMode || adapter.getName(elem) !== \"template\") {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            const children = adapter.getChildren(elem);\n            if (children.length > 0) {\n                nodeStack.unshift(children);\n                indexStack.unshift(0);\n            }\n        }\n    }\n}\nfunction getNextSiblings(elem, adapter) {\n    const siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1) {\n        return [];\n    }\n    const elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1) {\n        return [];\n    }\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction getElementParent(node, adapter) {\n    const parent = adapter.getParent(node);\n    return parent != null && adapter.isTag(parent) ? parent : null;\n}\n\n/**\n * Only text controls can be made read-only, since for other controls (such\n * as checkboxes and buttons) there is no useful distinction between being\n * read-only and being disabled.\n *\n * @see {@link https://html.spec.whatwg.org/multipage/input.html#attr-input-readonly}\n */\nconst textControl = \"input:is([type=text i],[type=search i],[type=url i],[type=tel i],[type=email i],[type=password i],[type=date i],[type=month i],[type=week i],[type=time i],[type=datetime-local i],[type=number i])\";\n/**\n * Aliases are pseudos that are expressed as selectors.\n */\nconst aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], :selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    \"read-only\": `[readonly]:is(textarea, ${textControl})`,\n    \"read-write\": `:not([readonly]):is(textarea, ${textControl})`,\n    // JQuery extensions\n    /**\n     * `:selected` matches option elements that have the `selected` attribute,\n     * or are the first option element in a select element that does not have\n     * the `multiple` attribute and does not have any option elements with the\n     * `selected` attribute.\n     *\n     * @see https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n     */\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\",\n};\n\n// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nconst whitespace = new Set([9, 10, 12, 13, 32]);\nconst ZERO = \"0\".charCodeAt(0);\nconst NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nfunction parse(formula) {\n    formula = formula.trim().toLowerCase();\n    if (formula === \"even\") {\n        return [2, 0];\n    }\n    else if (formula === \"odd\") {\n        return [2, 1];\n    }\n    // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n    let idx = 0;\n    let a = 0;\n    let sign = readSign();\n    let number = readNumber();\n    if (idx < formula.length && formula.charAt(idx) === \"n\") {\n        idx++;\n        a = sign * (number !== null && number !== void 0 ? number : 1);\n        skipWhitespace();\n        if (idx < formula.length) {\n            sign = readSign();\n            skipWhitespace();\n            number = readNumber();\n        }\n        else {\n            sign = number = 0;\n        }\n    }\n    // Throw if there is anything else\n    if (number === null || idx < formula.length) {\n        throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n    }\n    return [a, sign * number];\n    function readSign() {\n        if (formula.charAt(idx) === \"-\") {\n            idx++;\n            return -1;\n        }\n        if (formula.charAt(idx) === \"+\") {\n            idx++;\n        }\n        return 1;\n    }\n    function readNumber() {\n        const start = idx;\n        let value = 0;\n        while (idx < formula.length &&\n            formula.charCodeAt(idx) >= ZERO &&\n            formula.charCodeAt(idx) <= NINE) {\n            value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n            idx++;\n        }\n        // Return `null` if we didn't read anything.\n        return idx === start ? null : value;\n    }\n    function skipWhitespace() {\n        while (idx < formula.length &&\n            whitespace.has(formula.charCodeAt(idx))) {\n            idx++;\n        }\n    }\n}\n\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n *\n * ```js\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n * ```\n */\nfunction compile(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    const b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return (index) => index <= b;\n    if (a === 0)\n        return (index) => index === b;\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase.trueFunc : (index) => index >= b;\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    const absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    const bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? (index) => index >= b && index % absA === bMod\n        : (index) => index <= b && index % absA === bMod;\n}\n\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction nthCheck(formula) {\n    return compile(parse(formula));\n}\n\n/**\n * Some selectors such as `:contains` and (non-relative) `:has` will only be\n * able to match elements if their parents match the selector (as they contain\n * a subset of the elements that the parent contains).\n *\n * This function wraps the given `matches` function in a function that caches\n * the results of the parent elements, so that the `matches` function only\n * needs to be called once for each subtree.\n */\nfunction cacheParentResults(next, { adapter, cacheResults }, matches) {\n    if (cacheResults === false || typeof WeakMap === \"undefined\") {\n        return (elem) => next(elem) && matches(elem);\n    }\n    // Use a cache to avoid re-checking children of an element.\n    // @ts-expect-error `Node` is not extending object\n    const resultCache = new WeakMap();\n    function addResultToCache(elem) {\n        const result = matches(elem);\n        resultCache.set(elem, result);\n        return result;\n    }\n    return function cachedMatcher(elem) {\n        if (!next(elem)) {\n            return false;\n        }\n        if (resultCache.has(elem)) {\n            return resultCache.get(elem);\n        }\n        // Check all of the element's parents.\n        let node = elem;\n        do {\n            const parent = getElementParent(node, adapter);\n            if (parent === null) {\n                return addResultToCache(elem);\n            }\n            node = parent;\n        } while (!resultCache.has(node));\n        return resultCache.get(node) && addResultToCache(elem);\n    };\n}\n\nconst filters = {\n    contains(next, text, options) {\n        const { getText } = options.adapter;\n        return cacheParentResults(next, options, (elem) => getText(elem).includes(text));\n    },\n    icontains(next, text, options) {\n        const itext = text.toLowerCase();\n        const { getText } = options.adapter;\n        return cacheParentResults(next, options, (elem) => getText(elem).toLowerCase().includes(itext));\n    },\n    // Location specific methods\n    \"nth-child\"(next, rule, { adapter, equals }) {\n        const func = nthCheck(rule);\n        if (func === boolbaseExports.falseFunc) {\n            return boolbaseExports.falseFunc;\n        }\n        if (func === boolbaseExports.trueFunc) {\n            return (elem) => getElementParent(elem, adapter) !== null && next(elem);\n        }\n        return function nthChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                if (equals(elem, siblings[i])) {\n                    break;\n                }\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\"(next, rule, { adapter, equals }) {\n        const func = nthCheck(rule);\n        if (func === boolbaseExports.falseFunc) {\n            return boolbaseExports.falseFunc;\n        }\n        if (func === boolbaseExports.trueFunc) {\n            return (elem) => getElementParent(elem, adapter) !== null && next(elem);\n        }\n        return function nthLastChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                if (equals(elem, siblings[i])) {\n                    break;\n                }\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\"(next, rule, { adapter, equals }) {\n        const func = nthCheck(rule);\n        if (func === boolbaseExports.falseFunc) {\n            return boolbaseExports.falseFunc;\n        }\n        if (func === boolbaseExports.trueFunc) {\n            return (elem) => getElementParent(elem, adapter) !== null && next(elem);\n        }\n        return function nthOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling)) {\n                    break;\n                }\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\"(next, rule, { adapter, equals }) {\n        const func = nthCheck(rule);\n        if (func === boolbaseExports.falseFunc) {\n            return boolbaseExports.falseFunc;\n        }\n        if (func === boolbaseExports.trueFunc) {\n            return (elem) => getElementParent(elem, adapter) !== null && next(elem);\n        }\n        return function nthLastOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling)) {\n                    break;\n                }\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    // TODO determine the actual root element\n    root(next, _rule, { adapter }) {\n        return (elem) => getElementParent(elem, adapter) === null && next(elem);\n    },\n    scope(next, rule, options, context) {\n        const { equals } = options;\n        if (!context || context.length === 0) {\n            // Equivalent to :root\n            return filters[\"root\"](next, rule, options);\n        }\n        if (context.length === 1) {\n            // NOTE: can't be unpacked, as :has uses this for side-effects\n            return (elem) => equals(context[0], elem) && next(elem);\n        }\n        return (elem) => context.includes(elem) && next(elem);\n    },\n    hover: dynamicStatePseudo(\"isHovered\"),\n    visited: dynamicStatePseudo(\"isVisited\"),\n    active: dynamicStatePseudo(\"isActive\"),\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */\nfunction dynamicStatePseudo(name) {\n    return function dynamicPseudo(next, _rule, { adapter }) {\n        const func = adapter[name];\n        if (typeof func !== \"function\") {\n            return boolbaseExports.falseFunc;\n        }\n        return function active(elem) {\n            return func(elem) && next(elem);\n        };\n    };\n}\n\n/**\n * CSS limits the characters considered as whitespace to space, tab & line\n * feed. We add carriage returns as htmlparser2 doesn't normalize them to\n * line feeds.\n *\n * @see {@link https://www.w3.org/TR/css-text-3/#white-space}\n */\nconst isDocumentWhiteSpace = /^[ \\t\\r\\n]*$/;\n// While filters are precompiled, pseudos get called when they are needed\nconst pseudos = {\n    empty(elem, { adapter }) {\n        const children = adapter.getChildren(elem);\n        return (\n        // First, make sure the tag does not have any element children.\n        children.every((elem) => !adapter.isTag(elem)) &&\n            // Then, check that the text content is only whitespace.\n            children.every((elem) => \n            // FIXME: `getText` call is potentially expensive.\n            isDocumentWhiteSpace.test(adapter.getText(elem))));\n    },\n    \"first-child\"(elem, { adapter, equals }) {\n        if (adapter.prevElementSibling) {\n            return adapter.prevElementSibling(elem) == null;\n        }\n        const firstChild = adapter\n            .getSiblings(elem)\n            .find((elem) => adapter.isTag(elem));\n        return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            if (equals(elem, siblings[i])) {\n                return true;\n            }\n            if (adapter.isTag(siblings[i])) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"first-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) {\n                return true;\n            }\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"last-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) {\n                return true;\n            }\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"only-of-type\"(elem, { adapter, equals }) {\n        const elemName = adapter.getName(elem);\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) ||\n            !adapter.isTag(sibling) ||\n            adapter.getName(sibling) !== elemName);\n    },\n    \"only-child\"(elem, { adapter, equals }) {\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) || !adapter.isTag(sibling));\n    },\n};\nfunction verifyPseudoArgs(func, name, subselect, argIndex) {\n    if (subselect === null) {\n        if (func.length > argIndex) {\n            throw new Error(`Pseudo-class :${name} requires an argument`);\n        }\n    }\n    else if (func.length === argIndex) {\n        throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n    }\n}\n\nfunction isTraversal(token) {\n    return token.type === \"_flexibleDescendant\" || isTraversal$1(token);\n}\n/**\n * Sort the parts of the passed selector, as there is potential for\n * optimization (some types of selectors are faster than others).\n *\n * @param arr Selector to sort\n */\nfunction sortRules(arr) {\n    const ratings = arr.map(getQuality);\n    for (let i = 1; i < arr.length; i++) {\n        const procNew = ratings[i];\n        if (procNew < 0) {\n            continue;\n        }\n        // Use insertion sort to move the token to the correct position.\n        for (let j = i; j > 0 && procNew < ratings[j - 1]; j--) {\n            const token = arr[j];\n            arr[j] = arr[j - 1];\n            arr[j - 1] = token;\n            ratings[j] = ratings[j - 1];\n            ratings[j - 1] = procNew;\n        }\n    }\n}\nfunction getAttributeQuality(token) {\n    switch (token.action) {\n        case AttributeAction.Exists: {\n            return 10;\n        }\n        case AttributeAction.Equals: {\n            // Prefer ID selectors (eg. #ID)\n            return token.name === \"id\" ? 9 : 8;\n        }\n        case AttributeAction.Not: {\n            return 7;\n        }\n        case AttributeAction.Start: {\n            return 6;\n        }\n        case AttributeAction.End: {\n            return 6;\n        }\n        case AttributeAction.Any: {\n            return 5;\n        }\n        case AttributeAction.Hyphen: {\n            return 4;\n        }\n        case AttributeAction.Element: {\n            return 3;\n        }\n    }\n}\n/**\n * Determine the quality of the passed token. The higher the number, the\n * faster the token is to execute.\n *\n * @param token Token to get the quality of.\n * @returns The token's quality.\n */\nfunction getQuality(token) {\n    switch (token.type) {\n        case SelectorType.Universal: {\n            return 50;\n        }\n        case SelectorType.Tag: {\n            return 30;\n        }\n        case SelectorType.Attribute: {\n            return Math.floor(getAttributeQuality(token) /\n                // `ignoreCase` adds some overhead, half the result if applicable.\n                (token.ignoreCase ? 2 : 1));\n        }\n        case SelectorType.Pseudo: {\n            return !token.data\n                ? 3\n                : token.name === \"has\" ||\n                    token.name === \"contains\" ||\n                    token.name === \"icontains\"\n                    ? // Expensive in any case — run as late as possible.\n                        0\n                    : Array.isArray(token.data)\n                        ? // Eg. `:is`, `:not`\n                            Math.max(\n                            // If we have traversals, try to avoid executing this selector\n                            0, Math.min(...token.data.map((d) => Math.min(...d.map(getQuality)))))\n                        : 2;\n        }\n        default: {\n            return -1;\n        }\n    }\n}\nfunction includesScopePseudo(t) {\n    return (t.type === SelectorType.Pseudo &&\n        (t.name === \"scope\" ||\n            (Array.isArray(t.data) &&\n                t.data.some((data) => data.some(includesScopePseudo)))));\n}\n\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\nconst PLACEHOLDER_ELEMENT = {};\n/**\n * Check if the selector has any properties that rely on the current element.\n * If not, we can cache the result of the selector.\n *\n * We can't cache selectors that start with a traversal (e.g. `>`, `+`, `~`),\n * or include a `:scope`.\n *\n * @param selector - The selector to check.\n * @returns Whether the selector has any properties that rely on the current element.\n */\nfunction hasDependsOnCurrentElement(selector) {\n    return selector.some((sel) => sel.length > 0 &&\n        (isTraversal(sel[0]) || sel.some(includesScopePseudo)));\n}\nfunction copyOptions(options) {\n    // Not copied: context, rootFunc\n    return {\n        xmlMode: !!options.xmlMode,\n        lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n        lowerCaseTags: !!options.lowerCaseTags,\n        quirksMode: !!options.quirksMode,\n        cacheResults: !!options.cacheResults,\n        pseudos: options.pseudos,\n        adapter: options.adapter,\n        equals: options.equals,\n    };\n}\nconst is = (next, token, options, context, compileToken) => {\n    const func = compileToken(token, copyOptions(options), context);\n    return func === boolbaseExports.trueFunc\n        ? next\n        : func === boolbaseExports.falseFunc\n            ? boolbaseExports.falseFunc\n            : (elem) => func(elem) && next(elem);\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */\nconst subselects = {\n    is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */\n    matches: is,\n    where: is,\n    not(next, token, options, context, compileToken) {\n        const func = compileToken(token, copyOptions(options), context);\n        return func === boolbaseExports.falseFunc\n            ? next\n            : func === boolbaseExports.trueFunc\n                ? boolbaseExports.falseFunc\n                : (elem) => !func(elem) && next(elem);\n    },\n    has(next, subselect, options, _context, compileToken) {\n        const { adapter } = options;\n        const opts = copyOptions(options);\n        opts.relativeSelector = true;\n        const context = subselect.some((s) => s.some(isTraversal))\n            ? // Used as a placeholder. Will be replaced with the actual element.\n                [PLACEHOLDER_ELEMENT]\n            : undefined;\n        const skipCache = hasDependsOnCurrentElement(subselect);\n        const compiled = compileToken(subselect, opts, context);\n        if (compiled === boolbaseExports.falseFunc) {\n            return boolbaseExports.falseFunc;\n        }\n        // If `compiled` is `trueFunc`, we can skip this.\n        if (context && compiled !== boolbaseExports.trueFunc) {\n            return skipCache\n                ? (elem) => {\n                    if (!next(elem)) {\n                        return false;\n                    }\n                    context[0] = elem;\n                    const childs = adapter.getChildren(elem);\n                    return (findOne(compiled, compiled.shouldTestNextSiblings\n                        ? [\n                            ...childs,\n                            ...getNextSiblings(elem, adapter),\n                        ]\n                        : childs, options) !== null);\n                }\n                : cacheParentResults(next, options, (elem) => {\n                    context[0] = elem;\n                    return (findOne(compiled, adapter.getChildren(elem), options) !== null);\n                });\n        }\n        const hasOne = (elem) => findOne(compiled, adapter.getChildren(elem), options) !== null;\n        return skipCache\n            ? (elem) => next(elem) && hasOne(elem)\n            : cacheParentResults(next, options, hasOne);\n    },\n};\n\n/*\n * Pseudo selectors\n *\n * Pseudo selectors are available in three forms:\n *\n * 1. Filters are called when the selector is compiled and return a function\n *  that has to return either false, or the results of `next()`.\n * 2. Pseudos are called on execution. They have to return a boolean.\n * 3. Subselects work like filters, but have an embedded selector that will be run separately.\n *\n * Filters are great if you want to do some pre-processing, or change the call order\n * of `next()` and your code.\n * Pseudos should be used to implement simple checks.\n */\nfunction compilePseudoSelector(next, selector, options, context, compileToken) {\n    const { name, data } = selector;\n    if (Array.isArray(data)) {\n        if (!(name in subselects)) {\n            throw new Error(`Unknown pseudo-class :${name}(${data})`);\n        }\n        return subselects[name](next, data, options, context, compileToken);\n    }\n    const userPseudo = options.pseudos?.[name];\n    const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n    if (typeof stringPseudo === \"string\") {\n        if (data != null) {\n            throw new Error(`Pseudo ${name} doesn't have any arguments`);\n        }\n        // The alias has to be parsed here, to make sure options are respected.\n        const alias = parse$1(stringPseudo);\n        return subselects[\"is\"](next, alias, options, context, compileToken);\n    }\n    if (typeof userPseudo === \"function\") {\n        verifyPseudoArgs(userPseudo, name, data, 1);\n        return (elem) => userPseudo(elem, data) && next(elem);\n    }\n    if (name in filters) {\n        return filters[name](next, data, options, context);\n    }\n    if (name in pseudos) {\n        const pseudo = pseudos[name];\n        verifyPseudoArgs(pseudo, name, data, 2);\n        return (elem) => pseudo(elem, options, data) && next(elem);\n    }\n    throw new Error(`Unknown pseudo-class :${name}`);\n}\n\n/*\n * All available rules\n */\nfunction compileGeneralSelector(next, selector, options, context, compileToken, hasExpensiveSubselector) {\n    const { adapter, equals, cacheResults } = options;\n    switch (selector.type) {\n        case SelectorType.PseudoElement: {\n            throw new Error(\"Pseudo-elements are not supported by css-select\");\n        }\n        case SelectorType.ColumnCombinator: {\n            throw new Error(\"Column combinators are not yet supported by css-select\");\n        }\n        case SelectorType.Attribute: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n            }\n            if (!options.xmlMode || options.lowerCaseAttributeNames) {\n                selector.name = selector.name.toLowerCase();\n            }\n            return attributeRules[selector.action](next, selector, options);\n        }\n        case SelectorType.Pseudo: {\n            return compilePseudoSelector(next, selector, options, context, compileToken);\n        }\n        // Tags\n        case SelectorType.Tag: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n            }\n            let { name } = selector;\n            if (!options.xmlMode || options.lowerCaseTags) {\n                name = name.toLowerCase();\n            }\n            return function tag(elem) {\n                return adapter.getName(elem) === name && next(elem);\n            };\n        }\n        // Traversal\n        case SelectorType.Descendant: {\n            if (!hasExpensiveSubselector ||\n                cacheResults === false ||\n                typeof WeakMap === \"undefined\") {\n                return function descendant(elem) {\n                    let current = elem;\n                    // biome-ignore lint/suspicious/noAssignInExpressions: TODO\n                    while ((current = getElementParent(current, adapter))) {\n                        if (next(current)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n            }\n            const resultCache = new WeakMap();\n            return function cachedDescendant(elem) {\n                let current = elem;\n                let result;\n                // biome-ignore lint/suspicious/noAssignInExpressions: TODO\n                while ((current = getElementParent(current, adapter))) {\n                    const cached = resultCache.get(current);\n                    if (cached === undefined) {\n                        result ?? (result = { matches: false });\n                        result.matches = next(current);\n                        resultCache.set(current, result);\n                        if (result.matches) {\n                            return true;\n                        }\n                    }\n                    else {\n                        if (result) {\n                            result.matches = cached.matches;\n                        }\n                        return cached.matches;\n                    }\n                }\n                return false;\n            };\n        }\n        case \"_flexibleDescendant\": {\n            // Include element itself, only used while querying an array\n            return function flexibleDescendant(elem) {\n                let current = elem;\n                do {\n                    if (next(current)) {\n                        return true;\n                    }\n                    current = getElementParent(current, adapter);\n                } while (current);\n                return false;\n            };\n        }\n        case SelectorType.Parent: {\n            return function parent(elem) {\n                return adapter\n                    .getChildren(elem)\n                    .some((elem) => adapter.isTag(elem) && next(elem));\n            };\n        }\n        case SelectorType.Child: {\n            return function child(elem) {\n                const parent = getElementParent(elem, adapter);\n                return parent !== null && next(parent);\n            };\n        }\n        case SelectorType.Sibling: {\n            return function sibling(elem) {\n                const siblings = adapter.getSiblings(elem);\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling)) {\n                        break;\n                    }\n                    if (adapter.isTag(currentSibling) && next(currentSibling)) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        }\n        case SelectorType.Adjacent: {\n            if (adapter.prevElementSibling) {\n                return function adjacent(elem) {\n                    const previous = adapter.prevElementSibling(elem);\n                    return previous != null && next(previous);\n                };\n            }\n            return function adjacent(elem) {\n                const siblings = adapter.getSiblings(elem);\n                let lastElement;\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling)) {\n                        break;\n                    }\n                    if (adapter.isTag(currentSibling)) {\n                        lastElement = currentSibling;\n                    }\n                }\n                return !!lastElement && next(lastElement);\n            };\n        }\n        case SelectorType.Universal: {\n            if (selector.namespace != null && selector.namespace !== \"*\") {\n                throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n            }\n            return next;\n        }\n    }\n}\n\nconst DESCENDANT_TOKEN = { type: SelectorType.Descendant };\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\",\n};\nconst SCOPE_TOKEN = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */\nfunction absolutize(token, { adapter }, context) {\n    // TODO Use better check if the context is a document\n    const hasContext = !!context?.every((e) => e === PLACEHOLDER_ELEMENT ||\n        (adapter.isTag(e) && getElementParent(e, adapter) !== null));\n    for (const t of token) {\n        if (t.length > 0 &&\n            isTraversal(t[0]) &&\n            t[0].type !== SelectorType.Descendant) ;\n        else if (hasContext && !t.some(includesScopePseudo)) {\n            t.unshift(DESCENDANT_TOKEN);\n        }\n        else {\n            continue;\n        }\n        t.unshift(SCOPE_TOKEN);\n    }\n}\nfunction compileToken(token, options, ctx) {\n    token.forEach(sortRules);\n    const { context = ctx, rootFunc = boolbaseExports.trueFunc } = options;\n    const isArrayContext = Array.isArray(context);\n    const finalContext = context && (Array.isArray(context) ? context : [context]);\n    // Check if the selector is relative\n    if (options.relativeSelector !== false) {\n        absolutize(token, options, finalContext);\n    }\n    else if (token.some((t) => t.length > 0 && isTraversal(t[0]))) {\n        throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n    }\n    let shouldTestNextSiblings = false;\n    let query = boolbaseExports.falseFunc;\n    combineLoop: for (const rules of token) {\n        if (rules.length >= 2) {\n            const [first, second] = rules;\n            if (first.type !== SelectorType.Pseudo || first.name !== \"scope\") ;\n            else if (isArrayContext &&\n                second.type === SelectorType.Descendant) {\n                rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n            }\n            else if (second.type === SelectorType.Adjacent ||\n                second.type === SelectorType.Sibling) {\n                shouldTestNextSiblings = true;\n            }\n        }\n        let next = rootFunc;\n        let hasExpensiveSubselector = false;\n        for (const rule of rules) {\n            next = compileGeneralSelector(next, rule, options, finalContext, compileToken, hasExpensiveSubselector);\n            const quality = getQuality(rule);\n            if (quality === 0) {\n                hasExpensiveSubselector = true;\n            }\n            // If the sub-selector won't match any elements, skip it.\n            if (next === boolbaseExports.falseFunc) {\n                continue combineLoop;\n            }\n        }\n        // If we have a function that always returns true, we can stop here.\n        if (next === rootFunc) {\n            return rootFunc;\n        }\n        query = query === boolbaseExports.falseFunc ? next : or(query, next);\n    }\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n}\nfunction or(a, b) {\n    return (elem) => a(elem) || b(elem);\n}\n\nconst defaultEquals = (a, b) => a === b;\nconst defaultOptions = {\n    adapter: DomUtils,\n    equals: defaultEquals,\n};\nfunction convertOptionFormats(options) {\n    /*\n     * We force one format of options to the other one.\n     */\n    // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n    const opts = options ?? defaultOptions;\n    // @ts-expect-error Same as above.\n    opts.adapter ?? (opts.adapter = DomUtils);\n    // @ts-expect-error `equals` does not exist on `Options`\n    opts.equals ?? (opts.equals = opts.adapter?.equals ?? defaultEquals);\n    return opts;\n}\n/**\n * Like `compile`, but does not add a check if elements are tags.\n */\nfunction _compileUnsafe(selector, options, context) {\n    return _compileToken(typeof selector === \"string\" ? parse$1(selector) : selector, options, context);\n}\n/**\n * @deprecated Use `_compileUnsafe` instead.\n */\nfunction _compileToken(selector, options, context) {\n    return compileToken(selector, convertOptionFormats(options), context);\n}\nfunction getSelectorFunc(searchFunc) {\n    return function select(query, elements, options) {\n        const opts = convertOptionFormats(options);\n        if (typeof query !== \"function\") {\n            query = _compileUnsafe(query, opts, elements);\n        }\n        const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n        return searchFunc(query, filteredElements, opts);\n    };\n}\nfunction prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n    /*\n     * Add siblings if the query requires them.\n     * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n     */\n    if (shouldTestNextSiblings) {\n        elems = appendNextSiblings(elems, adapter);\n    }\n    return Array.isArray(elems)\n        ? adapter.removeSubsets(elems)\n        : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n    const elemsLength = elems.length;\n    for (let i = 0; i < elemsLength; i++) {\n        const nextSiblings = getNextSiblings(elems[i], adapter);\n        elems.push(...nextSiblings);\n    }\n    return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\nconst selectAll = getSelectorFunc((query, elems, options) => query === boolbaseExports.falseFunc || !elems || elems.length === 0\n    ? []\n    : findAll(query, elems, options));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\nconst selectOne = getSelectorFunc((query, elems, options) => query === boolbaseExports.falseFunc || !elems || elems.length === 0\n    ? null\n    : findOne(query, elems, options));\n\n// Generated using scripts/write-decode-map.ts\nconst htmlDecodeTree = /* #__PURE__ */ new Uint16Array(\n// prettier-ignore\n/* #__PURE__ */ \"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n\n// Generated using scripts/write-decode-map.ts\nconst xmlDecodeTree = /* #__PURE__ */ new Uint16Array(\n// prettier-ignore\n/* #__PURE__ */ \"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n\n// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nconst fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 65535) {\n        codePoint -= 65536;\n        output += String.fromCharCode(((codePoint >>> 10) & 1023) | 55296);\n        codePoint = 56320 | (codePoint & 1023);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nfunction replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 55296 && codePoint <= 57343) ||\n        codePoint > 1114111) {\n        return 65533;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n\nvar CharCodes$1;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes$1 || (CharCodes$1 = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 32;\nvar BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes$1.ZERO && code <= CharCodes$1.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes$1.UPPER_A && code <= CharCodes$1.UPPER_F) ||\n        (code >= CharCodes$1.LOWER_A && code <= CharCodes$1.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes$1.UPPER_A && code <= CharCodes$1.UPPER_Z) ||\n        (code >= CharCodes$1.LOWER_A && code <= CharCodes$1.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes$1.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nvar DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nclass EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(input, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (input.charCodeAt(offset) === CharCodes$1.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(input, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(input, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(input, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(input, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(input, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(input, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(input, offset) {\n        if (offset >= input.length) {\n            return -1;\n        }\n        if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes$1.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(input, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(input, offset);\n    }\n    addToNumericResult(input, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    Number.parseInt(input.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(input, offset) {\n        const startIndex = offset;\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(input, startIndex, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(input, startIndex, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(input, offset) {\n        const startIndex = offset;\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(input, startIndex, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(input, startIndex, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes$1.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes$1.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(input, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < input.length; offset++, this.excess++) {\n            const char = input.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes$1.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nfunction determineBranch(decodeTree, current, nodeIndex, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIndex + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIndex;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midValue = decodeTree[mid];\n        if (midValue < char) {\n            lo = mid + 1;\n        }\n        else if (midValue > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\n\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"BeforeSpecialT\"] = 23] = \"BeforeSpecialT\";\n    State[State[\"SpecialStartSequence\"] = 24] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 25] = \"InSpecialTag\";\n    State[State[\"InEntity\"] = 26] = \"InEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n    return (c === CharCodes.Space ||\n        c === CharCodes.NewLine ||\n        c === CharCodes.Tab ||\n        c === CharCodes.FormFeed ||\n        c === CharCodes.CarriageReturn);\n}\nfunction isEndOfTagSection(c) {\n    return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isASCIIAlpha(c) {\n    return ((c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n        (c >= CharCodes.UpperA && c <= CharCodes.UpperZ));\n}\nvar QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n    Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]), // CDATA[\n    CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]), // ]]>\n    CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]), // `-->`\n    ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]), // `</script`\n    StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]), // `</style`\n    TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n    TextareaEnd: new Uint8Array([\n        0x3c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61,\n    ]), // `</textarea`\n    XmpEnd: new Uint8Array([0x3c, 0x2f, 0x78, 0x6d, 0x70]), // `</xmp`\n};\nclass Tokenizer {\n    constructor({ xmlMode = false, decodeEntities = true, }, cbs) {\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */\n        this.state = State.Text;\n        /** The read buffer. */\n        this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */\n        this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */\n        this.index = 0;\n        /** The start of the last entity. */\n        this.entityStart = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n        this.baseState = State.Text;\n        /** For special parsing behavior inside of script and style tags. */\n        this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */\n        this.running = true;\n        /** The offset of the current buffer. */\n        this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityDecoder = new EntityDecoder(xmlMode ? xmlDecodeTree : htmlDecodeTree, (cp, consumed) => this.emitCodePoint(cp, consumed));\n    }\n    reset() {\n        this.state = State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running)\n            this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) {\n            this.parse();\n        }\n    }\n    stateText(c) {\n        if (c === CharCodes.Lt ||\n            (!this.decodeEntities && this.fastForwardTo(CharCodes.Lt))) {\n            if (this.index > this.sectionStart) {\n                this.cbs.ontext(this.sectionStart, this.index);\n            }\n            this.state = State.BeforeTagName;\n            this.sectionStart = this.index;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd\n            ? // If we are at the end of the sequence, make sure the tag name has ended\n                isEndOfTagSection(c)\n            : // Otherwise, do a case-insensitive comparison\n                (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) {\n            this.isSpecial = false;\n        }\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */\n    stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === CharCodes.Gt || isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n            this.sequenceIndex += 1;\n        }\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === Sequences.TitleEnd) {\n                // We have to parse entities in <title> tags.\n                if (this.decodeEntities && c === CharCodes.Amp) {\n                    this.startEntity();\n                }\n            }\n            else if (this.fastForwardTo(CharCodes.Lt)) {\n                // Outside of <title> tags, we can fast-forward.\n                this.sequenceIndex = 1;\n            }\n        }\n        else {\n            // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n            this.sequenceIndex = Number(c === CharCodes.Lt);\n        }\n    }\n    stateCDATASequence(c) {\n        if (c === Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === Sequences.Cdata.length) {\n                this.state = State.InCommentLike;\n                this.currentSequence = Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        }\n        else {\n            this.sequenceIndex = 0;\n            this.state = State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n    fastForwardTo(c) {\n        while (++this.index < this.buffer.length + this.offset) {\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n                return true;\n            }\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */\n        this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n    stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === Sequences.CdataEnd) {\n                    this.cbs.oncdata(this.sectionStart, this.index, 2);\n                }\n                else {\n                    this.cbs.oncomment(this.sectionStart, this.index, 2);\n                }\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = State.Text;\n            }\n        }\n        else if (this.sequenceIndex === 0) {\n            // Fast-forward to the first character of the sequence\n            if (this.fastForwardTo(this.currentSequence[0])) {\n                this.sequenceIndex = 1;\n            }\n        }\n        else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n            // Allow long sequences, eg. --->, ]]]>\n            this.sequenceIndex = 0;\n        }\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n    isTagStartChar(c) {\n        return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === CharCodes.ExclamationMark) {\n            this.state = State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Questionmark) {\n            this.state = State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        }\n        else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (this.xmlMode) {\n                this.state = State.InTagName;\n            }\n            else if (lower === Sequences.ScriptEnd[2]) {\n                this.state = State.BeforeSpecialS;\n            }\n            else if (lower === Sequences.TitleEnd[2] ||\n                lower === Sequences.XmpEnd[2]) {\n                this.state = State.BeforeSpecialT;\n            }\n            else {\n                this.state = State.InTagName;\n            }\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.BeforeClosingTagName;\n        }\n        else {\n            this.state = State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if (isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if (isWhitespace(c)) ;\n        else if (c === CharCodes.Gt) {\n            this.state = State.Text;\n        }\n        else {\n            this.state = this.isTagStartChar(c)\n                ? State.InClosingTagName\n                : State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = State.InSpecialTag;\n                this.sequenceIndex = 0;\n            }\n            else {\n                this.state = State.Text;\n            }\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.InSelfClosingTag;\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = this.index;\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === CharCodes.Eq) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n            this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (!isWhitespace(c)) {\n            this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === CharCodes.DoubleQuote) {\n            this.state = State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.SingleQuote) {\n            this.state = State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (!isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote ||\n            (!this.decodeEntities && this.fastForwardTo(quote))) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === CharCodes.DoubleQuote\n                ? QuoteType.Double\n                : QuoteType.Single, this.index + 1);\n            this.state = State.BeforeAttributeName;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if (isWhitespace(c) || c === CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(QuoteType.Unquoted, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateBeforeDeclaration(c) {\n        if (c === CharCodes.OpeningSquareBracket) {\n            this.state = State.CDATASequence;\n            this.sequenceIndex = 0;\n        }\n        else {\n            this.state =\n                c === CharCodes.Dash\n                    ? State.BeforeComment\n                    : State.InDeclaration;\n        }\n    }\n    stateInDeclaration(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === CharCodes.Dash) {\n            this.state = State.InCommentLike;\n            this.currentSequence = Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        }\n        else {\n            this.state = State.InDeclaration;\n        }\n    }\n    stateInSpecialComment(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.ScriptEnd[3]) {\n            this.startSpecial(Sequences.ScriptEnd, 4);\n        }\n        else if (lower === Sequences.StyleEnd[3]) {\n            this.startSpecial(Sequences.StyleEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    stateBeforeSpecialT(c) {\n        const lower = c | 0x20;\n        switch (lower) {\n            case Sequences.TitleEnd[3]: {\n                this.startSpecial(Sequences.TitleEnd, 4);\n                break;\n            }\n            case Sequences.TextareaEnd[3]: {\n                this.startSpecial(Sequences.TextareaEnd, 4);\n                break;\n            }\n            case Sequences.XmpEnd[3]: {\n                this.startSpecial(Sequences.XmpEnd, 4);\n                break;\n            }\n            default: {\n                this.state = State.InTagName;\n                this.stateInTagName(c); // Consume the token again\n            }\n        }\n    }\n    startEntity() {\n        this.baseState = this.state;\n        this.state = State.InEntity;\n        this.entityStart = this.index;\n        this.entityDecoder.startEntity(this.xmlMode\n            ? DecodingMode.Strict\n            : this.baseState === State.Text ||\n                this.baseState === State.InSpecialTag\n                ? DecodingMode.Legacy\n                : DecodingMode.Attribute);\n    }\n    stateInEntity() {\n        const length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n        // If `length` is positive, we are done with the entity.\n        if (length >= 0) {\n            this.state = this.baseState;\n            if (length === 0) {\n                this.index = this.entityStart;\n            }\n        }\n        else {\n            // Mark buffer as consumed.\n            this.index = this.offset + this.buffer.length - 1;\n        }\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n    cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === State.Text ||\n                (this.state === State.InSpecialTag && this.sequenceIndex === 0)) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n            else if (this.state === State.InAttributeValueDq ||\n                this.state === State.InAttributeValueSq ||\n                this.state === State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n    parse() {\n        while (this.shouldContinue()) {\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch (this.state) {\n                case State.Text: {\n                    this.stateText(c);\n                    break;\n                }\n                case State.SpecialStartSequence: {\n                    this.stateSpecialStartSequence(c);\n                    break;\n                }\n                case State.InSpecialTag: {\n                    this.stateInSpecialTag(c);\n                    break;\n                }\n                case State.CDATASequence: {\n                    this.stateCDATASequence(c);\n                    break;\n                }\n                case State.InAttributeValueDq: {\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                }\n                case State.InAttributeName: {\n                    this.stateInAttributeName(c);\n                    break;\n                }\n                case State.InCommentLike: {\n                    this.stateInCommentLike(c);\n                    break;\n                }\n                case State.InSpecialComment: {\n                    this.stateInSpecialComment(c);\n                    break;\n                }\n                case State.BeforeAttributeName: {\n                    this.stateBeforeAttributeName(c);\n                    break;\n                }\n                case State.InTagName: {\n                    this.stateInTagName(c);\n                    break;\n                }\n                case State.InClosingTagName: {\n                    this.stateInClosingTagName(c);\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.InAttributeValueSq: {\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.BeforeClosingTagName: {\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                }\n                case State.AfterClosingTagName: {\n                    this.stateAfterClosingTagName(c);\n                    break;\n                }\n                case State.BeforeSpecialS: {\n                    this.stateBeforeSpecialS(c);\n                    break;\n                }\n                case State.BeforeSpecialT: {\n                    this.stateBeforeSpecialT(c);\n                    break;\n                }\n                case State.InAttributeValueNq: {\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                }\n                case State.InSelfClosingTag: {\n                    this.stateInSelfClosingTag(c);\n                    break;\n                }\n                case State.InDeclaration: {\n                    this.stateInDeclaration(c);\n                    break;\n                }\n                case State.BeforeDeclaration: {\n                    this.stateBeforeDeclaration(c);\n                    break;\n                }\n                case State.BeforeComment: {\n                    this.stateBeforeComment(c);\n                    break;\n                }\n                case State.InProcessingInstruction: {\n                    this.stateInProcessingInstruction(c);\n                    break;\n                }\n                case State.InEntity: {\n                    this.stateInEntity();\n                    break;\n                }\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === State.InEntity) {\n            this.entityDecoder.end();\n            this.state = this.baseState;\n        }\n        this.handleTrailingData();\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */\n    handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        // If there is no remaining data, we are done.\n        if (this.sectionStart >= endIndex) {\n            return;\n        }\n        if (this.state === State.InCommentLike) {\n            if (this.currentSequence === Sequences.CdataEnd) {\n                this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            }\n            else {\n                this.cbs.oncomment(this.sectionStart, endIndex, 0);\n            }\n        }\n        else if (this.state === State.InTagName ||\n            this.state === State.BeforeAttributeName ||\n            this.state === State.BeforeAttributeValue ||\n            this.state === State.AfterAttributeName ||\n            this.state === State.InAttributeName ||\n            this.state === State.InAttributeValueSq ||\n            this.state === State.InAttributeValueDq ||\n            this.state === State.InAttributeValueNq ||\n            this.state === State.InClosingTagName) ;\n        else {\n            this.cbs.ontext(this.sectionStart, endIndex);\n        }\n    }\n    emitCodePoint(cp, consumed) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.onattribdata(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.onattribentity(cp);\n        }\n        else {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.ontext(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.ontextentity(cp, this.sectionStart);\n        }\n    }\n}\n\nconst formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\",\n]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([\n    [\"tr\", new Set([\"tr\", \"th\", \"td\"])],\n    [\"th\", new Set([\"th\"])],\n    [\"td\", new Set([\"thead\", \"th\", \"td\"])],\n    [\"body\", new Set([\"head\", \"link\", \"script\"])],\n    [\"li\", new Set([\"li\"])],\n    [\"p\", pTag],\n    [\"h1\", pTag],\n    [\"h2\", pTag],\n    [\"h3\", pTag],\n    [\"h4\", pTag],\n    [\"h5\", pTag],\n    [\"h6\", pTag],\n    [\"select\", formTags],\n    [\"input\", formTags],\n    [\"output\", formTags],\n    [\"button\", formTags],\n    [\"datalist\", formTags],\n    [\"textarea\", formTags],\n    [\"option\", new Set([\"option\"])],\n    [\"optgroup\", new Set([\"optgroup\", \"option\"])],\n    [\"dd\", ddtTags],\n    [\"dt\", ddtTags],\n    [\"address\", pTag],\n    [\"article\", pTag],\n    [\"aside\", pTag],\n    [\"blockquote\", pTag],\n    [\"details\", pTag],\n    [\"div\", pTag],\n    [\"dl\", pTag],\n    [\"fieldset\", pTag],\n    [\"figcaption\", pTag],\n    [\"figure\", pTag],\n    [\"footer\", pTag],\n    [\"form\", pTag],\n    [\"header\", pTag],\n    [\"hr\", pTag],\n    [\"main\", pTag],\n    [\"nav\", pTag],\n    [\"ol\", pTag],\n    [\"pre\", pTag],\n    [\"section\", pTag],\n    [\"table\", pTag],\n    [\"ul\", pTag],\n    [\"rt\", rtpTags],\n    [\"rp\", rtpTags],\n    [\"tbody\", tableSectionTags],\n    [\"tfoot\", tableSectionTags],\n]);\nconst voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\",\n]);\nconst reNameEnd = /\\s|\\//;\nclass Parser {\n    constructor(cbs, options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        this.options = options;\n        /** The start index of the last event. */\n        this.startIndex = 0;\n        /** The end index of the last event. */\n        this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */\n        this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */\n        this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */\n        this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.htmlMode = !this.options.xmlMode;\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : this.htmlMode;\n        this.lowerCaseAttributeNames =\n            (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : this.htmlMode;\n        this.recognizeSelfClosing =\n            (_c = options.recognizeSelfClosing) !== null && _c !== void 0 ? _c : !this.htmlMode;\n        this.tokenizer = new ((_d = options.Tokenizer) !== null && _d !== void 0 ? _d : Tokenizer)(this.options, this);\n        this.foreignContext = [!this.htmlMode];\n        (_f = (_e = this.cbs).onparserinit) === null || _f === void 0 ? void 0 : _f.call(_e, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */\n    ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */\n    ontextentity(cp, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n        this.startIndex = endIndex;\n    }\n    /**\n     * Checks if the current tag is a void element. Override this if you want\n     * to specify your own additional void elements.\n     */\n    isVoidElement(name) {\n        return this.htmlMode && voidElements.has(name);\n    }\n    /** @internal */\n    onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = this.htmlMode && openImpliesClose.get(name);\n        if (impliesClose) {\n            while (this.stack.length > 0 && impliesClose.has(this.stack[0])) {\n                const element = this.stack.shift();\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n            }\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.unshift(name);\n            if (this.htmlMode) {\n                if (foreignContextElements.has(name)) {\n                    this.foreignContext.unshift(true);\n                }\n                else if (htmlIntegrationElements.has(name)) {\n                    this.foreignContext.unshift(false);\n                }\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n        if (this.cbs.onopentag)\n            this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n            this.cbs.onclosetag(this.tagname, true);\n        }\n        this.tagname = \"\";\n    }\n    /** @internal */\n    onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        if (this.htmlMode &&\n            (foreignContextElements.has(name) ||\n                htmlIntegrationElements.has(name))) {\n            this.foreignContext.shift();\n        }\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.indexOf(name);\n            if (pos !== -1) {\n                for (let index = 0; index <= pos; index++) {\n                    const element = this.stack.shift();\n                    // We know the stack has sufficient elements.\n                    (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, index !== pos);\n                }\n            }\n            else if (this.htmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        }\n        else if (this.htmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\");\n            (_f = (_e = this.cbs).onopentag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", {}, true);\n            (_h = (_g = this.cbs).onclosetag) === null || _h === void 0 ? void 0 : _h.call(_g, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.recognizeSelfClosing || this.foreignContext[0]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        }\n        else {\n            // Ignore the fact that the tag is self-closing.\n            this.onopentagend(endIndex);\n        }\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[0] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n            this.stack.shift();\n        }\n    }\n    /** @internal */\n    onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames\n            ? name.toLowerCase()\n            : name;\n    }\n    /** @internal */\n    onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */\n    onattribentity(cp) {\n        this.attribvalue += fromCodePoint(cp);\n    }\n    /** @internal */\n    onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double\n            ? '\"'\n            : quote === QuoteType.Single\n                ? \"'\"\n                : quote === QuoteType.NoValue\n                    ? undefined\n                    : null);\n        if (this.attribs &&\n            !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n            this.attribs[this.attribname] = this.attribvalue;\n        }\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search(reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        return name;\n    }\n    /** @internal */\n    ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (!this.htmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n        }\n        else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for (let index = 0; index < this.stack.length; index++) {\n                this.cbs.onclosetag(this.stack[index], true);\n            }\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n    reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n        this.buffers.length = 0;\n        this.foreignContext.length = 0;\n        this.foreignContext.unshift(!this.htmlMode);\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n    parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while (start - this.bufferOffset >= this.buffers[0].length) {\n            this.shiftBuffer();\n        }\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while (end - this.bufferOffset > this.buffers[0].length) {\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n    write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n    end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk)\n            this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n    pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n    resume() {\n        this.tokenizer.resume();\n        while (this.tokenizer.running &&\n            this.writeIndex < this.buffers.length) {\n            this.tokenizer.write(this.buffers[this.writeIndex++]);\n        }\n        if (this.ended)\n            this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n    parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n    done(chunk) {\n        this.end(chunk);\n    }\n}\n\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n */\nfunction parseDocument(data, options) {\n    const handler = new DomHandler(undefined, options);\n    new Parser(handler, options).end(data);\n    return handler.root;\n}\n\nvar picocolors_browserExports = /*@__PURE__*/ requirePicocolors_browser();\nvar pc = /*@__PURE__*/getDefaultExportFromCjs(picocolors_browserExports);\n\nfunction parseStylesheet(stylesheet) {\n  return parse$2(stylesheet);\n}\nfunction serializeStylesheet(ast, options) {\n  const cssParts = [];\n  stringify(ast, (result, node, type) => {\n    if (node?.type === \"decl\" && node.value.includes(\"</style>\")) {\n      return;\n    }\n    if (!options.compress) {\n      cssParts.push(result);\n      return;\n    }\n    if (node?.type === \"comment\")\n      return;\n    if (node?.type === \"decl\") {\n      const prefix = node.prop + node.raws.between;\n      cssParts.push(result.replace(prefix, prefix.trim()));\n      return;\n    }\n    if (type === \"start\") {\n      if (node?.type === \"rule\" && node.selectors) {\n        if (node.selectors.length === 1) {\n          cssParts.push(node.selectors[0] ?? \"\", \"{\");\n        } else {\n          cssParts.push(node.selectors.join(\",\"), \"{\");\n        }\n      } else {\n        cssParts.push(result.trim());\n      }\n      return;\n    }\n    if (type === \"end\" && result === \"}\" && node?.raws?.semicolon) {\n      const lastItemIdx = cssParts.length - 2;\n      if (lastItemIdx >= 0 && cssParts[lastItemIdx]) {\n        cssParts[lastItemIdx] = cssParts[lastItemIdx].slice(0, -1);\n      }\n    }\n    cssParts.push(result.trim());\n  });\n  return cssParts.join(\"\");\n}\nfunction markOnly(predicate) {\n  return (rule) => {\n    const sel = \"selectors\" in rule ? rule.selectors : void 0;\n    if (predicate(rule) === false) {\n      rule.$$remove = true;\n    }\n    if (\"selectors\" in rule) {\n      rule.$$markedSelectors = rule.selectors;\n      rule.selectors = sel;\n    }\n    if (rule._other) {\n      rule._other.$$markedSelectors = rule._other.selectors;\n    }\n  };\n}\nfunction applyMarkedSelectors(rule) {\n  if (rule.$$markedSelectors) {\n    rule.selectors = rule.$$markedSelectors;\n  }\n  if (rule._other) {\n    applyMarkedSelectors(rule._other);\n  }\n}\nfunction walkStyleRules(node, iterator) {\n  if (!(\"nodes\" in node)) {\n    return;\n  }\n  node.nodes = node.nodes?.filter((rule) => {\n    if (hasNestedRules(rule)) {\n      walkStyleRules(rule, iterator);\n    }\n    rule._other = void 0;\n    rule.filterSelectors = filterSelectors;\n    return iterator(rule) !== false;\n  });\n}\nfunction walkStyleRulesWithReverseMirror(node, node2, iterator) {\n  if (!node2)\n    return walkStyleRules(node, iterator);\n  [node.nodes, node2.nodes] = splitFilter(\n    node.nodes,\n    node2.nodes,\n    (rule, index, _rules, rules2) => {\n      const rule2 = rules2?.[index];\n      if (hasNestedRules(rule)) {\n        walkStyleRulesWithReverseMirror(rule, rule2, iterator);\n      }\n      rule._other = rule2;\n      rule.filterSelectors = filterSelectors;\n      return iterator(rule) !== false;\n    }\n  );\n}\nfunction hasNestedRules(rule) {\n  return \"nodes\" in rule && !!rule.nodes?.length && (!(\"name\" in rule) || rule.name !== \"keyframes\" && rule.name !== \"-webkit-keyframes\") && rule.nodes.some((n) => n.type === \"rule\" || n.type === \"atrule\");\n}\nfunction splitFilter(a, b, predicate) {\n  const aOut = [];\n  const bOut = [];\n  for (let index = 0; index < a.length; index++) {\n    const item = a[index];\n    if (predicate(item, index, a, b)) {\n      aOut.push(item);\n    } else {\n      bOut.push(item);\n    }\n  }\n  return [aOut, bOut];\n}\nfunction filterSelectors(predicate) {\n  if (this._other) {\n    const [a, b] = splitFilter(\n      this.selectors,\n      this._other.selectors,\n      predicate\n    );\n    this.selectors = a;\n    this._other.selectors = b;\n  } else {\n    this.selectors = this.selectors.filter(predicate);\n  }\n}\nconst MEDIA_TYPES = /* @__PURE__ */ new Set([\"all\", \"print\", \"screen\", \"speech\"]);\nconst MEDIA_KEYWORDS = /* @__PURE__ */ new Set([\"and\", \"not\", \",\"]);\nconst MEDIA_FEATURES = new Set(\n  [\n    \"width\",\n    \"aspect-ratio\",\n    \"color\",\n    \"color-index\",\n    \"grid\",\n    \"height\",\n    \"monochrome\",\n    \"orientation\",\n    \"resolution\",\n    \"scan\"\n  ].flatMap((feature) => [feature, `min-${feature}`, `max-${feature}`])\n);\nfunction validateMediaType(node) {\n  const { type: nodeType, value: nodeValue } = node;\n  if (nodeType === \"media-type\") {\n    return MEDIA_TYPES.has(nodeValue);\n  } else if (nodeType === \"keyword\") {\n    return MEDIA_KEYWORDS.has(nodeValue);\n  } else if (nodeType === \"media-feature\") {\n    return MEDIA_FEATURES.has(nodeValue);\n  }\n}\nfunction validateMediaQuery(query) {\n  const mediaParserFn = \"default\" in mediaParser ? mediaParser.default : mediaParser;\n  const mediaTree = mediaParserFn(query);\n  const nodeTypes = /* @__PURE__ */ new Set([\"media-type\", \"keyword\", \"media-feature\"]);\n  const stack = [mediaTree];\n  while (stack.length > 0) {\n    const node = stack.pop();\n    if (nodeTypes.has(node.type) && !validateMediaType(node)) {\n      return false;\n    }\n    if (node.nodes) {\n      stack.push(...node.nodes);\n    }\n  }\n  return true;\n}\n\nlet classCache = null;\nlet idCache = null;\nfunction buildCache(container) {\n  classCache = /* @__PURE__ */ new Set();\n  idCache = /* @__PURE__ */ new Set();\n  const queue = [container];\n  while (queue.length) {\n    const node = queue.shift();\n    if (node.hasAttribute?.(\"class\")) {\n      const classList = node.getAttribute(\"class\").trim().split(\" \");\n      classList.forEach((cls) => {\n        classCache.add(cls);\n      });\n    }\n    if (node.hasAttribute?.(\"id\")) {\n      const id = node.getAttribute(\"id\").trim();\n      idCache.add(id);\n    }\n    if (\"children\" in node) {\n      queue.push(...node.children.filter((child) => child.type === \"tag\"));\n    }\n  }\n}\nfunction createDocument(html) {\n  const document = parseDocument(html, { decodeEntities: false });\n  extendDocument(document);\n  extendElement(Element.prototype);\n  let beastiesContainer = document.querySelector(\"[data-beasties-container]\");\n  if (!beastiesContainer) {\n    document.documentElement?.setAttribute(\"data-beasties-container\", \"\");\n    beastiesContainer = document.documentElement || document;\n  }\n  document.beastiesContainer = beastiesContainer;\n  buildCache(beastiesContainer);\n  return document;\n}\nfunction serializeDocument(document) {\n  return render(document, { decodeEntities: false });\n}\nlet extended = false;\nfunction extendElement(element) {\n  if (extended) {\n    return;\n  }\n  extended = true;\n  Object.defineProperties(element, {\n    nodeName: {\n      get() {\n        return this.tagName.toUpperCase();\n      }\n    },\n    id: {\n      get() {\n        return this.getAttribute(\"id\");\n      },\n      set(value) {\n        this.setAttribute(\"id\", value);\n      }\n    },\n    className: {\n      get() {\n        return this.getAttribute(\"class\");\n      },\n      set(value) {\n        this.setAttribute(\"class\", value);\n      }\n    },\n    insertBefore: {\n      value(child, referenceNode) {\n        if (!referenceNode)\n          return this.appendChild(child);\n        prepend(referenceNode, child);\n        return child;\n      }\n    },\n    appendChild: {\n      value(child) {\n        appendChild(this, child);\n        return child;\n      }\n    },\n    removeChild: {\n      value(child) {\n        removeElement(child);\n      }\n    },\n    remove: {\n      value() {\n        removeElement(this);\n      }\n    },\n    textContent: {\n      get() {\n        return getText(this);\n      },\n      set(text) {\n        this.children = [];\n        appendChild(this, new Text(text));\n      }\n    },\n    setAttribute: {\n      value(name, value) {\n        if (this.attribs == null)\n          this.attribs = {};\n        if (value == null)\n          value = \"\";\n        this.attribs[name] = value;\n      }\n    },\n    removeAttribute: {\n      value(name) {\n        if (this.attribs != null) {\n          delete this.attribs[name];\n        }\n      }\n    },\n    getAttribute: {\n      value(name) {\n        return this.attribs != null && this.attribs[name];\n      }\n    },\n    hasAttribute: {\n      value(name) {\n        return this.attribs != null && this.attribs[name] != null;\n      }\n    },\n    getAttributeNode: {\n      value(name) {\n        const value = this.getAttribute(name);\n        if (value != null)\n          return { specified: true, value };\n      }\n    },\n    exists: {\n      value(sel) {\n        return cachedQuerySelector(sel, this);\n      }\n    },\n    querySelector: {\n      value(sel) {\n        return selectOne(sel, this);\n      }\n    },\n    querySelectorAll: {\n      value(sel) {\n        return selectAll(sel, this);\n      }\n    }\n  });\n}\nfunction extendDocument(document) {\n  Object.defineProperties(document, {\n    // document is just an Element in htmlparser2, giving it a nodeType of ELEMENT_NODE.\n    // TODO: verify if these are needed for css-select\n    nodeType: {\n      get() {\n        return 9;\n      }\n    },\n    contentType: {\n      get() {\n        return \"text/html\";\n      }\n    },\n    nodeName: {\n      get() {\n        return \"#document\";\n      }\n    },\n    documentElement: {\n      get() {\n        return this.children.find(\n          (child) => \"tagName\" in child && String(child.tagName).toLowerCase() === \"html\"\n        );\n      }\n    },\n    head: {\n      get() {\n        return this.querySelector(\"head\");\n      }\n    },\n    body: {\n      get() {\n        return this.querySelector(\"body\");\n      }\n    },\n    createElement: {\n      value(name) {\n        return new Element(name, {});\n      }\n    },\n    createTextNode: {\n      value(text) {\n        return new Text(text);\n      }\n    },\n    exists: {\n      value(sel) {\n        return cachedQuerySelector(sel, this);\n      }\n    },\n    querySelector: {\n      value(sel) {\n        return selectOne(sel, this);\n      }\n    },\n    querySelectorAll: {\n      value(sel) {\n        if (sel === \":root\") {\n          return this;\n        }\n        return selectAll(sel, this);\n      }\n    }\n  });\n}\nconst selectorTokensCache = /* @__PURE__ */ new Map();\nfunction cachedQuerySelector(sel, node) {\n  let selectorTokens = selectorTokensCache.get(sel);\n  if (selectorTokens === void 0) {\n    selectorTokens = parseRelevantSelectors(sel);\n    selectorTokensCache.set(sel, selectorTokens);\n  }\n  if (selectorTokens) {\n    for (const token of selectorTokens) {\n      if (token.name === \"class\") {\n        return classCache.has(token.value);\n      }\n      if (token.name === \"id\") {\n        return idCache.has(token.value);\n      }\n    }\n  }\n  return !!selectOne(sel, node);\n}\nfunction parseRelevantSelectors(sel) {\n  const tokens = parse$1(sel);\n  const relevantTokens = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const tokenGroup = tokens[i];\n    if (tokenGroup?.length !== 1) {\n      continue;\n    }\n    const token = tokenGroup[0];\n    if (token?.type === \"attribute\" && (token.name === \"class\" || token.name === \"id\")) {\n      relevantTokens.push(token);\n    }\n  }\n  return relevantTokens.length > 0 ? relevantTokens : null;\n}\n\nconst LOG_LEVELS = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"silent\"];\nconst defaultLogger = {\n  trace(msg) {\n    console.trace(msg);\n  },\n  debug(msg) {\n    console.debug(msg);\n  },\n  warn(msg) {\n    console.warn(pc.yellow(msg));\n  },\n  error(msg) {\n    console.error(pc.bold(pc.red(msg)));\n  },\n  info(msg) {\n    console.info(pc.bold(pc.blue(msg)));\n  },\n  silent() {\n  }\n};\nfunction createLogger(logLevel) {\n  const logLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  return LOG_LEVELS.reduce((logger, type, index) => {\n    if (index >= logLevelIdx) {\n      logger[type] = defaultLogger[type];\n    } else {\n      logger[type] = defaultLogger.silent;\n    }\n    return logger;\n  }, {});\n}\nfunction isSubpath(basePath, currentPath) {\n  return !_pathModule.relative(basePath, currentPath).startsWith(\"..\");\n}\n\nconst removePseudoClassesAndElementsPattern = /(?<!\\\\)::?[a-z-]+(?:\\(.+\\))?/gi;\nconst implicitUniversalPattern = /([>+~])\\s*(?!\\1)([>+~])/g;\nconst emptyCombinatorPattern = /([>+~])\\s*(?=\\1|$)/g;\nconst removeTrailingCommasPattern = /\\(\\s*,|,\\s*\\)/g;\nclass Beasties {\n  #selectorCache = /* @__PURE__ */ new Map();\n  options;\n  logger;\n  fs;\n  constructor(options = {}) {\n    this.options = Object.assign({\n      logLevel: \"info\",\n      path: \"\",\n      publicPath: \"\",\n      reduceInlineStyles: true,\n      pruneSource: false,\n      additionalStylesheets: [],\n      allowRules: []\n    }, options);\n    this.logger = this.options.logger || createLogger(this.options.logLevel);\n  }\n  /**\n   * Read the contents of a file from the specified filesystem or disk\n   */\n  readFile(filename) {\n    const fs = this.fs;\n    return new Promise((resolve, reject) => {\n      const callback = (err, data) => {\n        if (err)\n          reject(err);\n        else resolve(data.toString());\n      };\n      if (fs && fs.readFile) {\n        fs.readFile(filename, callback);\n      } else {\n        readFile(filename, \"utf-8\", callback);\n      }\n    });\n  }\n  /**\n   * Write content to a file\n   */\n  writeFile(filename, data) {\n    const fs = this.fs;\n    return new Promise((resolve, reject) => {\n      const callback = (err) => {\n        if (err)\n          reject(err);\n        else resolve();\n      };\n      if (fs && fs.writeFile) {\n        fs.writeFile(filename, data, callback);\n      } else {\n        writeFile(filename, data, callback);\n      }\n    });\n  }\n  /**\n   * Apply critical CSS processing to the html\n   */\n  async process(html) {\n    const start = Date.now();\n    const document = createDocument(html);\n    if (this.options.additionalStylesheets.length > 0) {\n      await this.embedAdditionalStylesheet(document);\n    }\n    if (this.options.external !== false) {\n      const externalSheets = [...document.querySelectorAll('link[rel=\"stylesheet\"]')];\n      await Promise.all(\n        externalSheets.map((link) => this.embedLinkedStylesheet(link, document))\n      );\n    }\n    const styles = this.getAffectedStyleTags(document);\n    for (const style of styles) {\n      this.processStyle(style, document);\n    }\n    if (this.options.mergeStylesheets !== false && styles.length !== 0) {\n      this.mergeStylesheets(document);\n    }\n    const output = serializeDocument(document);\n    const end = Date.now();\n    this.logger.info?.(`Time ${end - start}ms`);\n    return output;\n  }\n  /**\n   * Get the style tags that need processing\n   */\n  getAffectedStyleTags(document) {\n    const styles = [...document.querySelectorAll(\"style\")];\n    if (this.options.reduceInlineStyles === false) {\n      return styles.filter((style) => style.$$external);\n    }\n    return styles;\n  }\n  mergeStylesheets(document) {\n    const styles = this.getAffectedStyleTags(document);\n    if (styles.length === 0) {\n      this.logger.warn?.(\n        \"Merging inline stylesheets into a single <style> tag skipped, no inline stylesheets to merge\"\n      );\n      return;\n    }\n    const first = styles[0];\n    let sheet = first.textContent;\n    for (let i = 1; i < styles.length; i++) {\n      const node = styles[i];\n      sheet += node.textContent;\n      node.remove();\n    }\n    first.textContent = sheet;\n  }\n  /**\n   * Given href, find the corresponding CSS asset\n   */\n  async getCssAsset(href, _style) {\n    const outputPath = this.options.path;\n    const publicPath = this.options.publicPath;\n    let normalizedPath = href.replace(/^\\//, \"\");\n    const pathPrefix = `${(publicPath || \"\").replace(/(^\\/|\\/$)/g, \"\")}/`;\n    if (normalizedPath.startsWith(pathPrefix)) {\n      normalizedPath = normalizedPath.substring(pathPrefix.length).replace(/^\\//, \"\");\n    }\n    if (/^https?:\\/\\//.test(normalizedPath) || href.startsWith(\"//\")) {\n      return void 0;\n    }\n    const filename = _pathModule.resolve(outputPath, normalizedPath);\n    if (!isSubpath(outputPath, filename)) {\n      return void 0;\n    }\n    let sheet;\n    try {\n      sheet = await this.readFile(filename);\n    } catch {\n      this.logger.warn?.(`Unable to locate stylesheet: ${filename}`);\n    }\n    return sheet;\n  }\n  checkInlineThreshold(link, style, sheet) {\n    if (this.options.inlineThreshold && sheet.length < this.options.inlineThreshold) {\n      const href = style.$$name;\n      style.$$reduce = false;\n      this.logger.info?.(\n        `\\x1B[32mInlined all of ${href} (${sheet.length} was below the threshold of ${this.options.inlineThreshold})\\x1B[39m`\n      );\n      link.remove();\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Inline the stylesheets from options.additionalStylesheets (assuming it passes `options.filter`)\n   */\n  async embedAdditionalStylesheet(document) {\n    const styleSheetsIncluded = [];\n    const sources = await Promise.all(\n      this.options.additionalStylesheets.map((cssFile) => {\n        if (styleSheetsIncluded.includes(cssFile)) {\n          return [];\n        }\n        styleSheetsIncluded.push(cssFile);\n        const style = document.createElement(\"style\");\n        style.$$external = true;\n        return this.getCssAsset(cssFile, style).then((sheet) => [sheet, style]);\n      })\n    );\n    for (const [sheet, style] of sources) {\n      if (sheet) {\n        style.textContent = sheet;\n        document.head.appendChild(style);\n      }\n    }\n  }\n  /**\n   * Inline the target stylesheet referred to by a <link rel=\"stylesheet\"> (assuming it passes `options.filter`)\n   */\n  async embedLinkedStylesheet(link, document) {\n    const href = link.getAttribute(\"href\");\n    if (!href?.endsWith(\".css\")) {\n      return void 0;\n    }\n    const style = document.createElement(\"style\");\n    style.$$external = true;\n    const sheet = await this.getCssAsset(href, style);\n    if (!sheet) {\n      return;\n    }\n    style.textContent = sheet;\n    style.$$name = href;\n    style.$$links = [link];\n    link.parentNode?.insertBefore(style, link);\n    if (this.checkInlineThreshold(link, style, sheet)) {\n      return;\n    }\n    let media = link.getAttribute(\"media\");\n    if (media && !validateMediaQuery(media)) {\n      media = void 0;\n    }\n    const preloadMode = this.options.preload;\n    let cssLoaderPreamble = \"function $loadcss(u,m,l){(l=document.createElement('link')).rel='stylesheet';l.href=u;document.head.appendChild(l)}\";\n    const lazy = preloadMode === \"js-lazy\";\n    if (lazy) {\n      cssLoaderPreamble = cssLoaderPreamble.replace(\n        \"l.href\",\n        \"l.media='print';l.onload=function(){l.media=m};l.href\"\n      );\n    }\n    if (preloadMode === false)\n      return;\n    let noscriptFallback = false;\n    let updateLinkToPreload = false;\n    const noscriptLink = link.cloneNode(false);\n    if (preloadMode === \"body\") {\n      document.body.appendChild(link);\n    } else {\n      if (preloadMode === \"js\" || preloadMode === \"js-lazy\") {\n        const script = document.createElement(\"script\");\n        script.setAttribute(\"data-href\", href);\n        script.setAttribute(\"data-media\", media || \"all\");\n        const js = `${cssLoaderPreamble}$loadcss(document.currentScript.dataset.href,document.currentScript.dataset.media)`;\n        script.textContent = js;\n        link.parentNode.insertBefore(script, link.nextSibling);\n        style.$$links.push(script);\n        cssLoaderPreamble = \"\";\n        noscriptFallback = true;\n        updateLinkToPreload = true;\n      } else if (preloadMode === \"media\") {\n        link.setAttribute(\"media\", \"print\");\n        link.setAttribute(\"onload\", `this.media='${media || \"all\"}'`);\n        noscriptFallback = true;\n      } else if (preloadMode === \"swap-high\") {\n        link.setAttribute(\"rel\", \"alternate stylesheet preload\");\n        link.setAttribute(\"title\", \"styles\");\n        link.setAttribute(\"onload\", `this.title='';this.rel='stylesheet'`);\n        noscriptFallback = true;\n      } else if (preloadMode === \"swap-low\") {\n        link.setAttribute(\"rel\", \"alternate stylesheet\");\n        link.setAttribute(\"title\", \"styles\");\n        link.setAttribute(\"onload\", `this.title='';this.rel='stylesheet'`);\n        noscriptFallback = true;\n      } else if (preloadMode === \"swap\") {\n        link.setAttribute(\"onload\", \"this.rel='stylesheet'\");\n        updateLinkToPreload = true;\n        noscriptFallback = true;\n      } else {\n        const bodyLink = link.cloneNode(false);\n        bodyLink.removeAttribute(\"id\");\n        document.body.appendChild(bodyLink);\n        style.$$links.push(bodyLink);\n        updateLinkToPreload = true;\n      }\n    }\n    if (this.options.noscriptFallback !== false && noscriptFallback && !href.includes(\"</noscript>\")) {\n      const noscript = document.createElement(\"noscript\");\n      noscriptLink.removeAttribute(\"id\");\n      noscript.appendChild(noscriptLink);\n      link.parentNode.insertBefore(noscript, link.nextSibling);\n      style.$$links.push(noscript);\n    }\n    if (updateLinkToPreload) {\n      link.setAttribute(\"rel\", \"preload\");\n      link.setAttribute(\"as\", \"style\");\n    }\n  }\n  /**\n   * Prune the source CSS files\n   */\n  pruneSource(style, before, sheetInverse) {\n    const minSize = this.options.minimumExternalSize;\n    const name = style.$$name;\n    const shouldInline = minSize && sheetInverse.length < minSize;\n    if (shouldInline) {\n      this.logger.info?.(\n        `\\x1B[32mInlined all of ${name} (non-critical external stylesheet would have been ${sheetInverse.length}b, which was below the threshold of ${minSize})\\x1B[39m`\n      );\n    }\n    if (shouldInline || !sheetInverse) {\n      style.textContent = before;\n      if (style.$$links) {\n        for (const link of style.$$links) {\n          const parent = link.parentNode;\n          parent?.removeChild(link);\n        }\n      }\n    }\n    return !!shouldInline;\n  }\n  /**\n   * Parse the stylesheet within a <style> element, then reduce it to contain only rules used by the document.\n   */\n  processStyle(style, document) {\n    if (style.$$reduce === false)\n      return;\n    const name = style.$$name ? style.$$name.replace(/^\\//, \"\") : \"inline CSS\";\n    const options = this.options;\n    const beastiesContainer = document.beastiesContainer;\n    let keyframesMode = options.keyframes ?? \"critical\";\n    if (keyframesMode === true)\n      keyframesMode = \"all\";\n    if (keyframesMode === false)\n      keyframesMode = \"none\";\n    let sheet = style.textContent;\n    const before = sheet;\n    if (!sheet)\n      return;\n    const ast = parseStylesheet(sheet);\n    const astInverse = options.pruneSource ? parseStylesheet(sheet) : null;\n    let criticalFonts = \"\";\n    const failedSelectors = [];\n    const criticalKeyframeNames = /* @__PURE__ */ new Set();\n    let includeNext = false;\n    let includeAll = false;\n    let excludeNext = false;\n    let excludeAll = false;\n    const shouldPreloadFonts = options.fonts === true || options.preloadFonts === true;\n    const shouldInlineFonts = options.fonts !== false && options.inlineFonts === true;\n    walkStyleRules(\n      ast,\n      markOnly((rule) => {\n        if (rule.type === \"comment\") {\n          const beastiesComment = rule.text.match(/^(?<!! )beasties:(.*)/);\n          const command = beastiesComment && beastiesComment[1];\n          if (command) {\n            switch (command) {\n              case \"include\":\n                includeNext = true;\n                break;\n              case \"exclude\":\n                excludeNext = true;\n                break;\n              case \"include start\":\n                includeAll = true;\n                break;\n              case \"include end\":\n                includeAll = false;\n                break;\n              case \"exclude start\":\n                excludeAll = true;\n                break;\n              case \"exclude end\":\n                excludeAll = false;\n                break;\n            }\n          }\n        }\n        if (rule.type === \"rule\") {\n          if (includeNext) {\n            includeNext = false;\n            return true;\n          }\n          if (excludeNext) {\n            excludeNext = false;\n            return false;\n          }\n          if (includeAll) {\n            return true;\n          }\n          if (excludeAll) {\n            return false;\n          }\n          rule.filterSelectors?.((sel) => {\n            const isAllowedRule = options.allowRules.some((exp) => {\n              if (exp instanceof RegExp) {\n                return exp.test(sel);\n              }\n              return exp === sel;\n            });\n            if (isAllowedRule)\n              return true;\n            if (sel === \":root\" || sel === \"html\" || sel === \"body\" || sel[0] === \":\" && /^::?(?:before|after)$/.test(sel)) {\n              return true;\n            }\n            sel = this.normalizeCssSelector(sel);\n            if (!sel)\n              return false;\n            try {\n              return beastiesContainer.exists(sel);\n            } catch (e) {\n              failedSelectors.push(`${sel} -> ${e.message || e.toString()}`);\n              return false;\n            }\n          });\n          if (!rule.selector) {\n            return false;\n          }\n          if (rule.nodes) {\n            for (const decl of rule.nodes) {\n              if (!(\"prop\" in decl)) {\n                continue;\n              }\n              if (shouldInlineFonts && /\\bfont(?:-family)?\\b/i.test(decl.prop)) {\n                criticalFonts += ` ${decl.value}`;\n              }\n              if (decl.prop === \"animation\" || decl.prop === \"animation-name\") {\n                for (const name2 of decl.value.split(/\\s+/)) {\n                  const nameTrimmed = name2.trim();\n                  if (nameTrimmed)\n                    criticalKeyframeNames.add(nameTrimmed);\n                }\n              }\n            }\n          }\n        }\n        if (rule.type === \"atrule\" && (rule.name === \"font-face\" || rule.name === \"layer\"))\n          return;\n        const hasRemainingRules = (\"nodes\" in rule && rule.nodes?.some((rule2) => !rule2.$$remove)) ?? true;\n        return hasRemainingRules;\n      })\n    );\n    if (failedSelectors.length !== 0) {\n      this.logger.warn?.(\n        `${failedSelectors.length} rules skipped due to selector errors:\n  ${failedSelectors.join(\"\\n  \")}`\n      );\n    }\n    const preloadedFonts = /* @__PURE__ */ new Set();\n    walkStyleRulesWithReverseMirror(ast, astInverse, (rule) => {\n      if (rule.$$remove === true)\n        return false;\n      if (\"selectors\" in rule) {\n        applyMarkedSelectors(rule);\n      }\n      if (rule.type === \"atrule\" && rule.name === \"keyframes\") {\n        if (keyframesMode === \"none\")\n          return false;\n        if (keyframesMode === \"all\")\n          return true;\n        return criticalKeyframeNames.has(rule.params);\n      }\n      if (rule.type === \"atrule\" && rule.name === \"font-face\") {\n        let family, src;\n        if (rule.nodes) {\n          for (const decl of rule.nodes) {\n            if (!(\"prop\" in decl)) {\n              continue;\n            }\n            if (decl.prop === \"src\") {\n              src = (decl.value.match(/url\\s*\\(\\s*(['\"]?)(.+?)\\1\\s*\\)/) || [])[2];\n            } else if (decl.prop === \"font-family\") {\n              family = decl.value;\n            }\n          }\n          if (src && shouldPreloadFonts && !preloadedFonts.has(src)) {\n            preloadedFonts.add(src);\n            const preload = document.createElement(\"link\");\n            preload.setAttribute(\"rel\", \"preload\");\n            preload.setAttribute(\"as\", \"font\");\n            preload.setAttribute(\"crossorigin\", \"anonymous\");\n            preload.setAttribute(\"href\", src.trim());\n            document.head.appendChild(preload);\n          }\n        }\n        if (!shouldInlineFonts || !family || !src || !criticalFonts.includes(family)) {\n          return false;\n        }\n      }\n    });\n    sheet = serializeStylesheet(ast, {\n      compress: this.options.compress !== false\n    });\n    if (sheet.trim().length === 0) {\n      if (style.parentNode) {\n        style.remove();\n      }\n      return;\n    }\n    let afterText = \"\";\n    let styleInlinedCompletely = false;\n    if (options.pruneSource) {\n      const sheetInverse = serializeStylesheet(astInverse, {\n        compress: this.options.compress !== false\n      });\n      styleInlinedCompletely = this.pruneSource(style, before, sheetInverse);\n      if (styleInlinedCompletely) {\n        const percent2 = sheetInverse.length / before.length * 100;\n        afterText = `, reducing non-inlined size ${percent2 | 0}% to ${formatSize(sheetInverse.length)}`;\n      }\n      const cssFilePath = _pathModule.resolve(this.options.path, name);\n      this.writeFile(cssFilePath, sheetInverse).then(() => this.logger.info?.(`${name} was successfully updated`)).catch((err) => this.logger.error?.(err));\n    }\n    if (!styleInlinedCompletely) {\n      style.textContent = sheet;\n    }\n    const percent = sheet.length / before.length * 100 | 0;\n    this.logger.info?.(\n      `\\x1B[32mInlined ${formatSize(sheet.length)} (${percent}% of original ${formatSize(before.length)}) of ${name}${afterText}.\\x1B[39m`\n    );\n  }\n  normalizeCssSelector(sel) {\n    let normalizedSelector = this.#selectorCache.get(sel);\n    if (normalizedSelector !== void 0) {\n      return normalizedSelector;\n    }\n    normalizedSelector = sel.replace(removePseudoClassesAndElementsPattern, \"\").replace(removeTrailingCommasPattern, (match) => match.includes(\"(\") ? \"(\" : \")\").replace(implicitUniversalPattern, \"$1 * $2\").replace(emptyCombinatorPattern, \"$1 *\").trim();\n    this.#selectorCache.set(sel, normalizedSelector);\n    return normalizedSelector;\n  }\n}\nfunction formatSize(size) {\n  if (size <= 0) {\n    return \"0 bytes\";\n  }\n  const abbreviations = [\"bytes\", \"kB\", \"MB\", \"GB\"];\n  const index = Math.floor(Math.log(size) / Math.log(1024));\n  const roundedSize = size / 1024 ** index;\n  const fractionDigits = index === 0 ? 0 : 2;\n  return `${roundedSize.toFixed(fractionDigits)} ${abbreviations[index]}`;\n}\n\nexport { Beasties as default };\n\n", "import { ɵConsole as _Console, ApplicationRef, InjectionToken, provideEnvironmentInitializer, inject, makeEnvironmentProviders, ɵENABLE_ROOT_COMPONENT_BOOTSTRAP as _ENABLE_ROOT_COMPONENT_BOOTSTRAP, Compiler, createEnvironmentInjector, EnvironmentInjector, runInInjectionContext, ɵresetCompiledComponents as _resetCompiledComponents, REQUEST, REQUEST_CONTEXT, RESPONSE_INIT, LOCALE_ID } from '@angular/core';\nimport { platformServer, INITIAL_CONFIG, ɵSERVER_CONTEXT as _SERVER_CONTEXT, ɵrenderInternal as _renderInternal, provideServerRendering as provideServerRendering$1 } from '@angular/platform-server';\nimport { ActivatedRoute, Router, ROUTES, ɵloadChildren as _loadChildren } from '@angular/router';\nimport { APP_BASE_HREF, PlatformLocation } from '@angular/common';\nimport Beasties from '../third_party/beasties/index.js';\n\n/**\n * Manages server-side assets.\n */\nclass ServerAssets {\n    manifest;\n    /**\n     * Creates an instance of ServerAsset.\n     *\n     * @param manifest - The manifest containing the server assets.\n     */\n    constructor(manifest) {\n        this.manifest = manifest;\n    }\n    /**\n     * Retrieves the content of a server-side asset using its path.\n     *\n     * @param path - The path to the server asset within the manifest.\n     * @returns The server asset associated with the provided path, as a `ServerAsset` object.\n     * @throws Error - Throws an error if the asset does not exist.\n     */\n    getServerAsset(path) {\n        const asset = this.manifest.assets[path];\n        if (!asset) {\n            throw new Error(`Server asset '${path}' does not exist.`);\n        }\n        return asset;\n    }\n    /**\n     * Checks if a specific server-side asset exists.\n     *\n     * @param path - The path to the server asset.\n     * @returns A boolean indicating whether the asset exists.\n     */\n    hasServerAsset(path) {\n        return !!this.manifest.assets[path];\n    }\n    /**\n     * Retrieves the asset for 'index.server.html'.\n     *\n     * @returns The `ServerAsset` object for 'index.server.html'.\n     * @throws Error - Throws an error if 'index.server.html' does not exist.\n     */\n    getIndexServerHtml() {\n        return this.getServerAsset('index.server.html');\n    }\n}\n\n/**\n * A set of log messages that should be ignored and not printed to the console.\n */\nconst IGNORED_LOGS = new Set(['Angular is running in development mode.']);\n/**\n * Custom implementation of the Angular Console service that filters out specific log messages.\n *\n * This class extends the internal Angular `ɵConsole` class to provide customized logging behavior.\n * It overrides the `log` method to suppress logs that match certain predefined messages.\n */\nclass Console extends _Console {\n    /**\n     * Logs a message to the console if it is not in the set of ignored messages.\n     *\n     * @param message - The message to log to the console.\n     *\n     * This method overrides the `log` method of the `ɵConsole` class. It checks if the\n     * message is in the `IGNORED_LOGS` set. If it is not, it delegates the logging to\n     * the parent class's `log` method. Otherwise, the message is suppressed.\n     */\n    log(message) {\n        if (!IGNORED_LOGS.has(message)) {\n            super.log(message);\n        }\n    }\n}\n\n/**\n * The Angular app manifest object.\n * This is used internally to store the current Angular app manifest.\n */\nlet angularAppManifest;\n/**\n * Sets the Angular app manifest.\n *\n * @param manifest - The manifest object to set for the Angular application.\n */\nfunction setAngularAppManifest(manifest) {\n    angularAppManifest = manifest;\n}\n/**\n * Gets the Angular app manifest.\n *\n * @returns The Angular app manifest.\n * @throws Will throw an error if the Angular app manifest is not set.\n */\nfunction getAngularAppManifest() {\n    if (!angularAppManifest) {\n        throw new Error('Angular app manifest is not set. ' +\n            `Please ensure you are using the '@angular/build:application' builder to build your server application.`);\n    }\n    return angularAppManifest;\n}\n/**\n * The Angular app engine manifest object.\n * This is used internally to store the current Angular app engine manifest.\n */\nlet angularAppEngineManifest;\n/**\n * Sets the Angular app engine manifest.\n *\n * @param manifest - The engine manifest object to set.\n */\nfunction setAngularAppEngineManifest(manifest) {\n    angularAppEngineManifest = manifest;\n}\n/**\n * Gets the Angular app engine manifest.\n *\n * @returns The Angular app engine manifest.\n * @throws Will throw an error if the Angular app engine manifest is not set.\n */\nfunction getAngularAppEngineManifest() {\n    if (!angularAppEngineManifest) {\n        throw new Error('Angular app engine manifest is not set. ' +\n            `Please ensure you are using the '@angular/build:application' builder to build your server application.`);\n    }\n    return angularAppEngineManifest;\n}\n\n/**\n * Removes the trailing slash from a URL if it exists.\n *\n * @param url - The URL string from which to remove the trailing slash.\n * @returns The URL string without a trailing slash.\n *\n * @example\n * ```js\n * stripTrailingSlash('path/'); // 'path'\n * stripTrailingSlash('/path');  // '/path'\n * stripTrailingSlash('/'); // '/'\n * stripTrailingSlash(''); // ''\n * ```\n */\n/**\n * Removes the leading slash from a URL if it exists.\n *\n * @param url - The URL string from which to remove the leading slash.\n * @returns The URL string without a leading slash.\n *\n * @example\n * ```js\n * stripLeadingSlash('/path'); // 'path'\n * stripLeadingSlash('/path/');  // 'path/'\n * stripLeadingSlash('/'); // '/'\n * stripLeadingSlash(''); // ''\n * ```\n */\nfunction stripLeadingSlash(url) {\n    // Check if the first character of the URL is a slash\n    return url.length > 1 && url[0] === '/' ? url.slice(1) : url;\n}\n/**\n * Adds a leading slash to a URL if it does not already have one.\n *\n * @param url - The URL string to which the leading slash will be added.\n * @returns The URL string with a leading slash.\n *\n * @example\n * ```js\n * addLeadingSlash('path'); // '/path'\n * addLeadingSlash('/path'); // '/path'\n * ```\n */\nfunction addLeadingSlash(url) {\n    // Check if the URL already starts with a slash\n    return url[0] === '/' ? url : `/${url}`;\n}\n/**\n * Adds a trailing slash to a URL if it does not already have one.\n *\n * @param url - The URL string to which the trailing slash will be added.\n * @returns The URL string with a trailing slash.\n *\n * @example\n * ```js\n * addTrailingSlash('path'); // 'path/'\n * addTrailingSlash('path/'); // 'path/'\n * ```\n */\nfunction addTrailingSlash(url) {\n    // Check if the URL already end with a slash\n    return url[url.length - 1] === '/' ? url : `${url}/`;\n}\n/**\n * Joins URL parts into a single URL string.\n *\n * This function takes multiple URL segments, normalizes them by removing leading\n * and trailing slashes where appropriate, and then joins them into a single URL.\n *\n * @param parts - The parts of the URL to join. Each part can be a string with or without slashes.\n * @returns The joined URL string, with normalized slashes.\n *\n * @example\n * ```js\n * joinUrlParts('path/', '/to/resource'); // '/path/to/resource'\n * joinUrlParts('/path/', 'to/resource'); // '/path/to/resource'\n * joinUrlParts('', ''); // '/'\n * ```\n */\nfunction joinUrlParts(...parts) {\n    const normalizeParts = [];\n    for (const part of parts) {\n        if (part === '') {\n            // Skip any empty parts\n            continue;\n        }\n        let normalizedPart = part;\n        if (part[0] === '/') {\n            normalizedPart = normalizedPart.slice(1);\n        }\n        if (part[part.length - 1] === '/') {\n            normalizedPart = normalizedPart.slice(0, -1);\n        }\n        if (normalizedPart !== '') {\n            normalizeParts.push(normalizedPart);\n        }\n    }\n    return addLeadingSlash(normalizeParts.join('/'));\n}\n/**\n * Strips `/index.html` from the end of a URL's path, if present.\n *\n * This function is used to convert URLs pointing to an `index.html` file into their directory\n * equivalents. For example, it transforms a URL like `http://www.example.com/page/index.html`\n * into `http://www.example.com/page`.\n *\n * @param url - The URL object to process.\n * @returns A new URL object with `/index.html` removed from the path, if it was present.\n *\n * @example\n * ```typescript\n * const originalUrl = new URL('http://www.example.com/page/index.html');\n * const cleanedUrl = stripIndexHtmlFromURL(originalUrl);\n * console.log(cleanedUrl.href); // Output: 'http://www.example.com/page'\n * ```\n */\nfunction stripIndexHtmlFromURL(url) {\n    if (url.pathname.endsWith('/index.html')) {\n        const modifiedURL = new URL(url);\n        // Remove '/index.html' from the pathname\n        modifiedURL.pathname = modifiedURL.pathname.slice(0, /** '/index.html'.length */ -11);\n        return modifiedURL;\n    }\n    return url;\n}\n/**\n * Resolves `*` placeholders in a path template by mapping them to corresponding segments\n * from a base path. This is useful for constructing paths dynamically based on a given base path.\n *\n * The function processes the `toPath` string, replacing each `*` placeholder with\n * the corresponding segment from the `fromPath`. If the `toPath` contains no placeholders,\n * it is returned as-is. Invalid `toPath` formats (not starting with `/`) will throw an error.\n *\n * @param toPath - A path template string that may contain `*` placeholders. Each `*` is replaced\n * by the corresponding segment from the `fromPath`. Static paths (e.g., `/static/path`) are returned\n * directly without placeholder replacement.\n * @param fromPath - A base path string, split into segments, that provides values for\n * replacing `*` placeholders in the `toPath`.\n * @returns A resolved path string with `*` placeholders replaced by segments from the `fromPath`,\n * or the `toPath` returned unchanged if it contains no placeholders.\n *\n * @throws If the `toPath` does not start with a `/`, indicating an invalid path format.\n *\n * @example\n * ```typescript\n * // Example with placeholders resolved\n * const resolvedPath = buildPathWithParams('/*\\/details', '/123/abc');\n * console.log(resolvedPath); // Outputs: '/123/details'\n *\n * // Example with a static path\n * const staticPath = buildPathWithParams('/static/path', '/base/unused');\n * console.log(staticPath); // Outputs: '/static/path'\n * ```\n */\nfunction buildPathWithParams(toPath, fromPath) {\n    if (toPath[0] !== '/') {\n        throw new Error(`Invalid toPath: The string must start with a '/'. Received: '${toPath}'`);\n    }\n    if (fromPath[0] !== '/') {\n        throw new Error(`Invalid fromPath: The string must start with a '/'. Received: '${fromPath}'`);\n    }\n    if (!toPath.includes('/*')) {\n        return toPath;\n    }\n    const fromPathParts = fromPath.split('/');\n    const toPathParts = toPath.split('/');\n    const resolvedParts = toPathParts.map((part, index) => toPathParts[index] === '*' ? fromPathParts[index] : part);\n    return joinUrlParts(...resolvedParts);\n}\n\n/**\n * Renders an Angular application or module to an HTML string.\n *\n * This function determines whether the provided `bootstrap` value is an Angular module\n * or a bootstrap function and invokes the appropriate rendering method (`renderModule` or `renderApplication`).\n *\n * @param html - The initial HTML document content.\n * @param bootstrap - An Angular module type or a function returning a promise that resolves to an `ApplicationRef`.\n * @param url - The application URL, used for route-based rendering in SSR.\n * @param platformProviders - An array of platform providers for the rendering process.\n * @param serverContext - A string representing the server context, providing additional metadata for SSR.\n * @returns A promise resolving to an object containing:\n *          - `hasNavigationError`: Indicates if a navigation error occurred.\n *          - `redirectTo`: (Optional) The redirect URL if a navigation redirect occurred.\n *          - `content`: A function returning a promise that resolves to the rendered HTML string.\n */\nasync function renderAngular(html, bootstrap, url, platformProviders, serverContext) {\n    // A request to `http://www.example.com/page/index.html` will render the Angular route corresponding to `http://www.example.com/page`.\n    const urlToRender = stripIndexHtmlFromURL(url).toString();\n    const platformRef = platformServer([\n        {\n            provide: INITIAL_CONFIG,\n            useValue: {\n                url: urlToRender,\n                document: html,\n            },\n        },\n        {\n            provide: _SERVER_CONTEXT,\n            useValue: serverContext,\n        },\n        {\n            // An Angular Console Provider that does not print a set of predefined logs.\n            provide: _Console,\n            // Using `useClass` would necessitate decorating `Console` with `@Injectable`,\n            // which would require switching from `ts_library` to `ng_module`. This change\n            // would also necessitate various patches of `@angular/bazel` to support ESM.\n            useFactory: () => new Console(),\n        },\n        ...platformProviders,\n    ]);\n    let redirectTo;\n    let hasNavigationError = true;\n    try {\n        let applicationRef;\n        if (isNgModule(bootstrap)) {\n            const moduleRef = await platformRef.bootstrapModule(bootstrap);\n            applicationRef = moduleRef.injector.get(ApplicationRef);\n        }\n        else {\n            applicationRef = await bootstrap({ platformRef });\n        }\n        // Block until application is stable.\n        await applicationRef.whenStable();\n        // TODO(alanagius): Find a way to avoid rendering here especially for redirects as any output will be discarded.\n        const envInjector = applicationRef.injector;\n        const routerIsProvided = !!envInjector.get(ActivatedRoute, null);\n        const router = envInjector.get(Router);\n        const lastSuccessfulNavigation = router.lastSuccessfulNavigation;\n        if (!routerIsProvided) {\n            hasNavigationError = false;\n        }\n        else if (lastSuccessfulNavigation?.finalUrl) {\n            hasNavigationError = false;\n            const { finalUrl, initialUrl } = lastSuccessfulNavigation;\n            const finalUrlStringified = finalUrl.toString();\n            if (initialUrl.toString() !== finalUrlStringified) {\n                const baseHref = envInjector.get(APP_BASE_HREF, null, { optional: true }) ??\n                    envInjector.get(PlatformLocation).getBaseHrefFromDOM();\n                redirectTo = joinUrlParts(baseHref, finalUrlStringified);\n            }\n        }\n        return {\n            hasNavigationError,\n            redirectTo,\n            content: () => new Promise((resolve, reject) => {\n                // Defer rendering to the next event loop iteration to avoid blocking, as most operations in `renderInternal` are synchronous.\n                setTimeout(() => {\n                    _renderInternal(platformRef, applicationRef)\n                        .then(resolve)\n                        .catch(reject)\n                        .finally(() => void asyncDestroyPlatform(platformRef));\n                }, 0);\n            }),\n        };\n    }\n    catch (error) {\n        await asyncDestroyPlatform(platformRef);\n        throw error;\n    }\n    finally {\n        if (hasNavigationError || redirectTo) {\n            void asyncDestroyPlatform(platformRef);\n        }\n    }\n}\n/**\n * Type guard to determine if a given value is an Angular module.\n * Angular modules are identified by the presence of the `ɵmod` static property.\n * This function helps distinguish between Angular modules and bootstrap functions.\n *\n * @param value - The value to be checked.\n * @returns True if the value is an Angular module (i.e., it has the `ɵmod` property), false otherwise.\n */\nfunction isNgModule(value) {\n    return 'ɵmod' in value;\n}\n/**\n * Gracefully destroys the application in a macrotask, allowing pending promises to resolve\n * and surfacing any potential errors to the user.\n *\n * @param platformRef - The platform reference to be destroyed.\n */\nfunction asyncDestroyPlatform(platformRef) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            if (!platformRef.destroyed) {\n                platformRef.destroy();\n            }\n            resolve();\n        }, 0);\n    });\n}\n\n/**\n * Creates a promise that resolves with the result of the provided `promise` or rejects with an\n * `AbortError` if the `AbortSignal` is triggered before the promise resolves.\n *\n * @param promise - The promise to monitor for completion.\n * @param signal - An `AbortSignal` used to monitor for an abort event. If the signal is aborted,\n *                 the returned promise will reject.\n * @param errorMessagePrefix - A custom message prefix to include in the error message when the operation is aborted.\n * @returns A promise that either resolves with the value of the provided `promise` or rejects with\n *          an `AbortError` if the `AbortSignal` is triggered.\n *\n * @throws {AbortError} If the `AbortSignal` is triggered before the `promise` resolves.\n */\nfunction promiseWithAbort(promise, signal, errorMessagePrefix) {\n    return new Promise((resolve, reject) => {\n        const abortHandler = () => {\n            reject(new DOMException(`${errorMessagePrefix} was aborted.\\n${signal.reason}`, 'AbortError'));\n        };\n        // Check for abort signal\n        if (signal.aborted) {\n            abortHandler();\n            return;\n        }\n        signal.addEventListener('abort', abortHandler, { once: true });\n        promise\n            .then(resolve)\n            .catch(reject)\n            .finally(() => {\n            signal.removeEventListener('abort', abortHandler);\n        });\n    });\n}\n\n/**\n * The internal path used for the app shell route.\n * @internal\n */\nconst APP_SHELL_ROUTE = 'ng-app-shell';\n/**\n * Identifies a particular kind of `ServerRenderingFeatureKind`.\n * @see {@link ServerRenderingFeature}\n */\nvar ServerRenderingFeatureKind;\n(function (ServerRenderingFeatureKind) {\n    ServerRenderingFeatureKind[ServerRenderingFeatureKind[\"AppShell\"] = 0] = \"AppShell\";\n    ServerRenderingFeatureKind[ServerRenderingFeatureKind[\"ServerRoutes\"] = 1] = \"ServerRoutes\";\n})(ServerRenderingFeatureKind || (ServerRenderingFeatureKind = {}));\n/**\n * Different rendering modes for server routes.\n * @see {@link withRoutes}\n * @see {@link ServerRoute}\n */\nvar RenderMode;\n(function (RenderMode) {\n    /** Server-Side Rendering (SSR) mode, where content is rendered on the server for each request. */\n    RenderMode[RenderMode[\"Server\"] = 0] = \"Server\";\n    /** Client-Side Rendering (CSR) mode, where content is rendered on the client side in the browser. */\n    RenderMode[RenderMode[\"Client\"] = 1] = \"Client\";\n    /** Static Site Generation (SSG) mode, where content is pre-rendered at build time and served as static files. */\n    RenderMode[RenderMode[\"Prerender\"] = 2] = \"Prerender\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Defines the fallback strategies for Static Site Generation (SSG) routes when a pre-rendered path is not available.\n * This is particularly relevant for routes with parameterized URLs where some paths might not be pre-rendered at build time.\n * @see {@link ServerRoutePrerenderWithParams}\n */\nvar PrerenderFallback;\n(function (PrerenderFallback) {\n    /**\n     * Fallback to Server-Side Rendering (SSR) if the pre-rendered path is not available.\n     * This strategy dynamically generates the page on the server at request time.\n     */\n    PrerenderFallback[PrerenderFallback[\"Server\"] = 0] = \"Server\";\n    /**\n     * Fallback to Client-Side Rendering (CSR) if the pre-rendered path is not available.\n     * This strategy allows the page to be rendered on the client side.\n     */\n    PrerenderFallback[PrerenderFallback[\"Client\"] = 1] = \"Client\";\n    /**\n     * No fallback; if the path is not pre-rendered, the server will not handle the request.\n     * This means the application will not provide any response for paths that are not pre-rendered.\n     */\n    PrerenderFallback[PrerenderFallback[\"None\"] = 2] = \"None\";\n})(PrerenderFallback || (PrerenderFallback = {}));\n/**\n * Token for providing the server routes configuration.\n * @internal\n */\nconst SERVER_ROUTES_CONFIG = new InjectionToken('SERVER_ROUTES_CONFIG');\n/**\n * Configures server-side routing for the application.\n *\n * This function registers an array of `ServerRoute` definitions, enabling server-side rendering\n * for specific URL paths. These routes are used to pre-render content on the server, improving\n * initial load performance and SEO.\n *\n * @param routes - An array of `ServerRoute` objects, each defining a server-rendered route.\n * @returns A `ServerRenderingFeature` object configuring server-side routes.\n *\n * @example\n * ```ts\n * import { provideServerRendering, withRoutes, ServerRoute, RenderMode } from '@angular/ssr';\n *\n * const serverRoutes: ServerRoute[] = [\n *   {\n *     route: '', // This renders the \"/\" route on the client (CSR)\n *     renderMode: RenderMode.Client,\n *   },\n *   {\n *     route: 'about', // This page is static, so we prerender it (SSG)\n *     renderMode: RenderMode.Prerender,\n *   },\n *   {\n *     route: 'profile', // This page requires user-specific data, so we use SSR\n *     renderMode: RenderMode.Server,\n *   },\n *   {\n *     route: '**', // All other routes will be rendered on the server (SSR)\n *     renderMode: RenderMode.Server,\n *   },\n * ];\n *\n * provideServerRendering(withRoutes(serverRoutes));\n * ```\n *\n * @see {@link provideServerRendering}\n * @see {@link ServerRoute}\n */\nfunction withRoutes(routes) {\n    const config = { routes };\n    return {\n        ɵkind: ServerRenderingFeatureKind.ServerRoutes,\n        ɵproviders: [\n            {\n                provide: SERVER_ROUTES_CONFIG,\n                useValue: config,\n            },\n        ],\n    };\n}\n/**\n * Configures the shell of the application.\n *\n * The app shell is a minimal, static HTML page that is served immediately, while the\n * full Angular application loads in the background. This improves perceived performance\n * by providing instant feedback to the user.\n *\n * This function configures the app shell route, which serves the provided component for\n * requests that do not match any defined server routes.\n *\n * @param component - The Angular component to render for the app shell. Can be a direct\n * component type or a dynamic import function.\n * @returns A `ServerRenderingFeature` object configuring the app shell.\n *\n * @example\n * ```ts\n * import { provideServerRendering, withAppShell, withRoutes } from '@angular/ssr';\n * import { AppShellComponent } from './app-shell.component';\n *\n * provideServerRendering(\n *   withRoutes(serverRoutes),\n *   withAppShell(AppShellComponent)\n * );\n * ```\n *\n * @example\n * ```ts\n * import { provideServerRendering, withAppShell, withRoutes } from '@angular/ssr';\n *\n * provideServerRendering(\n *   withRoutes(serverRoutes),\n *   withAppShell(() =>\n *     import('./app-shell.component').then((m) => m.AppShellComponent)\n *   )\n * );\n * ```\n *\n * @see {@link provideServerRendering}\n * @see {@link https://angular.dev/ecosystem/service-workers/app-shell App shell pattern on Angular.dev}\n */\nfunction withAppShell(component) {\n    const routeConfig = {\n        path: APP_SHELL_ROUTE,\n    };\n    if ('ɵcmp' in component) {\n        routeConfig.component = component;\n    }\n    else {\n        routeConfig.loadComponent = component;\n    }\n    return {\n        ɵkind: ServerRenderingFeatureKind.AppShell,\n        ɵproviders: [\n            {\n                provide: ROUTES,\n                useValue: routeConfig,\n                multi: true,\n            },\n            provideEnvironmentInitializer(() => {\n                const config = inject(SERVER_ROUTES_CONFIG);\n                config.appShellRoute = APP_SHELL_ROUTE;\n            }),\n        ],\n    };\n}\n/**\n * Configures server-side rendering for an Angular application.\n *\n * This function sets up the necessary providers for server-side rendering, including\n * support for server routes and app shell. It combines features configured using\n * `withRoutes` and `withAppShell` to provide a comprehensive server-side rendering setup.\n *\n * @param features - Optional features to configure additional server rendering behaviors.\n * @returns An `EnvironmentProviders` instance with the server-side rendering configuration.\n *\n * @example\n * Basic example of how you can enable server-side rendering in your application\n * when using the `bootstrapApplication` function:\n *\n * ```ts\n * import { bootstrapApplication, BootstrapContext } from '@angular/platform-browser';\n * import { provideServerRendering, withRoutes, withAppShell } from '@angular/ssr';\n * import { AppComponent } from './app/app.component';\n * import { SERVER_ROUTES } from './app/app.server.routes';\n * import { AppShellComponent } from './app/app-shell.component';\n *\n * const bootstrap = (context: BootstrapContext) =>\n *     bootstrapApplication(AppComponent, {\n *       providers: [\n *         provideServerRendering(\n *           withRoutes(SERVER_ROUTES),\n *           withAppShell(AppShellComponent),\n *         ),\n *       ],\n *     }, context);\n *\n * export default bootstrap;\n * ```\n * @see {@link withRoutes} configures server-side routing\n * @see {@link withAppShell} configures the application shell\n */\nfunction provideServerRendering(...features) {\n    let hasAppShell = false;\n    let hasServerRoutes = false;\n    const providers = [provideServerRendering$1()];\n    for (const { ɵkind, ɵproviders } of features) {\n        hasAppShell ||= ɵkind === ServerRenderingFeatureKind.AppShell;\n        hasServerRoutes ||= ɵkind === ServerRenderingFeatureKind.ServerRoutes;\n        providers.push(...ɵproviders);\n    }\n    if (!hasServerRoutes && hasAppShell) {\n        throw new Error(`Configuration error: found 'withAppShell()' without 'withRoutes()' in the same call to 'provideServerRendering()'.` +\n            `The 'withAppShell()' function requires 'withRoutes()' to be used.`);\n    }\n    return makeEnvironmentProviders(providers);\n}\n\n/**\n * A route tree implementation that supports efficient route matching, including support for wildcard routes.\n * This structure is useful for organizing and retrieving routes in a hierarchical manner,\n * enabling complex routing scenarios with nested paths.\n *\n * @typeParam AdditionalMetadata - Type of additional metadata that can be associated with route nodes.\n */\nclass RouteTree {\n    /**\n     * The root node of the route tree.\n     * All routes are stored and accessed relative to this root node.\n     */\n    root = this.createEmptyRouteTreeNode();\n    /**\n     * Inserts a new route into the route tree.\n     * The route is broken down into segments, and each segment is added to the tree.\n     * Parameterized segments (e.g., :id) are normalized to wildcards (*) for matching purposes.\n     *\n     * @param route - The route path to insert into the tree.\n     * @param metadata - Metadata associated with the route, excluding the route path itself.\n     */\n    insert(route, metadata) {\n        let node = this.root;\n        const segments = this.getPathSegments(route);\n        const normalizedSegments = [];\n        for (const segment of segments) {\n            // Replace parameterized segments (e.g., :id) with a wildcard (*) for matching\n            const normalizedSegment = segment[0] === ':' ? '*' : segment;\n            let childNode = node.children.get(normalizedSegment);\n            if (!childNode) {\n                childNode = this.createEmptyRouteTreeNode();\n                node.children.set(normalizedSegment, childNode);\n            }\n            node = childNode;\n            normalizedSegments.push(normalizedSegment);\n        }\n        // At the leaf node, store the full route and its associated metadata\n        node.metadata = {\n            ...metadata,\n            route: addLeadingSlash(normalizedSegments.join('/')),\n        };\n    }\n    /**\n     * Matches a given route against the route tree and returns the best matching route's metadata.\n     * The best match is determined by the lowest insertion index, meaning the earliest defined route\n     * takes precedence.\n     *\n     * @param route - The route path to match against the route tree.\n     * @returns The metadata of the best matching route or `undefined` if no match is found.\n     */\n    match(route) {\n        const segments = this.getPathSegments(route);\n        return this.traverseBySegments(segments)?.metadata;\n    }\n    /**\n     * Converts the route tree into a serialized format representation.\n     * This method converts the route tree into an array of metadata objects that describe the structure of the tree.\n     * The array represents the routes in a nested manner where each entry includes the route and its associated metadata.\n     *\n     * @returns An array of `RouteTreeNodeMetadata` objects representing the route tree structure.\n     *          Each object includes the `route` and associated metadata of a route.\n     */\n    toObject() {\n        return Array.from(this.traverse());\n    }\n    /**\n     * Constructs a `RouteTree` from an object representation.\n     * This method is used to recreate a `RouteTree` instance from an array of metadata objects.\n     * The array should be in the format produced by `toObject`, allowing for the reconstruction of the route tree\n     * with the same routes and metadata.\n     *\n     * @param value - An array of `RouteTreeNodeMetadata` objects that represent the serialized format of the route tree.\n     *                Each object should include a `route` and its associated metadata.\n     * @returns A new `RouteTree` instance constructed from the provided metadata objects.\n     */\n    static fromObject(value) {\n        const tree = new RouteTree();\n        for (const { route, ...metadata } of value) {\n            tree.insert(route, metadata);\n        }\n        return tree;\n    }\n    /**\n     * A generator function that recursively traverses the route tree and yields the metadata of each node.\n     * This allows for easy and efficient iteration over all nodes in the tree.\n     *\n     * @param node - The current node to start the traversal from. Defaults to the root node of the tree.\n     */\n    *traverse(node = this.root) {\n        if (node.metadata) {\n            yield node.metadata;\n        }\n        for (const childNode of node.children.values()) {\n            yield* this.traverse(childNode);\n        }\n    }\n    /**\n     * Extracts the path segments from a given route string.\n     *\n     * @param route - The route string from which to extract segments.\n     * @returns An array of path segments.\n     */\n    getPathSegments(route) {\n        return route.split('/').filter(Boolean);\n    }\n    /**\n     * Recursively traverses the route tree from a given node, attempting to match the remaining route segments.\n     * If the node is a leaf node (no more segments to match) and contains metadata, the node is yielded.\n     *\n     * This function prioritizes exact segment matches first, followed by wildcard matches (`*`),\n     * and finally deep wildcard matches (`**`) that consume all segments.\n     *\n     * @param segments - The array of route path segments to match against the route tree.\n     * @param node - The current node in the route tree to start traversal from. Defaults to the root node.\n     * @param currentIndex - The index of the segment in `remainingSegments` currently being matched.\n     * Defaults to `0` (the first segment).\n     *\n     * @returns The node that best matches the remaining segments or `undefined` if no match is found.\n     */\n    traverseBySegments(segments, node = this.root, currentIndex = 0) {\n        if (currentIndex >= segments.length) {\n            return node.metadata ? node : node.children.get('**');\n        }\n        if (!node.children.size) {\n            return undefined;\n        }\n        const segment = segments[currentIndex];\n        // 1. Attempt exact match with the current segment.\n        const exactMatch = node.children.get(segment);\n        if (exactMatch) {\n            const match = this.traverseBySegments(segments, exactMatch, currentIndex + 1);\n            if (match) {\n                return match;\n            }\n        }\n        // 2. Attempt wildcard match ('*').\n        const wildcardMatch = node.children.get('*');\n        if (wildcardMatch) {\n            const match = this.traverseBySegments(segments, wildcardMatch, currentIndex + 1);\n            if (match) {\n                return match;\n            }\n        }\n        // 3. Attempt double wildcard match ('**').\n        return node.children.get('**');\n    }\n    /**\n     * Creates an empty route tree node.\n     * This helper function is used during the tree construction.\n     *\n     * @returns A new, empty route tree node.\n     */\n    createEmptyRouteTreeNode() {\n        return {\n            children: new Map(),\n        };\n    }\n}\n\n/**\n * The maximum number of module preload link elements that should be added for\n * initial scripts.\n */\nconst MODULE_PRELOAD_MAX = 10;\n/**\n * Regular expression to match a catch-all route pattern in a URL path,\n * specifically one that ends with '/**'.\n */\nconst CATCH_ALL_REGEXP = /\\/(\\*\\*)$/;\n/**\n * Regular expression to match segments preceded by a colon in a string.\n */\nconst URL_PARAMETER_REGEXP = /(?<!\\\\):([^/]+)/g;\n/**\n * An set of HTTP status codes that are considered valid for redirect responses.\n */\nconst VALID_REDIRECT_RESPONSE_CODES = new Set([301, 302, 303, 307, 308]);\n/**\n * Handles a single route within the route tree and yields metadata or errors.\n *\n * @param options - Configuration options for handling the route.\n * @returns An async iterable iterator yielding `RouteTreeNodeMetadata` or an error object.\n */\nasync function* handleRoute(options) {\n    try {\n        const { metadata, currentRoutePath, route, compiler, parentInjector, serverConfigRouteTree, entryPointToBrowserMapping, invokeGetPrerenderParams, includePrerenderFallbackRoutes, } = options;\n        const { redirectTo, loadChildren, loadComponent, children, ɵentryName } = route;\n        if (ɵentryName && loadComponent) {\n            appendPreloadToMetadata(ɵentryName, entryPointToBrowserMapping, metadata);\n        }\n        if (metadata.renderMode === RenderMode.Prerender) {\n            yield* handleSSGRoute(serverConfigRouteTree, typeof redirectTo === 'string' ? redirectTo : undefined, metadata, parentInjector, invokeGetPrerenderParams, includePrerenderFallbackRoutes);\n        }\n        else if (redirectTo !== undefined) {\n            if (metadata.status && !VALID_REDIRECT_RESPONSE_CODES.has(metadata.status)) {\n                yield {\n                    error: `The '${metadata.status}' status code is not a valid redirect response code. ` +\n                        `Please use one of the following redirect response codes: ${[...VALID_REDIRECT_RESPONSE_CODES.values()].join(', ')}.`,\n                };\n            }\n            else if (typeof redirectTo === 'string') {\n                yield {\n                    ...metadata,\n                    redirectTo: resolveRedirectTo(metadata.route, redirectTo),\n                };\n            }\n            else {\n                yield metadata;\n            }\n        }\n        else {\n            yield metadata;\n        }\n        // Recursively process child routes\n        if (children?.length) {\n            yield* traverseRoutesConfig({\n                ...options,\n                routes: children,\n                parentRoute: currentRoutePath,\n                parentPreloads: metadata.preload,\n            });\n        }\n        // Load and process lazy-loaded child routes\n        if (loadChildren) {\n            if (ɵentryName) {\n                appendPreloadToMetadata(ɵentryName, entryPointToBrowserMapping, metadata);\n            }\n            const routeInjector = route.providers\n                ? createEnvironmentInjector(route.providers, parentInjector.get(EnvironmentInjector), `Route: ${route.path}`)\n                : parentInjector;\n            const loadedChildRoutes = await _loadChildren(route, compiler, routeInjector).toPromise();\n            if (loadedChildRoutes) {\n                const { routes: childRoutes, injector = routeInjector } = loadedChildRoutes;\n                yield* traverseRoutesConfig({\n                    ...options,\n                    routes: childRoutes,\n                    parentInjector: injector,\n                    parentRoute: currentRoutePath,\n                    parentPreloads: metadata.preload,\n                });\n            }\n        }\n    }\n    catch (error) {\n        yield {\n            error: `Error in handleRoute for '${options.currentRoutePath}': ${error.message}`,\n        };\n    }\n}\n/**\n * Traverses an array of route configurations to generate route tree node metadata.\n *\n * This function processes each route and its children, handling redirects, SSG (Static Site Generation) settings,\n * and lazy-loaded routes. It yields route metadata for each route and its potential variants.\n *\n * @param options - The configuration options for traversing routes.\n * @returns An async iterable iterator yielding either route tree node metadata or an error object with an error message.\n */\nasync function* traverseRoutesConfig(options) {\n    const { routes: routeConfigs, parentPreloads, parentRoute, serverConfigRouteTree } = options;\n    for (const route of routeConfigs) {\n        const { matcher, path = matcher ? '**' : '' } = route;\n        const currentRoutePath = joinUrlParts(parentRoute, path);\n        if (matcher && serverConfigRouteTree) {\n            let foundMatch = false;\n            for (const matchedMetaData of serverConfigRouteTree.traverse()) {\n                if (!matchedMetaData.route.startsWith(currentRoutePath)) {\n                    continue;\n                }\n                foundMatch = true;\n                matchedMetaData.presentInClientRouter = true;\n                if (matchedMetaData.renderMode === RenderMode.Prerender) {\n                    yield {\n                        error: `The route '${stripLeadingSlash(currentRoutePath)}' is set for prerendering but has a defined matcher. ` +\n                            `Routes with matchers cannot use prerendering. Please specify a different 'renderMode'.`,\n                    };\n                    continue;\n                }\n                yield* handleRoute({\n                    ...options,\n                    currentRoutePath,\n                    route,\n                    metadata: {\n                        ...matchedMetaData,\n                        preload: parentPreloads,\n                        route: matchedMetaData.route,\n                        presentInClientRouter: undefined,\n                    },\n                });\n            }\n            if (!foundMatch) {\n                yield {\n                    error: `The route '${stripLeadingSlash(currentRoutePath)}' has a defined matcher but does not ` +\n                        'match any route in the server routing configuration. Please ensure this route is added to the server routing configuration.',\n                };\n            }\n            continue;\n        }\n        let matchedMetaData;\n        if (serverConfigRouteTree) {\n            matchedMetaData = serverConfigRouteTree.match(currentRoutePath);\n            if (!matchedMetaData) {\n                yield {\n                    error: `The '${stripLeadingSlash(currentRoutePath)}' route does not match any route defined in the server routing configuration. ` +\n                        'Please ensure this route is added to the server routing configuration.',\n                };\n                continue;\n            }\n            matchedMetaData.presentInClientRouter = true;\n        }\n        yield* handleRoute({\n            ...options,\n            metadata: {\n                renderMode: RenderMode.Prerender,\n                ...matchedMetaData,\n                preload: parentPreloads,\n                // Match Angular router behavior\n                // ['one', 'two', ''] -> 'one/two/'\n                // ['one', 'two', 'three'] -> 'one/two/three'\n                route: path === '' ? addTrailingSlash(currentRoutePath) : currentRoutePath,\n                presentInClientRouter: undefined,\n            },\n            currentRoutePath,\n            route,\n        });\n    }\n}\n/**\n * Appends preload information to the metadata object based on the specified entry-point and chunk mappings.\n *\n * This function extracts preload data for a given entry-point from the provided chunk mappings. It adds the\n * corresponding browser bundles to the metadata's preload list, ensuring no duplicates and limiting the total\n * preloads to a predefined maximum.\n */\nfunction appendPreloadToMetadata(entryName, entryPointToBrowserMapping, metadata) {\n    const existingPreloads = metadata.preload ?? [];\n    if (!entryPointToBrowserMapping || existingPreloads.length >= MODULE_PRELOAD_MAX) {\n        return;\n    }\n    const preload = entryPointToBrowserMapping[entryName];\n    if (!preload?.length) {\n        return;\n    }\n    // Merge existing preloads with new ones, ensuring uniqueness and limiting the total to the maximum allowed.\n    const combinedPreloads = new Set(existingPreloads);\n    for (const href of preload) {\n        combinedPreloads.add(href);\n        if (combinedPreloads.size === MODULE_PRELOAD_MAX) {\n            break;\n        }\n    }\n    metadata.preload = Array.from(combinedPreloads);\n}\n/**\n * Handles SSG (Static Site Generation) routes by invoking `getPrerenderParams` and yielding\n * all parameterized paths, returning any errors encountered.\n *\n * @param serverConfigRouteTree - The tree representing the server's routing setup.\n * @param redirectTo - Optional path to redirect to, if specified.\n * @param metadata - The metadata associated with the route tree node.\n * @param parentInjector - The dependency injection container for the parent route.\n * @param invokeGetPrerenderParams - A flag indicating whether to invoke the `getPrerenderParams` function.\n * @param includePrerenderFallbackRoutes - A flag indicating whether to include fallback routes in the result.\n * @returns An async iterable iterator that yields route tree node metadata for each SSG path or errors.\n */\nasync function* handleSSGRoute(serverConfigRouteTree, redirectTo, metadata, parentInjector, invokeGetPrerenderParams, includePrerenderFallbackRoutes) {\n    if (metadata.renderMode !== RenderMode.Prerender) {\n        throw new Error(`'handleSSGRoute' was called for a route which rendering mode is not prerender.`);\n    }\n    const { route: currentRoutePath, fallback, ...meta } = metadata;\n    const getPrerenderParams = 'getPrerenderParams' in meta ? meta.getPrerenderParams : undefined;\n    if ('getPrerenderParams' in meta) {\n        delete meta['getPrerenderParams'];\n    }\n    if (redirectTo !== undefined) {\n        meta.redirectTo = resolveRedirectTo(currentRoutePath, redirectTo);\n    }\n    const isCatchAllRoute = CATCH_ALL_REGEXP.test(currentRoutePath);\n    if ((isCatchAllRoute && !getPrerenderParams) ||\n        (!isCatchAllRoute && !URL_PARAMETER_REGEXP.test(currentRoutePath))) {\n        // Route has no parameters\n        yield {\n            ...meta,\n            route: currentRoutePath,\n        };\n        return;\n    }\n    if (invokeGetPrerenderParams) {\n        if (!getPrerenderParams) {\n            yield {\n                error: `The '${stripLeadingSlash(currentRoutePath)}' route uses prerendering and includes parameters, but 'getPrerenderParams' ` +\n                    `is missing. Please define 'getPrerenderParams' function for this route in your server routing configuration ` +\n                    `or specify a different 'renderMode'.`,\n            };\n            return;\n        }\n        if (serverConfigRouteTree) {\n            // Automatically resolve dynamic parameters for nested routes.\n            const catchAllRoutePath = isCatchAllRoute\n                ? currentRoutePath\n                : joinUrlParts(currentRoutePath, '**');\n            const match = serverConfigRouteTree.match(catchAllRoutePath);\n            if (match && match.renderMode === RenderMode.Prerender && !('getPrerenderParams' in match)) {\n                serverConfigRouteTree.insert(catchAllRoutePath, {\n                    ...match,\n                    presentInClientRouter: true,\n                    getPrerenderParams,\n                });\n            }\n        }\n        const parameters = await runInInjectionContext(parentInjector, () => getPrerenderParams());\n        try {\n            for (const params of parameters) {\n                const replacer = handlePrerenderParamsReplacement(params, currentRoutePath);\n                const routeWithResolvedParams = currentRoutePath\n                    .replace(URL_PARAMETER_REGEXP, replacer)\n                    .replace(CATCH_ALL_REGEXP, replacer);\n                yield {\n                    ...meta,\n                    route: routeWithResolvedParams,\n                    redirectTo: redirectTo === undefined\n                        ? undefined\n                        : resolveRedirectTo(routeWithResolvedParams, redirectTo),\n                };\n            }\n        }\n        catch (error) {\n            yield { error: `${error.message}` };\n            return;\n        }\n    }\n    // Handle fallback render modes\n    if (includePrerenderFallbackRoutes &&\n        (fallback !== PrerenderFallback.None || !invokeGetPrerenderParams)) {\n        yield {\n            ...meta,\n            route: currentRoutePath,\n            renderMode: fallback === PrerenderFallback.Client ? RenderMode.Client : RenderMode.Server,\n        };\n    }\n}\n/**\n * Creates a replacer function used for substituting parameter placeholders in a route path\n * with their corresponding values provided in the `params` object.\n *\n * @param params - An object mapping parameter names to their string values.\n * @param currentRoutePath - The current route path, used for constructing error messages.\n * @returns A function that replaces a matched parameter placeholder (e.g., ':id') with its corresponding value.\n */\nfunction handlePrerenderParamsReplacement(params, currentRoutePath) {\n    return (match) => {\n        const parameterName = match.slice(1);\n        const value = params[parameterName];\n        if (typeof value !== 'string') {\n            throw new Error(`The 'getPrerenderParams' function defined for the '${stripLeadingSlash(currentRoutePath)}' route ` +\n                `returned a non-string value for parameter '${parameterName}'. ` +\n                `Please make sure the 'getPrerenderParams' function returns values for all parameters ` +\n                'specified in this route.');\n        }\n        return parameterName === '**' ? `/${value}` : value;\n    };\n}\n/**\n * Resolves the `redirectTo` property for a given route.\n *\n * This function processes the `redirectTo` property to ensure that it correctly\n * resolves relative to the current route path. If `redirectTo` is an absolute path,\n * it is returned as is. If it is a relative path, it is resolved based on the current route path.\n *\n * @param routePath - The current route path.\n * @param redirectTo - The target path for redirection.\n * @returns The resolved redirect path as a string.\n */\nfunction resolveRedirectTo(routePath, redirectTo) {\n    if (redirectTo[0] === '/') {\n        // If the redirectTo path is absolute, return it as is.\n        return redirectTo;\n    }\n    // Resolve relative redirectTo based on the current route path.\n    const segments = routePath.replace(URL_PARAMETER_REGEXP, '*').split('/');\n    segments.pop(); // Remove the last segment to make it relative.\n    return joinUrlParts(...segments, redirectTo);\n}\n/**\n * Builds a server configuration route tree from the given server routes configuration.\n *\n * @param serverRoutesConfig - The server routes to be used for configuration.\n\n * @returns An object containing:\n * - `serverConfigRouteTree`: A populated `RouteTree` instance, which organizes the server routes\n *   along with their additional metadata.\n * - `errors`: An array of strings that list any errors encountered during the route tree construction\n *   process, such as invalid paths.\n */\nfunction buildServerConfigRouteTree({ routes, appShellRoute }) {\n    const serverRoutes = [...routes];\n    if (appShellRoute !== undefined) {\n        serverRoutes.unshift({\n            path: appShellRoute,\n            renderMode: RenderMode.Prerender,\n        });\n    }\n    const serverConfigRouteTree = new RouteTree();\n    const errors = [];\n    for (const { path, ...metadata } of serverRoutes) {\n        if (path[0] === '/') {\n            errors.push(`Invalid '${path}' route configuration: the path cannot start with a slash.`);\n            continue;\n        }\n        if ('getPrerenderParams' in metadata && (path.includes('/*/') || path.endsWith('/*'))) {\n            errors.push(`Invalid '${path}' route configuration: 'getPrerenderParams' cannot be used with a '*' route.`);\n            continue;\n        }\n        serverConfigRouteTree.insert(path, metadata);\n    }\n    return { serverConfigRouteTree, errors };\n}\n/**\n * Retrieves routes from the given Angular application.\n *\n * This function initializes an Angular platform, bootstraps the application or module,\n * and retrieves routes from the Angular router configuration. It handles both module-based\n * and function-based bootstrapping. It yields the resulting routes as `RouteTreeNodeMetadata` objects or errors.\n *\n * @param bootstrap - A function that returns a promise resolving to an `ApplicationRef` or an Angular module to bootstrap.\n * @param document - The initial HTML document used for server-side rendering.\n * This document is necessary to render the application on the server.\n * @param url - The URL for server-side rendering. The URL is used to configure `ServerPlatformLocation`. This configuration is crucial\n * for ensuring that API requests for relative paths succeed, which is essential for accurate route extraction.\n * @param invokeGetPrerenderParams - A boolean flag indicating whether to invoke `getPrerenderParams` for parameterized SSG routes\n * to handle prerendering paths. Defaults to `false`.\n * @param includePrerenderFallbackRoutes - A flag indicating whether to include fallback routes in the result. Defaults to `true`.\n * @param entryPointToBrowserMapping - Maps the entry-point name to the associated JavaScript browser bundles.\n *\n * @returns A promise that resolves to an object of type `AngularRouterConfigResult` or errors.\n */\nasync function getRoutesFromAngularRouterConfig(bootstrap, document, url, invokeGetPrerenderParams = false, includePrerenderFallbackRoutes = true, entryPointToBrowserMapping = undefined) {\n    const { protocol, host } = url;\n    // Create and initialize the Angular platform for server-side rendering.\n    const platformRef = platformServer([\n        {\n            provide: INITIAL_CONFIG,\n            useValue: { document, url: `${protocol}//${host}/` },\n        },\n        {\n            // An Angular Console Provider that does not print a set of predefined logs.\n            provide: _Console,\n            // Using `useClass` would necessitate decorating `Console` with `@Injectable`,\n            // which would require switching from `ts_library` to `ng_module`. This change\n            // would also necessitate various patches of `@angular/bazel` to support ESM.\n            useFactory: () => new Console(),\n        },\n        {\n            provide: _ENABLE_ROOT_COMPONENT_BOOTSTRAP,\n            useValue: false,\n        },\n    ]);\n    try {\n        let applicationRef;\n        if (isNgModule(bootstrap)) {\n            const moduleRef = await platformRef.bootstrapModule(bootstrap);\n            applicationRef = moduleRef.injector.get(ApplicationRef);\n        }\n        else {\n            applicationRef = await bootstrap({ platformRef });\n        }\n        const injector = applicationRef.injector;\n        const router = injector.get(Router);\n        // Workaround to unblock navigation when `withEnabledBlockingInitialNavigation()` is used.\n        // This is necessary because route extraction disables component bootstrapping.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        router.navigationTransitions.afterPreactivation()?.next?.();\n        // Wait until the application is stable.\n        await applicationRef.whenStable();\n        const errors = [];\n        const rawBaseHref = injector.get(APP_BASE_HREF, null, { optional: true }) ??\n            injector.get(PlatformLocation).getBaseHrefFromDOM();\n        const { pathname: baseHref } = new URL(rawBaseHref, 'http://localhost');\n        const compiler = injector.get(Compiler);\n        const serverRoutesConfig = injector.get(SERVER_ROUTES_CONFIG, null, { optional: true });\n        let serverConfigRouteTree;\n        if (serverRoutesConfig) {\n            const result = buildServerConfigRouteTree(serverRoutesConfig);\n            serverConfigRouteTree = result.serverConfigRouteTree;\n            errors.push(...result.errors);\n        }\n        if (errors.length) {\n            return {\n                baseHref,\n                routes: [],\n                errors,\n            };\n        }\n        const routesResults = [];\n        if (router.config.length) {\n            // Retrieve all routes from the Angular router configuration.\n            const traverseRoutes = traverseRoutesConfig({\n                routes: router.config,\n                compiler,\n                parentInjector: injector,\n                parentRoute: '',\n                serverConfigRouteTree,\n                invokeGetPrerenderParams,\n                includePrerenderFallbackRoutes,\n                entryPointToBrowserMapping,\n            });\n            const seenRoutes = new Set();\n            for await (const routeMetadata of traverseRoutes) {\n                if ('error' in routeMetadata) {\n                    errors.push(routeMetadata.error);\n                    continue;\n                }\n                // If a result already exists for the exact same route, subsequent matches should be ignored.\n                // This aligns with Angular's app router behavior, which prioritizes the first route.\n                const routePath = routeMetadata.route;\n                if (!seenRoutes.has(routePath)) {\n                    routesResults.push(routeMetadata);\n                    seenRoutes.add(routePath);\n                }\n            }\n            // This timeout is necessary to prevent 'adev' from hanging in production builds.\n            // The exact cause is unclear, but removing it leads to the issue.\n            await new Promise((resolve) => setTimeout(resolve, 0));\n            if (serverConfigRouteTree) {\n                for (const { route, presentInClientRouter } of serverConfigRouteTree.traverse()) {\n                    if (presentInClientRouter || route.endsWith('/**')) {\n                        // Skip if matched or it's the catch-all route.\n                        continue;\n                    }\n                    errors.push(`The '${stripLeadingSlash(route)}' server route does not match any routes defined in the Angular ` +\n                        `routing configuration (typically provided as a part of the 'provideRouter' call). ` +\n                        'Please make sure that the mentioned server route is present in the Angular routing configuration.');\n                }\n            }\n        }\n        else {\n            const rootRouteMetadata = serverConfigRouteTree?.match('') ?? {\n                route: '',\n                renderMode: RenderMode.Prerender,\n            };\n            routesResults.push({\n                ...rootRouteMetadata,\n                // Matched route might be `/*` or `/**`, which would make Angular serve all routes rather than just `/`.\n                // So we limit to just `/` for the empty app router case.\n                route: '',\n            });\n        }\n        return {\n            baseHref,\n            routes: routesResults,\n            errors,\n            appShellRoute: serverRoutesConfig?.appShellRoute,\n        };\n    }\n    finally {\n        platformRef.destroy();\n    }\n}\n/**\n * Asynchronously extracts routes from the Angular application configuration\n * and creates a `RouteTree` to manage server-side routing.\n *\n * @param options - An object containing the following options:\n *  - `url`: The URL for server-side rendering. The URL is used to configure `ServerPlatformLocation`. This configuration is crucial\n *     for ensuring that API requests for relative paths succeed, which is essential for accurate route extraction.\n *     See:\n *      - https://github.com/angular/angular/blob/d608b857c689d17a7ffa33bbb510301014d24a17/packages/platform-server/src/location.ts#L51\n *      - https://github.com/angular/angular/blob/6882cc7d9eed26d3caeedca027452367ba25f2b9/packages/platform-server/src/http.ts#L44\n *  - `manifest`: An optional `AngularAppManifest` that contains the application's routing and configuration details.\n *     If not provided, the default manifest is retrieved using `getAngularAppManifest()`.\n *  - `invokeGetPrerenderParams`: A boolean flag indicating whether to invoke `getPrerenderParams` for parameterized SSG routes\n *     to handle prerendering paths. Defaults to `false`.\n *  - `includePrerenderFallbackRoutes`: A flag indicating whether to include fallback routes in the result. Defaults to `true`.\n *  - `signal`: An optional `AbortSignal` that can be used to abort the operation.\n *\n * @returns A promise that resolves to an object containing:\n *  - `routeTree`: A populated `RouteTree` containing all extracted routes from the Angular application.\n *  - `appShellRoute`: The specified route for the app-shell, if configured.\n *  - `errors`: An array of strings representing any errors encountered during the route extraction process.\n */\nfunction extractRoutesAndCreateRouteTree(options) {\n    const { url, manifest = getAngularAppManifest(), invokeGetPrerenderParams = false, includePrerenderFallbackRoutes = true, signal, } = options;\n    async function extract() {\n        const routeTree = new RouteTree();\n        const document = await new ServerAssets(manifest).getIndexServerHtml().text();\n        const bootstrap = await manifest.bootstrap();\n        const { baseHref, appShellRoute, routes, errors } = await getRoutesFromAngularRouterConfig(bootstrap, document, url, invokeGetPrerenderParams, includePrerenderFallbackRoutes, manifest.entryPointToBrowserMapping);\n        for (const { route, ...metadata } of routes) {\n            if (metadata.redirectTo !== undefined) {\n                metadata.redirectTo = joinUrlParts(baseHref, metadata.redirectTo);\n            }\n            // Remove undefined fields\n            // Helps avoid unnecessary test updates\n            for (const [key, value] of Object.entries(metadata)) {\n                if (value === undefined) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    delete metadata[key];\n                }\n            }\n            const fullRoute = joinUrlParts(baseHref, route);\n            routeTree.insert(fullRoute, metadata);\n        }\n        return {\n            appShellRoute,\n            routeTree,\n            errors,\n        };\n    }\n    return signal ? promiseWithAbort(extract(), signal, 'Routes extraction') : extract();\n}\n\n/**\n * Manages a collection of hooks and provides methods to register and execute them.\n * Hooks are functions that can be invoked with specific arguments to allow modifications or enhancements.\n */\nclass Hooks {\n    /**\n     * A map of hook names to arrays of hook functions.\n     * Each hook name can have multiple associated functions, which are executed in sequence.\n     */\n    store = new Map();\n    /**\n     * Executes all hooks associated with the specified name, passing the given argument to each hook function.\n     * The hooks are invoked sequentially, and the argument may be modified by each hook.\n     *\n     * @template Hook - The type of the hook name. It should be one of the keys of `HooksMapping`.\n     * @param name - The name of the hook whose functions will be executed.\n     * @param context - The input value to be passed to each hook function. The value is mutated by each hook function.\n     * @returns A promise that resolves once all hook functions have been executed.\n     *\n     * @example\n     * ```typescript\n     * const hooks = new Hooks();\n     * hooks.on('html:transform:pre', async (ctx) => {\n     *   ctx.html = ctx.html.replace(/foo/g, 'bar');\n     *   return ctx.html;\n     * });\n     * const result = await hooks.run('html:transform:pre', { html: '<div>foo</div>' });\n     * console.log(result); // '<div>bar</div>'\n     * ```\n     * @internal\n     */\n    async run(name, context) {\n        const hooks = this.store.get(name);\n        switch (name) {\n            case 'html:transform:pre': {\n                if (!hooks) {\n                    return context.html;\n                }\n                const ctx = { ...context };\n                for (const hook of hooks) {\n                    ctx.html = await hook(ctx);\n                }\n                return ctx.html;\n            }\n            default:\n                throw new Error(`Running hook \"${name}\" is not supported.`);\n        }\n    }\n    /**\n     * Registers a new hook function under the specified hook name.\n     * This function should be a function that takes an argument of type `T` and returns a `string` or `Promise<string>`.\n     *\n     * @template Hook - The type of the hook name. It should be one of the keys of `HooksMapping`.\n     * @param name - The name of the hook under which the function will be registered.\n     * @param handler - A function to be executed when the hook is triggered. The handler will be called with an argument\n     *                  that may be modified by the hook functions.\n     *\n     * @remarks\n     * - If there are existing handlers registered under the given hook name, the new handler will be added to the list.\n     * - If no handlers are registered under the given hook name, a new list will be created with the handler as its first element.\n     *\n     * @example\n     * ```typescript\n     * hooks.on('html:transform:pre', async (ctx) => {\n     *   return ctx.html.replace(/foo/g, 'bar');\n     * });\n     * ```\n     */\n    on(name, handler) {\n        const hooks = this.store.get(name);\n        if (hooks) {\n            hooks.push(handler);\n        }\n        else {\n            this.store.set(name, [handler]);\n        }\n    }\n    /**\n     * Checks if there are any hooks registered under the specified name.\n     *\n     * @param name - The name of the hook to check.\n     * @returns `true` if there are hooks registered under the specified name, otherwise `false`.\n     */\n    has(name) {\n        return !!this.store.get(name)?.length;\n    }\n}\n\n/**\n * Manages the application's server routing logic by building and maintaining a route tree.\n *\n * This class is responsible for constructing the route tree from the Angular application\n * configuration and using it to match incoming requests to the appropriate routes.\n */\nclass ServerRouter {\n    routeTree;\n    /**\n     * Creates an instance of the `ServerRouter`.\n     *\n     * @param routeTree - An instance of `RouteTree` that holds the routing information.\n     * The `RouteTree` is used to match request URLs to the appropriate route metadata.\n     */\n    constructor(routeTree) {\n        this.routeTree = routeTree;\n    }\n    /**\n     * Static property to track the ongoing build promise.\n     */\n    static #extractionPromise;\n    /**\n     * Creates or retrieves a `ServerRouter` instance based on the provided manifest and URL.\n     *\n     * If the manifest contains pre-built routes, a new `ServerRouter` is immediately created.\n     * Otherwise, it builds the router by extracting routes from the Angular configuration\n     * asynchronously. This method ensures that concurrent builds are prevented by re-using\n     * the same promise.\n     *\n     * @param manifest - An instance of `AngularAppManifest` that contains the route information.\n     * @param url - The URL for server-side rendering. The URL is needed to configure `ServerPlatformLocation`.\n     * This is necessary to ensure that API requests for relative paths succeed, which is crucial for correct route extraction.\n     * [Reference](https://github.com/angular/angular/blob/d608b857c689d17a7ffa33bbb510301014d24a17/packages/platform-server/src/location.ts#L51)\n     * @returns A promise resolving to a `ServerRouter` instance.\n     */\n    static from(manifest, url) {\n        if (manifest.routes) {\n            const routeTree = RouteTree.fromObject(manifest.routes);\n            return Promise.resolve(new ServerRouter(routeTree));\n        }\n        // Create and store a new promise for the build process.\n        // This prevents concurrent builds by re-using the same promise.\n        ServerRouter.#extractionPromise ??= extractRoutesAndCreateRouteTree({ url, manifest })\n            .then(({ routeTree, errors }) => {\n            if (errors.length > 0) {\n                throw new Error('Error(s) occurred while extracting routes:\\n' +\n                    errors.map((error) => `- ${error}`).join('\\n'));\n            }\n            return new ServerRouter(routeTree);\n        })\n            .finally(() => {\n            ServerRouter.#extractionPromise = undefined;\n        });\n        return ServerRouter.#extractionPromise;\n    }\n    /**\n     * Matches a request URL against the route tree to retrieve route metadata.\n     *\n     * This method strips 'index.html' from the URL if it is present and then attempts\n     * to find a match in the route tree. If a match is found, it returns the associated\n     * route metadata; otherwise, it returns `undefined`.\n     *\n     * @param url - The URL to be matched against the route tree.\n     * @returns The metadata for the matched route or `undefined` if no match is found.\n     */\n    match(url) {\n        // Strip 'index.html' from URL if present.\n        // A request to `http://www.example.com/page/index.html` will render the Angular route corresponding to `http://www.example.com/page`.\n        const { pathname } = stripIndexHtmlFromURL(url);\n        return this.routeTree.match(decodeURIComponent(pathname));\n    }\n}\n\n/**\n * Generates a SHA-256 hash of the provided string.\n *\n * @param data - The input string to be hashed.\n * @returns A promise that resolves to the SHA-256 hash of the input,\n * represented as a hexadecimal string.\n */\nasync function sha256(data) {\n    const encodedData = new TextEncoder().encode(data);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', encodedData);\n    const hashParts = [];\n    for (const h of new Uint8Array(hashBuffer)) {\n        hashParts.push(h.toString(16).padStart(2, '0'));\n    }\n    return hashParts.join('');\n}\n\n/**\n * Pattern used to extract the media query set by Beasties in an `onload` handler.\n */\nconst MEDIA_SET_HANDLER_PATTERN = /^this\\.media=[\"'](.*)[\"'];?$/;\n/**\n * Name of the attribute used to save the Beasties media query so it can be re-assigned on load.\n */\nconst CSP_MEDIA_ATTR = 'ngCspMedia';\n/**\n * Script that dynamically updates the `media` attribute of `<link>` tags based on a custom attribute (`CSP_MEDIA_ATTR`).\n *\n * NOTE:\n * We do not use `document.querySelectorAll('link').forEach((s) => s.addEventListener('load', ...)`\n * because load events are not always triggered reliably on Chrome.\n * See: https://github.com/angular/angular-cli/issues/26932 and https://crbug.com/1521256\n *\n * The script:\n * - Ensures the event target is a `<link>` tag with the `CSP_MEDIA_ATTR` attribute.\n * - Updates the `media` attribute with the value of `CSP_MEDIA_ATTR` and then removes the attribute.\n * - Removes the event listener when all relevant `<link>` tags have been processed.\n * - Uses event capturing (the `true` parameter) since load events do not bubble up the DOM.\n */\nconst LINK_LOAD_SCRIPT_CONTENT = /* @__PURE__ */ (() => `(() => {\n  const CSP_MEDIA_ATTR = '${CSP_MEDIA_ATTR}';\n  const documentElement = document.documentElement;\n\n  // Listener for load events on link tags.\n  const listener = (e) => {\n    const target = e.target;\n    if (\n      !target ||\n      target.tagName !== 'LINK' ||\n      !target.hasAttribute(CSP_MEDIA_ATTR)\n    ) {\n      return;\n    }\n\n    target.media = target.getAttribute(CSP_MEDIA_ATTR);\n    target.removeAttribute(CSP_MEDIA_ATTR);\n\n    if (!document.head.querySelector(\\`link[\\${CSP_MEDIA_ATTR}]\\`)) {\n      documentElement.removeEventListener('load', listener);\n    }\n  };\n\n  documentElement.addEventListener('load', listener, true);\n})();`)();\nclass BeastiesBase extends Beasties {\n}\n/* eslint-enable @typescript-eslint/no-unsafe-declaration-merging */\nclass InlineCriticalCssProcessor extends BeastiesBase {\n    readFile;\n    outputPath;\n    addedCspScriptsDocuments = new WeakSet();\n    documentNonces = new WeakMap();\n    constructor(readFile, outputPath) {\n        super({\n            logger: {\n                // eslint-disable-next-line no-console\n                warn: (s) => console.warn(s),\n                // eslint-disable-next-line no-console\n                error: (s) => console.error(s),\n                info: () => { },\n            },\n            logLevel: 'warn',\n            path: outputPath,\n            publicPath: undefined,\n            compress: false,\n            pruneSource: false,\n            reduceInlineStyles: false,\n            mergeStylesheets: false,\n            // Note: if `preload` changes to anything other than `media`, the logic in\n            // `embedLinkedStylesheet` will have to be updated.\n            preload: 'media',\n            noscriptFallback: true,\n            inlineFonts: true,\n        });\n        this.readFile = readFile;\n        this.outputPath = outputPath;\n    }\n    /**\n     * Override of the Beasties `embedLinkedStylesheet` method\n     * that makes it work with Angular's CSP APIs.\n     */\n    async embedLinkedStylesheet(link, document) {\n        if (link.getAttribute('media') === 'print' && link.next?.name === 'noscript') {\n            // Workaround for https://github.com/GoogleChromeLabs/critters/issues/64\n            // NB: this is only needed for the webpack based builders.\n            const media = link.getAttribute('onload')?.match(MEDIA_SET_HANDLER_PATTERN);\n            if (media) {\n                link.removeAttribute('onload');\n                link.setAttribute('media', media[1]);\n                link?.next?.remove();\n            }\n        }\n        const returnValue = await super.embedLinkedStylesheet(link, document);\n        const cspNonce = this.findCspNonce(document);\n        if (cspNonce) {\n            const beastiesMedia = link.getAttribute('onload')?.match(MEDIA_SET_HANDLER_PATTERN);\n            if (beastiesMedia) {\n                // If there's a Beasties-generated `onload` handler and the file has an Angular CSP nonce,\n                // we have to remove the handler, because it's incompatible with CSP. We save the value\n                // in a different attribute and we generate a script tag with the nonce that uses\n                // `addEventListener` to apply the media query instead.\n                link.removeAttribute('onload');\n                link.setAttribute(CSP_MEDIA_ATTR, beastiesMedia[1]);\n                this.conditionallyInsertCspLoadingScript(document, cspNonce, link);\n            }\n            // Ideally we would hook in at the time Beasties inserts the `style` tags, but there isn't\n            // a way of doing that at the moment so we fall back to doing it any time a `link` tag is\n            // inserted. We mitigate it by only iterating the direct children of the `<head>` which\n            // should be pretty shallow.\n            document.head.children.forEach((child) => {\n                if (child.tagName === 'style' && !child.hasAttribute('nonce')) {\n                    child.setAttribute('nonce', cspNonce);\n                }\n            });\n        }\n        return returnValue;\n    }\n    /**\n     * Finds the CSP nonce for a specific document.\n     */\n    findCspNonce(document) {\n        if (this.documentNonces.has(document)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.documentNonces.get(document);\n        }\n        // HTML attribute are case-insensitive, but the parser used by Beasties is case-sensitive.\n        const nonceElement = document.querySelector('[ngCspNonce], [ngcspnonce]');\n        const cspNonce = nonceElement?.getAttribute('ngCspNonce') || nonceElement?.getAttribute('ngcspnonce') || null;\n        this.documentNonces.set(document, cspNonce);\n        return cspNonce;\n    }\n    /**\n     * Inserts the `script` tag that swaps the critical CSS at runtime,\n     * if one hasn't been inserted into the document already.\n     */\n    conditionallyInsertCspLoadingScript(document, nonce, link) {\n        if (this.addedCspScriptsDocuments.has(document)) {\n            return;\n        }\n        if (document.head.textContent.includes(LINK_LOAD_SCRIPT_CONTENT)) {\n            // Script was already added during the build.\n            this.addedCspScriptsDocuments.add(document);\n            return;\n        }\n        const script = document.createElement('script');\n        script.setAttribute('nonce', nonce);\n        script.textContent = LINK_LOAD_SCRIPT_CONTENT;\n        // Prepend the script to the head since it needs to\n        // run as early as possible, before the `link` tags.\n        document.head.insertBefore(script, link);\n        this.addedCspScriptsDocuments.add(document);\n    }\n}\n\n/**\n * A Least Recently Used (LRU) cache implementation.\n *\n * This cache stores a fixed number of key-value pairs, and when the cache exceeds its capacity,\n * the least recently accessed items are evicted.\n *\n * @template Key - The type of the cache keys.\n * @template Value - The type of the cache values.\n */\nclass LRUCache {\n    /**\n     * The maximum number of items the cache can hold.\n     */\n    capacity;\n    /**\n     * Internal storage for the cache, mapping keys to their associated nodes in the linked list.\n     */\n    cache = new Map();\n    /**\n     * Head of the doubly linked list, representing the most recently used item.\n     */\n    head;\n    /**\n     * Tail of the doubly linked list, representing the least recently used item.\n     */\n    tail;\n    /**\n     * Creates a new LRUCache instance.\n     * @param capacity The maximum number of items the cache can hold.\n     */\n    constructor(capacity) {\n        this.capacity = capacity;\n    }\n    /**\n     * Gets the value associated with the given key.\n     * @param key The key to retrieve the value for.\n     * @returns The value associated with the key, or undefined if the key is not found.\n     */\n    get(key) {\n        const node = this.cache.get(key);\n        if (node) {\n            this.moveToHead(node);\n            return node.value;\n        }\n        return undefined;\n    }\n    /**\n     * Puts a key-value pair into the cache.\n     * If the key already exists, the value is updated.\n     * If the cache is full, the least recently used item is evicted.\n     * @param key The key to insert or update.\n     * @param value The value to associate with the key.\n     */\n    put(key, value) {\n        const cachedNode = this.cache.get(key);\n        if (cachedNode) {\n            // Update existing node\n            cachedNode.value = value;\n            this.moveToHead(cachedNode);\n            return;\n        }\n        // Create a new node\n        const newNode = { key, value, prev: undefined, next: undefined };\n        this.cache.set(key, newNode);\n        this.addToHead(newNode);\n        if (this.cache.size > this.capacity) {\n            // Evict the LRU item\n            const tail = this.removeTail();\n            if (tail) {\n                this.cache.delete(tail.key);\n            }\n        }\n    }\n    /**\n     * Adds a node to the head of the linked list.\n     * @param node The node to add.\n     */\n    addToHead(node) {\n        node.next = this.head;\n        node.prev = undefined;\n        if (this.head) {\n            this.head.prev = node;\n        }\n        this.head = node;\n        if (!this.tail) {\n            this.tail = node;\n        }\n    }\n    /**\n     * Removes a node from the linked list.\n     * @param node The node to remove.\n     */\n    removeNode(node) {\n        if (node.prev) {\n            node.prev.next = node.next;\n        }\n        else {\n            this.head = node.next;\n        }\n        if (node.next) {\n            node.next.prev = node.prev;\n        }\n        else {\n            this.tail = node.prev;\n        }\n    }\n    /**\n     * Moves a node to the head of the linked list.\n     * @param node The node to move.\n     */\n    moveToHead(node) {\n        this.removeNode(node);\n        this.addToHead(node);\n    }\n    /**\n     * Removes the tail node from the linked list.\n     * @returns The removed tail node, or undefined if the list is empty.\n     */\n    removeTail() {\n        const node = this.tail;\n        if (node) {\n            this.removeNode(node);\n        }\n        return node;\n    }\n}\n\n/**\n * Maximum number of critical CSS entries the cache can store.\n * This value determines the capacity of the LRU (Least Recently Used) cache, which stores critical CSS for pages.\n */\nconst MAX_INLINE_CSS_CACHE_ENTRIES = 50;\n/**\n * A mapping of `RenderMode` enum values to corresponding string representations.\n *\n * This record is used to map each `RenderMode` to a specific string value that represents\n * the server context. The string values are used internally to differentiate\n * between various rendering strategies when processing routes.\n *\n * - `RenderMode.Prerender` maps to `'ssg'` (Static Site Generation).\n * - `RenderMode.Server` maps to `'ssr'` (Server-Side Rendering).\n * - `RenderMode.Client` maps to an empty string `''` (Client-Side Rendering, no server context needed).\n */\nconst SERVER_CONTEXT_VALUE = {\n    [RenderMode.Prerender]: 'ssg',\n    [RenderMode.Server]: 'ssr',\n    [RenderMode.Client]: '',\n};\n/**\n * Represents a locale-specific Angular server application managed by the server application engine.\n *\n * The `AngularServerApp` class handles server-side rendering and asset management for a specific locale.\n */\nclass AngularServerApp {\n    options;\n    /**\n     * Whether prerendered routes should be rendered on demand or served directly.\n     *\n     * @see {@link AngularServerAppOptions.allowStaticRouteRender} for more details.\n     */\n    allowStaticRouteRender;\n    /**\n     * Hooks for extending or modifying server behavior.\n     *\n     * @see {@link AngularServerAppOptions.hooks} for more details.\n     */\n    hooks;\n    /**\n     * Constructs an instance of `AngularServerApp`.\n     *\n     * @param options Optional configuration options for the server application.\n     */\n    constructor(options = {}) {\n        this.options = options;\n        this.allowStaticRouteRender = this.options.allowStaticRouteRender ?? false;\n        this.hooks = options.hooks ?? new Hooks();\n        if (this.manifest.inlineCriticalCss) {\n            this.inlineCriticalCssProcessor = new InlineCriticalCssProcessor((path) => {\n                const fileName = path.split('/').pop() ?? path;\n                return this.assets.getServerAsset(fileName).text();\n            });\n        }\n    }\n    /**\n     * The manifest associated with this server application.\n     */\n    manifest = getAngularAppManifest();\n    /**\n     * An instance of ServerAsset that handles server-side asset.\n     */\n    assets = new ServerAssets(this.manifest);\n    /**\n     * The router instance used for route matching and handling.\n     */\n    router;\n    /**\n     * The `inlineCriticalCssProcessor` is responsible for handling critical CSS inlining.\n     */\n    inlineCriticalCssProcessor;\n    /**\n     * The bootstrap mechanism for the server application.\n     */\n    boostrap;\n    /**\n     * Decorder used to convert a string to a Uint8Array.\n     */\n    textDecoder = new TextEncoder();\n    /**\n     * A cache that stores critical CSS to avoid re-processing for every request, improving performance.\n     * This cache uses a Least Recently Used (LRU) eviction policy.\n     *\n     * @see {@link MAX_INLINE_CSS_CACHE_ENTRIES} for the maximum number of entries this cache can hold.\n     */\n    criticalCssLRUCache = new LRUCache(MAX_INLINE_CSS_CACHE_ENTRIES);\n    /**\n     * Handles an incoming HTTP request by serving prerendered content, performing server-side rendering,\n     * or delivering a static file for client-side rendered routes based on the `RenderMode` setting.\n     *\n     * @param request - The HTTP request to handle.\n     * @param requestContext - Optional context for rendering, such as metadata associated with the request.\n     * @returns A promise that resolves to the resulting HTTP response object, or `null` if no matching Angular route is found.\n     *\n     * @remarks A request to `https://www.example.com/page/index.html` will serve or render the Angular route\n     * corresponding to `https://www.example.com/page`.\n     */\n    async handle(request, requestContext) {\n        const url = new URL(request.url);\n        this.router ??= await ServerRouter.from(this.manifest, url);\n        const matchedRoute = this.router.match(url);\n        if (!matchedRoute) {\n            // Not a known Angular route.\n            return null;\n        }\n        const { redirectTo, status, renderMode } = matchedRoute;\n        if (redirectTo !== undefined) {\n            return createRedirectResponse(buildPathWithParams(redirectTo, url.pathname), status);\n        }\n        if (renderMode === RenderMode.Prerender) {\n            const response = await this.handleServe(request, matchedRoute);\n            if (response) {\n                return response;\n            }\n        }\n        return promiseWithAbort(this.handleRendering(request, matchedRoute, requestContext), request.signal, `Request for: ${request.url}`);\n    }\n    /**\n     * Handles serving a prerendered static asset if available for the matched route.\n     *\n     * This method only supports `GET` and `HEAD` requests.\n     *\n     * @param request - The incoming HTTP request for serving a static page.\n     * @param matchedRoute - The metadata of the matched route for rendering.\n     * @returns A promise that resolves to a `Response` object if the prerendered page is found, or `null`.\n     */\n    async handleServe(request, matchedRoute) {\n        const { headers, renderMode } = matchedRoute;\n        if (renderMode !== RenderMode.Prerender) {\n            return null;\n        }\n        const { method } = request;\n        if (method !== 'GET' && method !== 'HEAD') {\n            return null;\n        }\n        const assetPath = this.buildServerAssetPathFromRequest(request);\n        const { manifest: { locale }, assets, } = this;\n        if (!assets.hasServerAsset(assetPath)) {\n            return null;\n        }\n        const { text, hash, size } = assets.getServerAsset(assetPath);\n        const etag = `\"${hash}\"`;\n        return request.headers.get('if-none-match') === etag\n            ? new Response(undefined, { status: 304, statusText: 'Not Modified' })\n            : new Response(await text(), {\n                headers: {\n                    'Content-Length': size.toString(),\n                    'ETag': etag,\n                    'Content-Type': 'text/html;charset=UTF-8',\n                    ...(locale !== undefined ? { 'Content-Language': locale } : {}),\n                    ...headers,\n                },\n            });\n    }\n    /**\n     * Handles the server-side rendering process for the given HTTP request.\n     * This method matches the request URL to a route and performs rendering if a matching route is found.\n     *\n     * @param request - The incoming HTTP request to be processed.\n     * @param matchedRoute - The metadata of the matched route for rendering.\n     * @param requestContext - Optional additional context for rendering, such as request metadata.\n     *\n     * @returns A promise that resolves to the rendered response, or null if no matching route is found.\n     */\n    async handleRendering(request, matchedRoute, requestContext) {\n        const { renderMode, headers, status, preload } = matchedRoute;\n        if (!this.allowStaticRouteRender && renderMode === RenderMode.Prerender) {\n            return null;\n        }\n        const url = new URL(request.url);\n        const platformProviders = [];\n        const { manifest: { bootstrap, locale }, assets, } = this;\n        // Initialize the response with status and headers if available.\n        const responseInit = {\n            status,\n            headers: new Headers({\n                'Content-Type': 'text/html;charset=UTF-8',\n                ...(locale !== undefined ? { 'Content-Language': locale } : {}),\n                ...headers,\n            }),\n        };\n        if (renderMode === RenderMode.Server) {\n            // Configure platform providers for request and response only for SSR.\n            platformProviders.push({\n                provide: REQUEST,\n                useValue: request,\n            }, {\n                provide: REQUEST_CONTEXT,\n                useValue: requestContext,\n            }, {\n                provide: RESPONSE_INIT,\n                useValue: responseInit,\n            });\n        }\n        else if (renderMode === RenderMode.Client) {\n            // Serve the client-side rendered version if the route is configured for CSR.\n            let html = await this.assets.getServerAsset('index.csr.html').text();\n            html = await this.runTransformsOnHtml(html, url, preload);\n            return new Response(html, responseInit);\n        }\n        if (locale !== undefined) {\n            platformProviders.push({\n                provide: LOCALE_ID,\n                useValue: locale,\n            });\n        }\n        this.boostrap ??= await bootstrap();\n        let html = await assets.getIndexServerHtml().text();\n        html = await this.runTransformsOnHtml(html, url, preload);\n        const result = await renderAngular(html, this.boostrap, url, platformProviders, SERVER_CONTEXT_VALUE[renderMode]);\n        if (result.hasNavigationError) {\n            return null;\n        }\n        if (result.redirectTo) {\n            return createRedirectResponse(result.redirectTo, status);\n        }\n        if (renderMode === RenderMode.Prerender) {\n            const renderedHtml = await result.content();\n            const finalHtml = await this.inlineCriticalCss(renderedHtml, url);\n            return new Response(finalHtml, responseInit);\n        }\n        // Use a stream to send the response before finishing rendering and inling critical CSS, improving performance via header flushing.\n        const stream = new ReadableStream({\n            start: async (controller) => {\n                const renderedHtml = await result.content();\n                const finalHtml = await this.inlineCriticalCssWithCache(renderedHtml, url);\n                controller.enqueue(finalHtml);\n                controller.close();\n            },\n        });\n        return new Response(stream, responseInit);\n    }\n    /**\n     * Inlines critical CSS into the given HTML content.\n     *\n     * @param html The HTML content to process.\n     * @param url The URL associated with the request, for logging purposes.\n     * @returns A promise that resolves to the HTML with inlined critical CSS.\n     */\n    async inlineCriticalCss(html, url) {\n        const { inlineCriticalCssProcessor } = this;\n        if (!inlineCriticalCssProcessor) {\n            return html;\n        }\n        try {\n            return await inlineCriticalCssProcessor.process(html);\n        }\n        catch (error) {\n            // eslint-disable-next-line no-console\n            console.error(`An error occurred while inlining critical CSS for: ${url}.`, error);\n            return html;\n        }\n    }\n    /**\n     * Inlines critical CSS into the given HTML content.\n     * This method uses a cache to avoid reprocessing the same HTML content multiple times.\n     *\n     * @param html The HTML content to process.\n     * @param url The URL associated with the request, for logging purposes.\n     * @returns A promise that resolves to the HTML with inlined critical CSS.\n     */\n    async inlineCriticalCssWithCache(html, url) {\n        const { inlineCriticalCssProcessor, criticalCssLRUCache, textDecoder } = this;\n        if (!inlineCriticalCssProcessor) {\n            return textDecoder.encode(html);\n        }\n        const cacheKey = url.toString();\n        const cached = criticalCssLRUCache.get(cacheKey);\n        const shaOfContentPreInlinedCss = await sha256(html);\n        if (cached?.shaOfContentPreInlinedCss === shaOfContentPreInlinedCss) {\n            return cached.contentWithCriticialCSS;\n        }\n        const processedHtml = await this.inlineCriticalCss(html, url);\n        const finalHtml = textDecoder.encode(processedHtml);\n        criticalCssLRUCache.put(cacheKey, {\n            shaOfContentPreInlinedCss,\n            contentWithCriticialCSS: finalHtml,\n        });\n        return finalHtml;\n    }\n    /**\n     * Constructs the asset path on the server based on the provided HTTP request.\n     *\n     * This method processes the incoming request URL to derive a path corresponding\n     * to the requested asset. It ensures the path points to the correct file (e.g.,\n     * `index.html`) and removes any base href if it is not part of the asset path.\n     *\n     * @param request - The incoming HTTP request object.\n     * @returns The server-relative asset path derived from the request.\n     */\n    buildServerAssetPathFromRequest(request) {\n        let { pathname: assetPath } = new URL(request.url);\n        if (!assetPath.endsWith('/index.html')) {\n            // Append \"index.html\" to build the default asset path.\n            assetPath = joinUrlParts(assetPath, 'index.html');\n        }\n        const { baseHref } = this.manifest;\n        // Check if the asset path starts with the base href and the base href is not (`/` or ``).\n        if (baseHref.length > 1 && assetPath.startsWith(baseHref)) {\n            // Remove the base href from the start of the asset path to align with server-asset expectations.\n            assetPath = assetPath.slice(baseHref.length);\n        }\n        return stripLeadingSlash(assetPath);\n    }\n    /**\n     * Runs the registered transform hooks on the given HTML content.\n     *\n     * @param html - The raw HTML content to be transformed.\n     * @param url - The URL associated with the HTML content, used for context during transformations.\n     * @param preload - An array of URLs representing the JavaScript resources to preload.\n     * @returns A promise that resolves to the transformed HTML string.\n     */\n    async runTransformsOnHtml(html, url, preload) {\n        if (this.hooks.has('html:transform:pre')) {\n            html = await this.hooks.run('html:transform:pre', { html, url });\n        }\n        if (preload?.length) {\n            html = appendPreloadHintsToHtml(html, preload);\n        }\n        return html;\n    }\n}\nlet angularServerApp;\n/**\n * Retrieves or creates an instance of `AngularServerApp`.\n * - If an instance of `AngularServerApp` already exists, it will return the existing one.\n * - If no instance exists, it will create a new one with the provided options.\n *\n * @param options Optional configuration options for the server application.\n *\n * @returns The existing or newly created instance of `AngularServerApp`.\n */\nfunction getOrCreateAngularServerApp(options) {\n    return (angularServerApp ??= new AngularServerApp(options));\n}\n/**\n * Destroys the existing `AngularServerApp` instance, releasing associated resources and resetting the\n * reference to `undefined`.\n *\n * This function is primarily used to enable the recreation of the `AngularServerApp` instance,\n * typically when server configuration or application state needs to be refreshed.\n */\nfunction destroyAngularServerApp() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Need to clean up GENERATED_COMP_IDS map in `@angular/core`.\n        // Otherwise an incorrect component ID generation collision detected warning will be displayed in development.\n        // See: https://github.com/angular/angular-cli/issues/25924\n        _resetCompiledComponents();\n    }\n    angularServerApp = undefined;\n}\n/**\n * Appends module preload hints to an HTML string for specified JavaScript resources.\n * This function enhances the HTML by injecting `<link rel=\"modulepreload\">` elements\n * for each provided resource, allowing browsers to preload the specified JavaScript\n * modules for better performance.\n *\n * @param html - The original HTML string to which preload hints will be added.\n * @param preload - An array of URLs representing the JavaScript resources to preload.\n * @returns The modified HTML string with the preload hints injected before the closing `</body>` tag.\n *          If `</body>` is not found, the links are not added.\n */\nfunction appendPreloadHintsToHtml(html, preload) {\n    const bodyCloseIdx = html.lastIndexOf('</body>');\n    if (bodyCloseIdx === -1) {\n        return html;\n    }\n    // Note: Module preloads should be placed at the end before the closing body tag to avoid a performance penalty.\n    // Placing them earlier can cause the browser to prioritize downloading these modules\n    // over other critical page resources like images, CSS, and fonts.\n    return [\n        html.slice(0, bodyCloseIdx),\n        ...preload.map((val) => `<link rel=\"modulepreload\" href=\"${val}\">`),\n        html.slice(bodyCloseIdx),\n    ].join('\\n');\n}\n/**\n * Creates an HTTP redirect response with a specified location and status code.\n *\n * @param location - The URL to which the response should redirect.\n * @param status - The HTTP status code for the redirection. Defaults to 302 (Found).\n *                 See: https://developer.mozilla.org/en-US/docs/Web/API/Response/redirect_static#status\n * @returns A `Response` object representing the HTTP redirect.\n */\nfunction createRedirectResponse(location, status = 302) {\n    return new Response(null, {\n        status,\n        headers: {\n            'Location': location,\n        },\n    });\n}\n\n/**\n * Extracts a potential locale ID from a given URL based on the specified base path.\n *\n * This function parses the URL to locate a potential locale identifier that immediately\n * follows the base path segment in the URL's pathname. If the URL does not contain a valid\n * locale ID, an empty string is returned.\n *\n * @param url - The full URL from which to extract the locale ID.\n * @param basePath - The base path used as the reference point for extracting the locale ID.\n * @returns The extracted locale ID if present, or an empty string if no valid locale ID is found.\n *\n * @example\n * ```js\n * const url = new URL('https://example.com/base/en/page');\n * const basePath = '/base';\n * const localeId = getPotentialLocaleIdFromUrl(url, basePath);\n * console.log(localeId); // Output: 'en'\n * ```\n */\nfunction getPotentialLocaleIdFromUrl(url, basePath) {\n    const { pathname } = url;\n    // Move forward of the base path section.\n    let start = basePath.length;\n    if (pathname[start] === '/') {\n        start++;\n    }\n    // Find the next forward slash.\n    let end = pathname.indexOf('/', start);\n    if (end === -1) {\n        end = pathname.length;\n    }\n    // Extract the potential locale id.\n    return pathname.slice(start, end);\n}\n/**\n * Parses the `Accept-Language` header and returns a list of locale preferences with their respective quality values.\n *\n * The `Accept-Language` header is typically a comma-separated list of locales, with optional quality values\n * in the form of `q=<value>`. If no quality value is specified, a default quality of `1` is assumed.\n * Special case: if the header is `*`, it returns the default locale with a quality of `1`.\n *\n * @param header - The value of the `Accept-Language` header, typically a comma-separated list of locales\n *                  with optional quality values (e.g., `en-US;q=0.8,fr-FR;q=0.9`). If the header is `*`,\n *                  it represents a wildcard for any language, returning the default locale.\n *\n * @returns A `ReadonlyMap` where the key is the locale (e.g., `en-US`, `fr-FR`), and the value is\n *          the associated quality value (a number between 0 and 1). If no quality value is provided,\n *          a default of `1` is used.\n *\n * @example\n * ```js\n * parseLanguageHeader('en-US;q=0.8,fr-FR;q=0.9')\n * // returns new Map([['en-US', 0.8], ['fr-FR', 0.9]])\n\n * parseLanguageHeader('*')\n * // returns new Map([['*', 1]])\n * ```\n */\nfunction parseLanguageHeader(header) {\n    if (header === '*') {\n        return new Map([['*', 1]]);\n    }\n    const parsedValues = header\n        .split(',')\n        .map((item) => {\n        const [locale, qualityValue] = item.split(';', 2).map((v) => v.trim());\n        let quality = qualityValue?.startsWith('q=') ? parseFloat(qualityValue.slice(2)) : undefined;\n        if (typeof quality !== 'number' || isNaN(quality) || quality < 0 || quality > 1) {\n            quality = 1; // Invalid quality value defaults to 1\n        }\n        return [locale, quality];\n    })\n        .sort(([_localeA, qualityA], [_localeB, qualityB]) => qualityB - qualityA);\n    return new Map(parsedValues);\n}\n/**\n * Gets the preferred locale based on the highest quality value from the provided `Accept-Language` header\n * and the set of available locales.\n *\n * This function adheres to the HTTP `Accept-Language` header specification as defined in\n * [RFC 7231](https://datatracker.ietf.org/doc/html/rfc7231#section-5.3.5), including:\n * - Case-insensitive matching of language tags.\n * - Quality value handling (e.g., `q=1`, `q=0.8`). If no quality value is provided, it defaults to `q=1`.\n * - Prefix matching (e.g., `en` matching `en-US` or `en-GB`).\n *\n * @param header - The `Accept-Language` header string to parse and evaluate. It may contain multiple\n *                 locales with optional quality values, for example: `'en-US;q=0.8,fr-FR;q=0.9'`.\n * @param supportedLocales - An array of supported locales (e.g., `['en-US', 'fr-FR']`),\n *                           representing the locales available in the application.\n * @returns The best matching locale from the supported languages, or `undefined` if no match is found.\n *\n * @example\n * ```js\n * getPreferredLocale('en-US;q=0.8,fr-FR;q=0.9', ['en-US', 'fr-FR', 'de-DE'])\n * // returns 'fr-FR'\n *\n * getPreferredLocale('en;q=0.9,fr-FR;q=0.8', ['en-US', 'fr-FR', 'de-DE'])\n * // returns 'en-US'\n *\n * getPreferredLocale('es-ES;q=0.7', ['en-US', 'fr-FR', 'de-DE'])\n * // returns undefined\n * ```\n */\nfunction getPreferredLocale(header, supportedLocales) {\n    if (supportedLocales.length < 2) {\n        return supportedLocales[0];\n    }\n    const parsedLocales = parseLanguageHeader(header);\n    // Handle edge cases:\n    // - No preferred locales provided.\n    // - Only one supported locale.\n    // - Wildcard preference.\n    if (parsedLocales.size === 0 || (parsedLocales.size === 1 && parsedLocales.has('*'))) {\n        return supportedLocales[0];\n    }\n    // Create a map for case-insensitive lookup of supported locales.\n    // Keys are normalized (lowercase) locale values, values are original casing.\n    const normalizedSupportedLocales = new Map();\n    for (const locale of supportedLocales) {\n        normalizedSupportedLocales.set(normalizeLocale(locale), locale);\n    }\n    // Iterate through parsed locales in descending order of quality.\n    let bestMatch;\n    const qualityZeroNormalizedLocales = new Set();\n    for (const [locale, quality] of parsedLocales) {\n        const normalizedLocale = normalizeLocale(locale);\n        if (quality === 0) {\n            qualityZeroNormalizedLocales.add(normalizedLocale);\n            continue; // Skip locales with quality value of 0.\n        }\n        // Exact match found.\n        if (normalizedSupportedLocales.has(normalizedLocale)) {\n            return normalizedSupportedLocales.get(normalizedLocale);\n        }\n        // If an exact match is not found, try prefix matching (e.g., \"en\" matches \"en-US\").\n        // Store the first prefix match encountered, as it has the highest quality value.\n        if (bestMatch !== undefined) {\n            continue;\n        }\n        const [languagePrefix] = normalizedLocale.split('-', 1);\n        for (const supportedLocale of normalizedSupportedLocales.keys()) {\n            if (supportedLocale.startsWith(languagePrefix)) {\n                bestMatch = normalizedSupportedLocales.get(supportedLocale);\n                break; // No need to continue searching for this locale.\n            }\n        }\n    }\n    if (bestMatch !== undefined) {\n        return bestMatch;\n    }\n    // Return the first locale that is not quality zero.\n    for (const [normalizedLocale, locale] of normalizedSupportedLocales) {\n        if (!qualityZeroNormalizedLocales.has(normalizedLocale)) {\n            return locale;\n        }\n    }\n}\n/**\n * Normalizes a locale string by converting it to lowercase.\n *\n * @param locale - The locale string to normalize.\n * @returns The normalized locale string in lowercase.\n *\n * @example\n * ```ts\n * const normalized = normalizeLocale('EN-US');\n * console.log(normalized); // Output: \"en-us\"\n * ```\n */\nfunction normalizeLocale(locale) {\n    return locale.toLowerCase();\n}\n\n/**\n * Angular server application engine.\n * Manages Angular server applications (including localized ones), handles rendering requests,\n * and optionally transforms index HTML before rendering.\n *\n * @remarks This class should be instantiated once and used as a singleton across the server-side\n * application to ensure consistent handling of rendering requests and resource management.\n */\nclass AngularAppEngine {\n    /**\n     * A flag to enable or disable the rendering of prerendered routes.\n     *\n     * Typically used during development to avoid prerendering all routes ahead of time,\n     * allowing them to be rendered on the fly as requested.\n     *\n     * @private\n     */\n    static ɵallowStaticRouteRender = false;\n    /**\n     * Hooks for extending or modifying the behavior of the server application.\n     * These hooks are used by the Angular CLI when running the development server and\n     * provide extensibility points for the application lifecycle.\n     *\n     * @private\n     */\n    static ɵhooks = /* #__PURE__*/ new Hooks();\n    /**\n     * The manifest for the server application.\n     */\n    manifest = getAngularAppEngineManifest();\n    /**\n     * A map of supported locales from the server application's manifest.\n     */\n    supportedLocales = Object.keys(this.manifest.supportedLocales);\n    /**\n     * A cache that holds entry points, keyed by their potential locale string.\n     */\n    entryPointsCache = new Map();\n    /**\n     * Handles an incoming HTTP request by serving prerendered content, performing server-side rendering,\n     * or delivering a static file for client-side rendered routes based on the `RenderMode` setting.\n     *\n     * @param request - The HTTP request to handle.\n     * @param requestContext - Optional context for rendering, such as metadata associated with the request.\n     * @returns A promise that resolves to the resulting HTTP response object, or `null` if no matching Angular route is found.\n     *\n     * @remarks A request to `https://www.example.com/page/index.html` will serve or render the Angular route\n     * corresponding to `https://www.example.com/page`.\n     */\n    async handle(request, requestContext) {\n        const serverApp = await this.getAngularServerAppForRequest(request);\n        if (serverApp) {\n            return serverApp.handle(request, requestContext);\n        }\n        if (this.supportedLocales.length > 1) {\n            // Redirect to the preferred language if i18n is enabled.\n            return this.redirectBasedOnAcceptLanguage(request);\n        }\n        return null;\n    }\n    /**\n     * Handles requests for the base path when i18n is enabled.\n     * Redirects the user to a locale-specific path based on the `Accept-Language` header.\n     *\n     * @param request The incoming request.\n     * @returns A `Response` object with a 302 redirect, or `null` if i18n is not enabled\n     *          or the request is not for the base path.\n     */\n    redirectBasedOnAcceptLanguage(request) {\n        const { basePath, supportedLocales } = this.manifest;\n        // If the request is not for the base path, it's not our responsibility to handle it.\n        const { pathname } = new URL(request.url);\n        if (pathname !== basePath) {\n            return null;\n        }\n        // For requests to the base path (typically '/'), attempt to extract the preferred locale\n        // from the 'Accept-Language' header.\n        const preferredLocale = getPreferredLocale(request.headers.get('Accept-Language') || '*', this.supportedLocales);\n        if (preferredLocale) {\n            const subPath = supportedLocales[preferredLocale];\n            if (subPath !== undefined) {\n                return new Response(null, {\n                    status: 302, // Use a 302 redirect as language preference may change.\n                    headers: {\n                        'Location': joinUrlParts(pathname, subPath),\n                        'Vary': 'Accept-Language',\n                    },\n                });\n            }\n        }\n        return null;\n    }\n    /**\n     * Retrieves the Angular server application instance for a given request.\n     *\n     * This method checks if the request URL corresponds to an Angular application entry point.\n     * If so, it initializes or retrieves an instance of the Angular server application for that entry point.\n     * Requests that resemble file requests (except for `/index.html`) are skipped.\n     *\n     * @param request - The incoming HTTP request object.\n     * @returns A promise that resolves to an `AngularServerApp` instance if a valid entry point is found,\n     * or `null` if no entry point matches the request URL.\n     */\n    async getAngularServerAppForRequest(request) {\n        // Skip if the request looks like a file but not `/index.html`.\n        const url = new URL(request.url);\n        const entryPoint = await this.getEntryPointExportsForUrl(url);\n        if (!entryPoint) {\n            return null;\n        }\n        // Note: Using `instanceof` is not feasible here because `AngularServerApp` will\n        // be located in separate bundles, making `instanceof` checks unreliable.\n        const ɵgetOrCreateAngularServerApp = entryPoint.ɵgetOrCreateAngularServerApp;\n        const serverApp = ɵgetOrCreateAngularServerApp({\n            allowStaticRouteRender: AngularAppEngine.ɵallowStaticRouteRender,\n            hooks: AngularAppEngine.ɵhooks,\n        });\n        return serverApp;\n    }\n    /**\n     * Retrieves the exports for a specific entry point, caching the result.\n     *\n     * @param potentialLocale - The locale string used to find the corresponding entry point.\n     * @returns A promise that resolves to the entry point exports or `undefined` if not found.\n     */\n    getEntryPointExports(potentialLocale) {\n        const cachedEntryPoint = this.entryPointsCache.get(potentialLocale);\n        if (cachedEntryPoint) {\n            return cachedEntryPoint;\n        }\n        const { entryPoints } = this.manifest;\n        const entryPoint = entryPoints[potentialLocale];\n        if (!entryPoint) {\n            return undefined;\n        }\n        const entryPointExports = entryPoint();\n        this.entryPointsCache.set(potentialLocale, entryPointExports);\n        return entryPointExports;\n    }\n    /**\n     * Retrieves the entry point for a given URL by determining the locale and mapping it to\n     * the appropriate application bundle.\n     *\n     * This method determines the appropriate entry point and locale for rendering the application by examining the URL.\n     * If there is only one entry point available, it is returned regardless of the URL.\n     * Otherwise, the method extracts a potential locale identifier from the URL and looks up the corresponding entry point.\n     *\n     * @param url - The URL of the request.\n     * @returns A promise that resolves to the entry point exports or `undefined` if not found.\n     */\n    getEntryPointExportsForUrl(url) {\n        const { basePath } = this.manifest;\n        if (this.supportedLocales.length === 1) {\n            return this.getEntryPointExports('');\n        }\n        const potentialLocale = getPotentialLocaleIdFromUrl(url, basePath);\n        return this.getEntryPointExports(potentialLocale) ?? this.getEntryPointExports('');\n    }\n}\n\n/**\n * Annotates a request handler function with metadata, marking it as a special\n * handler.\n *\n * @param handler - The request handler function to be annotated.\n * @returns The same handler function passed in, with metadata attached.\n *\n * @example\n * Example usage in a Hono application:\n * ```ts\n * const app = new Hono();\n * export default createRequestHandler(app.fetch);\n * ```\n *\n * @example\n * Example usage in a H3 application:\n * ```ts\n * const app = createApp();\n * const handler = toWebHandler(app);\n * export default createRequestHandler(handler);\n * ```\n */\nfunction createRequestHandler(handler) {\n    handler['__ng_request_handler__'] = true;\n    return handler;\n}\n\nexport { AngularAppEngine, PrerenderFallback, RenderMode, createRequestHandler, provideServerRendering, withAppShell, withRoutes, InlineCriticalCssProcessor as ɵInlineCriticalCssProcessor, destroyAngularServerApp as ɵdestroyAngularServerApp, extractRoutesAndCreateRouteTree as ɵextractRoutesAndCreateRouteTree, getOrCreateAngularServerApp as ɵgetOrCreateAngularServerApp, getRoutesFromAngularRouterConfig as ɵgetRoutesFromAngularRouterConfig, setAngularAppEngineManifest as ɵsetAngularAppEngineManifest, setAngularAppManifest as ɵsetAngularAppManifest };\n\n"],
  "mappings": "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",
  "names": ["input", "path", "root", "a", "spacing", "node", "stringify", "cloneNode", "Node", "result", "stringifier", "Comment", "parse", "Root", "Container", "Document", "dirname", "join", "isAbsolute", "resolve", "sep", "_a", "relative", "Parser", "open", "parser", "processor", "warning", "warnOnce", "postcss", "filter", "SelectorType", "AttributeAction", "CharCode", "subselects", "getName", "ElementType", "DocumentPosition", "href", "getText", "rule", "elem", "compileToken", "CharCodes", "BinTrieFlags", "EntityDecoderState", "DecodingMode", "State", "QuoteType", "cp", "node2", "rule2", "container", "document", "link", "path", "Console", "resolve", "ServerRenderingFeatureKind", "RenderMode", "PrerenderFallback", "provideServerRendering", "node", "_a", "loadChildren", "matchedMetaData", "document", "result", "readFile", "link", "html"]
}
